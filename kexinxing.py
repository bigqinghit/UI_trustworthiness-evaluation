# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'kexinxing2.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
import hit_rc


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")

        # QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
        # MainWindow.resize(1000, 737)

        MainWindow.setWindowState(QtCore.Qt.WindowMinimized)
        self.desktop = QtWidgets.QApplication.desktop()
        self.screenRect = self.desktop.screenGeometry()
        self.screenheight = self.screenRect.height()
        self.screenwidth = self.screenRect.width()
        # print("Screen height {}".format(self.screenheight))
        # print("Screen width {}".format(self.screenwidth))
        MainWindow.setFixedSize(self.screenwidth, self.screenheight - 50)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(30, 90, 100, 255));")
        self.centralwidget.setObjectName("centralwidget")

        # 总体
        self.verticalLayout_centralwidget = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_centralwidget.setObjectName("verticalLayout_centralwidget")
        self.verticalLayout_all = QtWidgets.QVBoxLayout()
        self.verticalLayout_all.setObjectName("verticalLayout_all")

        # 标题
        self.frame_title = QtWidgets.QFrame(self.centralwidget)
        self.frame_title.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_title.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_title.setObjectName("frame_title")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_title)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_title)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setMinimumSize(QtCore.QSize(50, 80))
        self.pushButton_2.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton_2.setStyleSheet("background-color: transparent")
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.label_title = QtWidgets.QLabel(self.frame_title)
        font = QtGui.QFont()
        font.setFamily("Berlin Sans FB Demi")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "background-color: transparent;")
        self.label_title.setAlignment(QtCore.Qt.AlignCenter)
        self.label_title.setObjectName("label_title")
        self.horizontalLayout_2.addWidget(self.label_title)
        self.pushButton = QtWidgets.QPushButton(self.frame_title)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMinimumSize(QtCore.QSize(50, 80))
        self.pushButton.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton.setStyleSheet("border-image: url(:/hit/logo.png);\n"
                                      "background-color: transparent;")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)
        self.verticalLayout_all.addWidget(self.frame_title)

        # 数据评估
        self.horizontalLayout_main = QtWidgets.QHBoxLayout()
        self.horizontalLayout_main.setObjectName("horizontalLayout_main")
        self.verticalLayout_dataeva = QtWidgets.QVBoxLayout()
        self.verticalLayout_dataeva.setObjectName("verticalLayout_dataeva")
        self.verticalLayout_dataeva_1 = QtWidgets.QVBoxLayout()
        self.verticalLayout_dataeva_1.setObjectName("verticalLayout_dataeva_1")
        self.label_dataeva = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_dataeva.setFont(font)
        self.label_dataeva.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_dataeva.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_dataeva.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_dataeva.setAlignment(QtCore.Qt.AlignCenter)
        self.label_dataeva.setObjectName("label_dataeva")
        self.verticalLayout_dataeva_1.addWidget(self.label_dataeva)
        self.frame_dataeva = QtWidgets.QFrame(self.centralwidget)
        self.frame_dataeva.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                         "border-color: rgb(255, 97, 6);\n"
                                         "")
        self.frame_dataeva.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_dataeva.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_dataeva.setLineWidth(3)
        self.frame_dataeva.setMidLineWidth(3)
        self.frame_dataeva.setObjectName("frame_dataeva")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_dataeva)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_dataeva_main = QtWidgets.QGridLayout()
        self.gridLayout_dataeva_main.setContentsMargins(0, -1, -1, -1)
        self.gridLayout_dataeva_main.setObjectName("gridLayout_dataeva_main")
        self.textBrowser_LAP = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_LAP.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_LAP.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_LAP.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_LAP.setObjectName("textBrowser_LAP")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_LAP, 0, 4, 1, 2)
        self.label_SMD2 = QtWidgets.QLabel(self.frame_dataeva)
        self.label_SMD2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_SMD2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SMD2.setObjectName("label_SMD2")
        self.gridLayout_dataeva_main.addWidget(self.label_SMD2, 1, 3, 1, 1)
        self.label_SMD = QtWidgets.QLabel(self.frame_dataeva)
        self.label_SMD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_SMD.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SMD.setObjectName("label_SMD")
        self.gridLayout_dataeva_main.addWidget(self.label_SMD, 1, 0, 1, 1)
        self.label_ENT = QtWidgets.QLabel(self.frame_dataeva)
        self.label_ENT.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_ENT.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ENT.setObjectName("label_ENT")
        self.gridLayout_dataeva_main.addWidget(self.label_ENT, 3, 3, 1, 1)
        self.label_VOL = QtWidgets.QLabel(self.frame_dataeva)
        self.label_VOL.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_VOL.setAlignment(QtCore.Qt.AlignCenter)
        self.label_VOL.setObjectName("label_VOL")
        self.gridLayout_dataeva_main.addWidget(self.label_VOL, 3, 0, 1, 1)
        self.textBrowser_VOL = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_VOL.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_VOL.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_VOL.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_VOL.setObjectName("textBrowser_VOL")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_VOL, 3, 1, 1, 2)
        self.label_VAR = QtWidgets.QLabel(self.frame_dataeva)
        self.label_VAR.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_VAR.setAlignment(QtCore.Qt.AlignCenter)
        self.label_VAR.setObjectName("label_VAR")
        self.gridLayout_dataeva_main.addWidget(self.label_VAR, 2, 0, 1, 1)
        self.textBrowser_ENE = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_ENE.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_ENE.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_ENE.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_ENE.setObjectName("textBrowser_ENE")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_ENE, 2, 4, 1, 2)
        self.label_BRE = QtWidgets.QLabel(self.frame_dataeva)
        self.label_BRE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_BRE.setAlignment(QtCore.Qt.AlignCenter)
        self.label_BRE.setObjectName("label_BRE")
        self.gridLayout_dataeva_main.addWidget(self.label_BRE, 0, 0, 1, 1)
        self.textBrowser_SMD2 = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_SMD2.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_SMD2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_SMD2.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_SMD2.setObjectName("textBrowser_SMD2")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_SMD2, 1, 4, 1, 2)
        self.textBrowser_VAR = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_VAR.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_VAR.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_VAR.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_VAR.setObjectName("textBrowser_VAR")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_VAR, 2, 1, 1, 2)
        self.pushButton_run_dataeva = QtWidgets.QPushButton(self.frame_dataeva)
        self.pushButton_run_dataeva.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_run_dataeva.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_run_dataeva.setObjectName("pushButton_run_dataeva")
        self.gridLayout_dataeva_main.addWidget(self.pushButton_run_dataeva, 2, 6, 1, 1)
        self.pushButton_dataeva = QtWidgets.QPushButton(self.frame_dataeva)
        self.pushButton_dataeva.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_dataeva.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.pushButton_dataeva.setObjectName("pushButton_dataeva")
        self.gridLayout_dataeva_main.addWidget(self.pushButton_dataeva, 1, 6, 1, 1)
        self.textBrowser_SMD = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_SMD.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_SMD.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_SMD.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_SMD.setObjectName("textBrowser_SMD")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_SMD, 1, 1, 1, 2)
        self.textBrowser_ENT = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_ENT.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_ENT.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_ENT.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_ENT.setObjectName("textBrowser_ENT")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_ENT, 3, 4, 1, 2)
        self.label_ENE = QtWidgets.QLabel(self.frame_dataeva)
        self.label_ENE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_ENE.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ENE.setObjectName("label_ENE")
        self.gridLayout_dataeva_main.addWidget(self.label_ENE, 2, 3, 1, 1)
        self.textBrowser_BRE = QtWidgets.QTextBrowser(self.frame_dataeva)
        self.textBrowser_BRE.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_BRE.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_BRE.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser_BRE.setObjectName("textBrowser_BRE")
        self.gridLayout_dataeva_main.addWidget(self.textBrowser_BRE, 0, 1, 1, 2)
        self.label_LAP = QtWidgets.QLabel(self.frame_dataeva)
        self.label_LAP.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_LAP.setAlignment(QtCore.Qt.AlignCenter)
        self.label_LAP.setObjectName("label_LAP")
        self.gridLayout_dataeva_main.addWidget(self.label_LAP, 0, 3, 1, 1)
        self.gridLayout_dataeva_main.setColumnStretch(0, 1)
        self.verticalLayout.addLayout(self.gridLayout_dataeva_main)
        self.verticalLayout_dataeva_1.addWidget(self.frame_dataeva)
        self.verticalLayout_dataeva.addLayout(self.verticalLayout_dataeva_1)
        self.verticalLayout_filter = QtWidgets.QVBoxLayout()
        self.verticalLayout_filter.setObjectName("verticalLayout_filter")
        self.label_filter = QtWidgets.QLabel(self.centralwidget)
        self.label_filter.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_filter.setFont(font)
        self.label_filter.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_filter.setAlignment(QtCore.Qt.AlignCenter)
        self.label_filter.setObjectName("label_filter")
        self.verticalLayout_filter.addWidget(self.label_filter)
        self.frame_filter = QtWidgets.QFrame(self.centralwidget)
        self.frame_filter.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                        "border-color: rgb(255, 97, 6);\n"
                                        "")
        self.frame_filter.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_filter.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_filter.setObjectName("frame_filter")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_filter)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.lineEdit_BRE_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_BRE_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_BRE_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_BRE_filter.setText('20427990')
        self.lineEdit_BRE_filter.setObjectName("lineEdit_BRE_filter")
        self.gridLayout_2.addWidget(self.lineEdit_BRE_filter, 0, 1, 1, 1)
        self.lineEdit_ENE_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_ENE_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_ENE_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_ENE_filter.setText('4')
        self.lineEdit_ENE_filter.setObjectName("lineEdit_ENE_filter")
        self.gridLayout_2.addWidget(self.lineEdit_ENE_filter, 2, 3, 1, 1)
        self.label_ENE_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_ENE_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_ENE_filter.setObjectName("label_ENE_filter")
        self.gridLayout_2.addWidget(self.label_ENE_filter, 2, 2, 1, 1)
        self.label_LAP_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_LAP_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_LAP_filter.setObjectName("label_LAP_filter")
        self.gridLayout_2.addWidget(self.label_LAP_filter, 0, 2, 1, 1)
        self.pushButton_TS_filter = QtWidgets.QPushButton(self.frame_filter)
        self.pushButton_TS_filter.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_TS_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_TS_filter.setObjectName("pushButton_TS_filter")
        self.gridLayout_2.addWidget(self.pushButton_TS_filter, 1, 4, 1, 1)
        self.label_SMD_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_SMD_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_SMD_filter.setObjectName("label_SMD_filter")
        self.gridLayout_2.addWidget(self.label_SMD_filter, 1, 0, 1, 1)
        self.label_VAR_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_VAR_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_VAR_filter.setObjectName("label_VAR_filter")
        self.gridLayout_2.addWidget(self.label_VAR_filter, 2, 0, 1, 1)
        self.lineEdit_LAP_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_LAP_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_LAP_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_LAP_filter.setText('759')
        self.lineEdit_LAP_filter.setObjectName("lineEdit_LAP_filter")
        self.gridLayout_2.addWidget(self.lineEdit_LAP_filter, 0, 3, 1, 1)
        self.lineEdit_VOL_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_VOL_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_VOL_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_VOL_filter.setText('50758917')
        self.lineEdit_VOL_filter.setObjectName("lineEdit_VOL_filter")
        self.gridLayout_2.addWidget(self.lineEdit_VOL_filter, 3, 1, 1, 1)
        self.lineEdit_SMD2_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_SMD2_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_SMD2_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_SMD2_filter.setText('5706759')
        self.lineEdit_SMD2_filter.setObjectName("lineEdit_SMD2_filter")
        self.gridLayout_2.addWidget(self.lineEdit_SMD2_filter, 1, 3, 1, 1)
        self.label_ENT_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_ENT_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_ENT_filter.setObjectName("label_ENT_filter")
        self.gridLayout_2.addWidget(self.label_ENT_filter, 3, 2, 1, 1)
        self.pushButton_SD_filter = QtWidgets.QPushButton(self.frame_filter)
        self.pushButton_SD_filter.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_SD_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_SD_filter.setObjectName("pushButton_SD_filter")
        self.gridLayout_2.addWidget(self.pushButton_SD_filter, 0, 4, 1, 1)
        self.label_VOL_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_VOL_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_VOL_filter.setObjectName("label_VOL_filter")
        self.gridLayout_2.addWidget(self.label_VOL_filter, 3, 0, 1, 1)
        self.label_SMD2_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_SMD2_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color:transparent;")
        self.label_SMD2_filter.setObjectName("label_SMD2_filter")
        self.gridLayout_2.addWidget(self.label_SMD2_filter, 1, 2, 1, 1)
        self.lineEdit_VAR_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_VAR_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_VAR_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_VAR_filter.setText('58121230')
        self.lineEdit_VAR_filter.setObjectName("lineEdit_VAR_filter")
        self.gridLayout_2.addWidget(self.lineEdit_VAR_filter, 2, 1, 1, 1)
        self.lineEdit_ENT_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_ENT_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_ENT_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_ENT_filter.setText('4')
        self.lineEdit_ENT_filter.setObjectName("lineEdit_ENT_filter")
        self.gridLayout_2.addWidget(self.lineEdit_ENT_filter, 3, 3, 1, 1)
        self.label_BRE_filter = QtWidgets.QLabel(self.frame_filter)
        self.label_BRE_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_BRE_filter.setObjectName("label_BRE_filter")
        self.gridLayout_2.addWidget(self.label_BRE_filter, 0, 0, 1, 1)
        self.lineEdit_SMD_filter = QtWidgets.QLineEdit(self.frame_filter)
        self.lineEdit_SMD_filter.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_SMD_filter.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.lineEdit_SMD_filter.setText('964230')
        self.lineEdit_SMD_filter.setObjectName("lineEdit_SMD_filter")
        self.gridLayout_2.addWidget(self.lineEdit_SMD_filter, 1, 1, 1, 1)
        self.pushButton_run_filter = QtWidgets.QPushButton(self.frame_filter)
        self.pushButton_run_filter.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_run_filter.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.pushButton_run_filter.setObjectName("pushButton_run_filter")
        self.gridLayout_2.addWidget(self.pushButton_run_filter, 2, 4, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.frame_filter)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser.setStyleSheet("color: rgb(255, 255, 255);\n""background-color: rgb(18, 34, 70);")
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout_2.addWidget(self.textBrowser, 3, 4, 1, 1)
        self.gridLayout_2.setRowStretch(0, 1)
        self.gridLayout_2.setRowStretch(1, 1)
        self.gridLayout_2.setRowStretch(2, 1)
        self.gridLayout_2.setRowStretch(3, 1)
        self.verticalLayout_filter.addWidget(self.frame_filter)
        self.verticalLayout_filter.setStretch(0, 1)
        self.verticalLayout_filter.setStretch(1, 7)
        self.verticalLayout_dataeva.addLayout(self.verticalLayout_filter)
        self.horizontalLayout_main.addLayout(self.verticalLayout_dataeva)
        self.verticalLayout_datasetadv = QtWidgets.QVBoxLayout()
        self.verticalLayout_datasetadv.setObjectName("verticalLayout_datasetadv")
        self.label_datasetadv = QtWidgets.QLabel(self.centralwidget)
        self.label_datasetadv.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_datasetadv.setFont(font)
        self.label_datasetadv.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_datasetadv.setAlignment(QtCore.Qt.AlignCenter)
        self.label_datasetadv.setObjectName("label_datasetadv")
        self.verticalLayout_datasetadv.addWidget(self.label_datasetadv)
        self.frame_datasetadv = QtWidgets.QFrame(self.centralwidget)
        self.frame_datasetadv.setStyleSheet("")
        self.frame_datasetadv.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_datasetadv.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_datasetadv.setLineWidth(3)
        self.frame_datasetadv.setMidLineWidth(3)
        self.frame_datasetadv.setObjectName("frame_datasetadv")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_datasetadv)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.pushButton_FSBH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_FSBH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_FSBH.setObjectName("pushButton_FSBH")
        self.gridLayout_3.addWidget(self.pushButton_FSBH, 2, 0, 1, 1)
        self.label_dataubl = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_dataubl.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_dataubl.setFont(font)
        self.label_dataubl.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color:transparent;")
        self.label_dataubl.setAlignment(QtCore.Qt.AlignCenter)
        self.label_dataubl.setObjectName("label_dataubl")
        self.gridLayout_3.addWidget(self.label_dataubl, 8, 1, 1, 10)
        self.label_YSKJ_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_YSKJ_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_YSKJ_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_YSKJ_S.setText("")
        self.label_YSKJ_S.setObjectName("label_YSKJ_S")
        self.gridLayout_3.addWidget(self.label_YSKJ_S, 1, 7, 2, 2)
        self.pushButton_CJ = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_CJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.pushButton_CJ.setObjectName("pushButton_CJ")
        self.gridLayout_3.addWidget(self.pushButton_CJ, 2, 3, 1, 1)
        self.label_YSKJ = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_YSKJ.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_YSKJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_YSKJ.setAlignment(QtCore.Qt.AlignCenter)
        self.label_YSKJ.setObjectName("label_YSKJ")
        self.gridLayout_3.addWidget(self.label_YSKJ, 1, 6, 1, 1)
        self.label_datasetubl = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_datasetubl.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_datasetubl.setFont(font)
        self.label_datasetubl.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color:transparent;")
        self.label_datasetubl.setAlignment(QtCore.Qt.AlignCenter)
        self.label_datasetubl.setObjectName("label_datasetubl")
        self.gridLayout_3.addWidget(self.label_datasetubl, 0, 1, 1, 10)
        self.pushButton_GBYSKJ = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_GBYSKJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_GBYSKJ.setObjectName("pushButton_GBYSKJ")
        self.gridLayout_3.addWidget(self.pushButton_GBYSKJ, 2, 6, 1, 1)
        self.label_FSBH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_FSBH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_FSBH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_FSBH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FSBH.setObjectName("label_FSBH")
        self.gridLayout_3.addWidget(self.label_FSBH, 1, 0, 1, 1)
        self.label_CJ = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_CJ.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_CJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color:transparent;")
        self.label_CJ.setAlignment(QtCore.Qt.AlignCenter)
        self.label_CJ.setObjectName("label_CJ")
        self.gridLayout_3.addWidget(self.label_CJ, 1, 3, 1, 1)
        self.label_SIG_S_2 = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SIG_S_2.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_SIG_S_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color:transparent;")
        self.label_SIG_S_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SIG_S_2.setObjectName("label_SIG_S_2")
        self.gridLayout_3.addWidget(self.label_SIG_S_2, 1, 9, 1, 1)
        self.pushButton_SIG = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_SIG.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_SIG.setObjectName("pushButton_SIG")
        self.gridLayout_3.addWidget(self.pushButton_SIG, 2, 9, 1, 1)
        self.label_SIG_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SIG_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_SIG_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_SIG_S.setText("")
        self.label_SIG_S.setObjectName("label_SIG_S")
        self.gridLayout_3.addWidget(self.label_SIG_S, 1, 10, 2, 2)
        self.label_CJ_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_CJ_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_CJ_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_CJ_S.setText("")
        self.label_CJ_S.setObjectName("label_CJ_S")
        self.gridLayout_3.addWidget(self.label_CJ_S, 1, 4, 2, 2)
        self.label_FSBH_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_FSBH_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_FSBH_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_FSBH_S.setText("")
        self.label_FSBH_S.setObjectName("label_FSBH_S")
        self.gridLayout_3.addWidget(self.label_FSBH_S, 1, 1, 2, 2)
        self.label_FZ = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_FZ.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_FZ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color:transparent;")
        self.label_FZ.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FZ.setObjectName("label_FZ")
        self.gridLayout_3.addWidget(self.label_FZ, 6, 0, 1, 1)
        self.pushButton_FZ = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_FZ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.pushButton_FZ.setObjectName("pushButton_FZ")
        self.gridLayout_3.addWidget(self.pushButton_FZ, 7, 0, 1, 1)
        self.label_FZ_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_FZ_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_FZ_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_FZ_S.setText("")
        self.label_FZ_S.setObjectName("label_FZ_S")
        self.gridLayout_3.addWidget(self.label_FZ_S, 6, 1, 2, 2)
        self.label_HDT = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_HDT.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_HDT.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "background-color:transparent;")
        self.label_HDT.setAlignment(QtCore.Qt.AlignCenter)
        self.label_HDT.setObjectName("label_HDT")
        self.gridLayout_3.addWidget(self.label_HDT, 6, 3, 1, 1)
        self.pushButton_HDT = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_HDT.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_HDT.setObjectName("pushButton_HDT")
        self.gridLayout_3.addWidget(self.pushButton_HDT, 7, 3, 1, 1)
        self.label_HDT_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_HDT_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_HDT_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_HDT_S.setText("")
        self.label_HDT_S.setObjectName("label_HDT_S")
        self.gridLayout_3.addWidget(self.label_HDT_S, 6, 4, 2, 2)
        self.label_GAMMA = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GAMMA.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_GAMMA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "background-color:transparent;")
        self.label_GAMMA.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GAMMA.setObjectName("label_GAMMA")
        self.gridLayout_3.addWidget(self.label_GAMMA, 6, 6, 1, 1)
        self.pushButton_GAMMA = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_GAMMA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_GAMMA.setObjectName("pushButton_GAMMA")
        self.gridLayout_3.addWidget(self.pushButton_GAMMA, 7, 6, 1, 1)
        self.label_GAMMA_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GAMMA_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_GAMMA_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_GAMMA_S.setText("")
        self.label_GAMMA_S.setObjectName("label_GAMMA_S")
        self.gridLayout_3.addWidget(self.label_GAMMA_S, 6, 7, 2, 2)
        self.label_XXDBD = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_XXDBD.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_XXDBD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "background-color:transparent;")
        self.label_XXDBD.setAlignment(QtCore.Qt.AlignCenter)
        self.label_XXDBD.setObjectName("label_XXDBD")
        self.gridLayout_3.addWidget(self.label_XXDBD, 6, 9, 1, 1)
        self.pushButton_XXDBD = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_XXDBD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_XXDBD.setObjectName("pushButton_XXDBD")
        self.gridLayout_3.addWidget(self.pushButton_XXDBD, 7, 9, 1, 1)
        self.label_XXDBD_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_XXDBD_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_XXDBD_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_XXDBD_S.setText("")
        self.label_XXDBD_S.setObjectName("label_XXDBD_S")
        self.gridLayout_3.addWidget(self.label_XXDBD_S, 6, 10, 2, 2)
        self.label_GSZY = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GSZY.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_GSZY.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_GSZY.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GSZY.setObjectName("label_GSZY")
        self.gridLayout_3.addWidget(self.label_GSZY, 9, 0, 1, 1)
        self.pushButton_GSZY = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_GSZY.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_GSZY.setObjectName("pushButton_GSZY")
        self.gridLayout_3.addWidget(self.pushButton_GSZY, 10, 0, 1, 1)
        self.label_YDMH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_YDMH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_YDMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_YDMH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_YDMH.setObjectName("label_YDMH")
        self.gridLayout_3.addWidget(self.label_YDMH, 11, 0, 1, 1)
        self.pushButton_YDMH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_YDMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_YDMH.setObjectName("pushButton_YDMH")
        self.gridLayout_3.addWidget(self.pushButton_YDMH, 12, 0, 1, 1)
        self.label_GSZY_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GSZY_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_GSZY_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_GSZY_S.setText("")
        self.label_GSZY_S.setObjectName("label_GSZY_S")
        self.gridLayout_3.addWidget(self.label_GSZY_S, 9, 1, 2, 2)
        self.label_GSMH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GSMH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_GSMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_GSMH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_GSMH.setObjectName("label_GSMH")
        self.gridLayout_3.addWidget(self.label_GSMH, 9, 3, 1, 1)
        self.label_SBMH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SBMH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_SBMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_SBMH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SBMH.setObjectName("label_SBMH")
        self.gridLayout_3.addWidget(self.label_SBMH, 11, 3, 1, 1)
        self.pushButton_GSMH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_GSMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_GSMH.setObjectName("pushButton_GSMH")
        self.gridLayout_3.addWidget(self.pushButton_GSMH, 10, 3, 1, 1)
        self.label_PJMH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_PJMH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_PJMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_PJMH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_PJMH.setObjectName("label_PJMH")
        self.gridLayout_3.addWidget(self.label_PJMH, 9, 6, 1, 1)
        self.pushButton_PJMH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_PJMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_PJMH.setObjectName("pushButton_PJMH")
        self.gridLayout_3.addWidget(self.pushButton_PJMH, 10, 6, 1, 1)
        self.label_PJMH_2 = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_PJMH_2.setMinimumSize(QtCore.QSize(0, 160))
        self.label_PJMH_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_PJMH_2.setText("")
        self.label_PJMH_2.setObjectName("label_PJMH_2")
        self.gridLayout_3.addWidget(self.label_PJMH_2, 9, 7, 2, 2)
        self.label_GSMH_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_GSMH_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_GSMH_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_GSMH_S.setText("")
        self.label_GSMH_S.setObjectName("label_GSMH_S")
        self.gridLayout_3.addWidget(self.label_GSMH_S, 9, 4, 2, 2)
        self.label_YDMH_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_YDMH_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_YDMH_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_YDMH_S.setText("")
        self.label_YDMH_S.setObjectName("label_YDMH_S")
        self.gridLayout_3.addWidget(self.label_YDMH_S, 11, 1, 2, 2)
        self.pushButton_SBMH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_SBMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_SBMH.setObjectName("pushButton_SBMH")
        self.gridLayout_3.addWidget(self.pushButton_SBMH, 12, 3, 1, 1)
        self.label_SBMH_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SBMH_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_SBMH_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_SBMH_S.setText("")
        self.label_SBMH_S.setObjectName("label_SBMH_S")
        self.gridLayout_3.addWidget(self.label_SBMH_S, 11, 4, 2, 2)
        self.label_SCKJ = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SCKJ.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_SCKJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_SCKJ.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SCKJ.setObjectName("label_SCKJ")
        self.gridLayout_3.addWidget(self.label_SCKJ, 11, 6, 1, 1)
        self.pushButton_SCKJ = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_SCKJ.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_SCKJ.setObjectName("pushButton_SCKJ")
        self.gridLayout_3.addWidget(self.pushButton_SCKJ, 12, 6, 1, 1)
        self.label_SJYS = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SJYS.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_SJYS.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_SJYS.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SJYS.setObjectName("label_SJYS")
        self.gridLayout_3.addWidget(self.label_SJYS, 11, 9, 1, 1)
        self.pushButton_SJSDBHD = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_SJSDBHD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.pushButton_SJSDBHD.setObjectName("pushButton_SJSDBHD")
        self.gridLayout_3.addWidget(self.pushButton_SJSDBHD, 12, 9, 1, 1)
        self.label_ZZMH = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_ZZMH.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_ZZMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color:transparent;")
        self.label_ZZMH.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ZZMH.setObjectName("label_ZZMH")
        self.gridLayout_3.addWidget(self.label_ZZMH, 9, 9, 1, 1)
        self.pushButton_ZZMH = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_ZZMH.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_ZZMH.setObjectName("pushButton_ZZMH")
        self.gridLayout_3.addWidget(self.pushButton_ZZMH, 10, 9, 1, 1)
        self.label_ZZMH_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_ZZMH_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_ZZMH_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_ZZMH_S.setText("")
        self.label_ZZMH_S.setObjectName("label_ZZMH_S")
        self.gridLayout_3.addWidget(self.label_ZZMH_S, 9, 10, 2, 2)
        self.label_SJYS_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SJYS_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_SJYS_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_SJYS_S.setText("")
        self.label_SJYS_S.setObjectName("label_SJYS_S")
        self.gridLayout_3.addWidget(self.label_SJYS_S, 11, 10, 2, 2)
        self.label_SCKJ_S = QtWidgets.QLabel(self.frame_datasetadv)
        self.label_SCKJ_S.setMinimumSize(QtCore.QSize(0, 160))
        self.label_SCKJ_S.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_SCKJ_S.setText("")
        self.label_SCKJ_S.setObjectName("label_SCKJ_S")
        self.gridLayout_3.addWidget(self.label_SCKJ_S, 11, 7, 2, 2)
        self.pushButton_TD_dataset = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_TD_dataset.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.pushButton_TD_dataset.setObjectName("pushButton_TD_dataset")
        self.gridLayout_3.addWidget(self.pushButton_TD_dataset, 14, 4, 1, 3)
        self.pushButton_SD_dataset = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_SD_dataset.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.pushButton_SD_dataset.setObjectName("pushButton_SD_dataset")
        self.gridLayout_3.addWidget(self.pushButton_SD_dataset, 14, 0, 1, 3)
        self.pushButton_YX_dataset = QtWidgets.QPushButton(self.frame_datasetadv)
        self.pushButton_YX_dataset.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.pushButton_YX_dataset.setObjectName("pushButton_YX_dataset")
        self.gridLayout_3.addWidget(self.pushButton_YX_dataset, 14, 9, 1, 3)
        self.verticalLayout_datasetadv.addWidget(self.frame_datasetadv)
        self.horizontalLayout_main.addLayout(self.verticalLayout_datasetadv)
        self.horizontalLayout_main.setStretch(0, 1)
        self.horizontalLayout_main.setStretch(1, 3)
        self.verticalLayout_all.addLayout(self.horizontalLayout_main)

        # 分类-除标题外所有
        self.horizontalLayout_main = QtWidgets.QHBoxLayout()
        self.horizontalLayout_main.setObjectName("horizontalLayout_main")

        # 分类-正常工作模式
        self.verticalLayout_gener = QtWidgets.QVBoxLayout()
        self.verticalLayout_gener.setObjectName("verticalLayout_gener")
        self.label_gener = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener.setFont(font)
        self.label_gener.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_gener.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_gener.setAlignment(QtCore.Qt.AlignCenter)
        self.label_gener.setObjectName("label_gener")
        self.verticalLayout_gener.addWidget(self.label_gener)
        self.frame_gener = QtWidgets.QFrame(self.centralwidget)
        self.frame_gener.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                       "border-color: rgb(255, 97, 6);\n"
                                       "")
        self.frame_gener.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_gener.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_gener.setLineWidth(3)
        self.frame_gener.setMidLineWidth(3)
        self.frame_gener.setObjectName("frame_gener")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_gener)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_gener_main = QtWidgets.QGridLayout()
        self.gridLayout_gener_main.setContentsMargins(0, -1, -1, -1)
        self.gridLayout_gener_main.setObjectName("gridLayout_gener_main")
        # self.textBrowser_R = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_R.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_R.setObjectName("textBrowser_R")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_R, 3, 1, 1, 2)
        # self.label_P = QtWidgets.QLabel(self.frame_gener)
        # # self.label_P.setStyleSheet("color: rgb(255, 255, 255);background-color:transparent;")
        # self.label_P.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_P.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        # self.label_P.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_P.setObjectName("label_P")
        # # self.gridLayout_gener_main.addWidget(self.label_P, 2, 3, 1, 1)
        # self.gridLayout_gener_main.addWidget(self.label_P, 2, 4, 1, 1)
        # self.textBrowser_K = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_K.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_K.setObjectName("textBrowser_K")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_K, 4, 4, 1, 1)
        # self.label_J = QtWidgets.QLabel(self.frame_gener)
        # self.label_J.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_J.setToolTip('杰卡德相似系数是衡量两个集合相似度的一种指标。杰卡德相似系数越大代表样本分类的越准确，所以杰卡德相似系数越大越好。')
        # self.label_J.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_J.setObjectName("label_J")
        # # self.gridLayout_gener_main.addWidget(self.label_J, 5, 3, 1, 1)
        # self.gridLayout_gener_main.addWidget(self.label_J, 5, 4, 1, 1)
        # self.label_AUC = QtWidgets.QLabel(self.frame_gener)
        # self.label_AUC.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_AUC.setToolTip('AUC是ROC曲线下面积的简称，AUC的值就是处于ROC curve下方的那部分面积的大小。AUC越大的分类器，判断准确性越高。')
        # self.label_AUC.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_AUC.setObjectName("label_AUC")
        # self.gridLayout_gener_main.addWidget(self.label_AUC, 4, 0, 1, 1)
        # self.label_ROC = QtWidgets.QLabel(self.frame_gener)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(30)
        # sizePolicy.setHeightForWidth(self.label_ROC.sizePolicy().hasHeightForWidth())
        # self.label_ROC.setSizePolicy(sizePolicy)
        # self.label_ROC.setMinimumSize(QtCore.QSize(0, 0))
        # self.label_ROC.setStyleSheet("background-color: rgb(18, 34, 70);")
        # self.label_ROC.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_ROC.setText("")
        # self.label_ROC.setObjectName("label_ROC")
        # self.gridLayout_gener_main.addWidget(self.label_ROC, 0, 3, 1, 2)
        # self.textBrowser_F1 = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_F1.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_F1.setObjectName("textBrowser_F1")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_F1, 3, 4, 1, 1)
        # self.textBrowser_P = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_P.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_P.setObjectName("textBrowser_P")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_P, 2, 4, 1, 1)
        # self.label_R = QtWidgets.QLabel(self.frame_gener)
        # self.label_R.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_R.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        # self.label_R.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_R.setObjectName("label_R")
        # self.gridLayout_gener_main.addWidget(self.label_R, 3, 0, 1, 1)
        # self.label_H = QtWidgets.QLabel(self.frame_gener)
        # self.label_H.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_H.setToolTip('海明距离是衡量两个集合相似度的一种指标。海明距离越大代表样本分类的越准确，所以海明距离越大越好。')
        # self.label_H.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_H.setObjectName("label_H")
        # self.gridLayout_gener_main.addWidget(self.label_H, 5, 0, 1, 1)
        # self.label_ROC_2 = QtWidgets.QLabel(self.frame_gener)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(30)
        # sizePolicy.setHeightForWidth(self.label_ROC_2.sizePolicy().hasHeightForWidth())
        # self.label_ROC_2.setSizePolicy(sizePolicy)
        # self.label_ROC_2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_ROC_2.setToolTip('ROC是反映敏感性和特异性连续变量的综合指标,是用构图法揭示敏感性和特异性的相互关系，它通过将连续变量设定出多个不同的临界值，从而计算出一系列敏感性和特异性，再以敏感性为纵坐标、（1-特异性）为横坐标绘制成曲线。')
        # self.label_ROC_2.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_ROC_2.setObjectName("label_ROC_2")
        # self.gridLayout_gener_main.addWidget(self.label_ROC_2, 1, 3, 1, 2)
        # self.textBrowser_8 = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_8.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_8.setObjectName("textBrowser_8")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_8, 5, 4, 1, 1)
        # self.label_F1 = QtWidgets.QLabel(self.frame_gener)
        # self.label_F1.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_F1.setToolTip('F1值是统计学中用来衡量二分类模型精确度的一种指标，用于测量不均衡数据的精度。它同时兼顾了分类模型的精确率和召回率。F1越大代表样本分类的越准确，所以F1越大越好。')
        # self.label_F1.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_F1.setObjectName("label_F1")
        # self.gridLayout_gener_main.addWidget(self.label_F1, 3, 3, 1, 1)
        # self.label_A = QtWidgets.QLabel(self.frame_gener)
        # self.label_A.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_A.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        # self.label_A.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_A.setObjectName("label_A")
        # self.gridLayout_gener_main.addWidget(self.label_A, 2, 0, 1, 1)
        # self.label_C_2 = QtWidgets.QLabel(self.frame_gener)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.label_C_2.sizePolicy().hasHeightForWidth())
        # self.label_C_2.setSizePolicy(sizePolicy)
        # self.label_C_2.setMinimumSize(QtCore.QSize(0, 0))
        # self.label_C_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        # self.label_C_2.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_C_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        # self.label_C_2.setFrameShadow(QtWidgets.QFrame.Plain)
        # self.label_C_2.setLineWidth(3)
        # self.label_C_2.setMidLineWidth(0)
        # self.label_C_2.setText("")
        # self.label_C_2.setObjectName("label_C_2")
        # self.gridLayout_gener_main.addWidget(self.label_C_2, 0, 0, 1, 3)
        # self.label_K = QtWidgets.QLabel(self.frame_gener)
        # self.label_K.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_K.setToolTip('Kappa系数是一种度量分类结果一致性的统计量, 是度量分类器性能稳定性的依据。Kappa系数值越大, 分类器性能越稳定。')
        # self.label_K.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_K.setObjectName("label_K")
        # self.gridLayout_gener_main.addWidget(self.label_K, 4, 3, 1, 1)
        # self.textBrowser_A = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_A.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_A.setObjectName("textBrowser_A")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_A, 2, 1, 1, 2)
        # self.label_C = QtWidgets.QLabel(self.frame_gener)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(30)
        # sizePolicy.setHeightForWidth(self.label_C.sizePolicy().hasHeightForWidth())
        # self.label_C.setSizePolicy(sizePolicy)
        # font = QtGui.QFont()
        # font.setPointSize(9)
        # self.label_C.setFont(font)
        # self.label_C.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_C.setToolTip('混淆矩阵可以画出分类的详细预测结果。对于包含多个类别的任务，混淆矩阵很清晰的反映出各类别之间的错分概率。')
        # self.label_C.setLocale(QtCore.QLocale(QtCore.QLocale.Catalan, QtCore.QLocale.Spain))
        # self.label_C.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_C.setObjectName("label_C")
        # self.gridLayout_gener_main.addWidget(self.label_C, 1, 0, 1, 3)
        #
        # self.pushButton_C = QtWidgets.QPushButton(self.frame_gener)
        # self.pushButton_C.setObjectName("pushButton_C")
        # self.gridLayout_gener_main.addWidget(self.pushButton_C, 1, 3, 1, 1)
        # self.pushButton_ROC = QtWidgets.QPushButton(self.frame_gener)
        # self.pushButton_ROC.setObjectName("pushButton_ROC")
        # self.gridLayout_gener_main.addWidget(self.pushButton_ROC, 1, 6, 1, 1)

        self.label_P = QtWidgets.QLabel(self.frame_gener)
        self.label_P.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_P.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        self.label_P.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P.setObjectName("label_P")
        self.gridLayout_gener_main.addWidget(self.label_P, 2, 4, 1, 1)
        self.label_J = QtWidgets.QLabel(self.frame_gener)
        self.label_J.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_J.setToolTip('杰卡德相似系数是衡量两个集合相似度的一种指标。杰卡德相似系数越大代表样本分类的越准确，所以杰卡德相似系数越大越好。')
        self.label_J.setAlignment(QtCore.Qt.AlignCenter)
        self.label_J.setObjectName("label_J")
        self.gridLayout_gener_main.addWidget(self.label_J, 5, 4, 1, 1)
        self.label_AUC = QtWidgets.QLabel(self.frame_gener)
        self.label_AUC.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_AUC.setToolTip('AUC是ROC曲线下面积的简称，AUC的值就是处于ROC curve下方的那部分面积的大小。AUC越大的分类器，判断准确性越高。')
        self.label_AUC.setAlignment(QtCore.Qt.AlignCenter)
        self.label_AUC.setObjectName("label_AUC")
        self.gridLayout_gener_main.addWidget(self.label_AUC, 4, 0, 1, 1)
        self.label_H = QtWidgets.QLabel(self.frame_gener)
        self.label_H.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_H.setToolTip('海明距离是衡量两个集合相似度的一种指标。海明距离越大代表样本分类的越准确，所以海明距离越大越好。')
        self.label_H.setAlignment(QtCore.Qt.AlignCenter)
        self.label_H.setObjectName("label_H")
        self.gridLayout_gener_main.addWidget(self.label_H, 5, 0, 1, 1)
        self.label_R = QtWidgets.QLabel(self.frame_gener)
        self.label_R.setStyleSheet(
            "QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_R.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        self.label_R.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R.setObjectName("label_R")
        self.gridLayout_gener_main.addWidget(self.label_R, 3, 0, 1, 1)
        self.label_F1 = QtWidgets.QLabel(self.frame_gener)
        self.label_F1.setStyleSheet(
            "QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_F1.setToolTip('F1值是统计学中用来衡量二分类模型精确度的一种指标，用于测量不均衡数据的精度。它同时兼顾了分类模型的精确率和召回率。F1越大代表样本分类的越准确，所以F1越大越好。')
        self.label_F1.setAlignment(QtCore.Qt.AlignCenter)
        self.label_F1.setObjectName("label_F1")
        self.gridLayout_gener_main.addWidget(self.label_F1, 3, 4, 1, 1)
        self.label_A = QtWidgets.QLabel(self.frame_gener)
        self.label_A.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_A.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        self.label_A.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A.setObjectName("label_A")
        self.gridLayout_gener_main.addWidget(self.label_A, 2, 0, 1, 1)
        self.label_K = QtWidgets.QLabel(self.frame_gener)
        self.label_K.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_K.setToolTip('Kappa系数是一种度量分类结果一致性的统计量, 是度量分类器性能稳定性的依据。Kappa系数值越大, 分类器性能越稳定。')
        self.label_K.setAlignment(QtCore.Qt.AlignCenter)
        self.label_K.setObjectName("label_K")
        self.gridLayout_gener_main.addWidget(self.label_K, 4, 4, 1, 1)
        self.textBrowser_P = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_P.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_P.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_P.setObjectName("textBrowser_P")
        self.gridLayout_gener_main.addWidget(self.textBrowser_P, 2, 5, 1, 2)
        self.textBrowser_F1 = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_F1.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_F1.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_F1.setObjectName("textBrowser_F1")
        self.gridLayout_gener_main.addWidget(self.textBrowser_F1, 3, 5, 1, 2)
        self.textBrowser_K = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_K.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_K.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_K.setObjectName("textBrowser_K")
        self.gridLayout_gener_main.addWidget(self.textBrowser_K, 4, 5, 1, 2)
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_8.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_8.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.gridLayout_gener_main.addWidget(self.textBrowser_8, 5, 5, 1, 2)
        self.label_C_2 = QtWidgets.QLabel(self.frame_gener)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_C_2.sizePolicy().hasHeightForWidth())
        self.label_C_2.setSizePolicy(sizePolicy)
        self.label_C_2.setMinimumSize(QtCore.QSize(0, 0))
        self.label_C_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_C_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_C_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_C_2.setLineWidth(3)
        self.label_C_2.setMidLineWidth(0)
        self.label_C_2.setText("")
        self.label_C_2.setObjectName("label_C_2")
        self.gridLayout_gener_main.addWidget(self.label_C_2, 0, 0, 1, 3)
        self.label_ROC = QtWidgets.QLabel(self.frame_gener)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_ROC.sizePolicy().hasHeightForWidth())
        self.label_ROC.setSizePolicy(sizePolicy)
        self.label_ROC.setMinimumSize(QtCore.QSize(0, 0))
        self.label_ROC.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_ROC.setText("")
        self.label_ROC.setObjectName("label_ROC")
        self.gridLayout_gener_main.addWidget(self.label_ROC, 0, 4, 1, 3)
        self.pushButton_C = QtWidgets.QPushButton(self.frame_gener)
        self.pushButton_C.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: rgb(28, 118, 132);")
        self.pushButton_C.setObjectName("pushButton_C")
        self.gridLayout_gener_main.addWidget(self.pushButton_C, 1, 2, 1, 1)
        self.pushButton_ROC = QtWidgets.QPushButton(self.frame_gener)
        self.pushButton_ROC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_ROC.setObjectName("pushButton_ROC")
        self.gridLayout_gener_main.addWidget(self.pushButton_ROC, 1, 6, 1, 1)
        self.textBrowser_A = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_A.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_A.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_A.setObjectName("textBrowser_A")
        self.gridLayout_gener_main.addWidget(self.textBrowser_A, 2, 1, 1, 2)
        self.textBrowser_R = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_R.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_R.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_R.setObjectName("textBrowser_R")
        self.gridLayout_gener_main.addWidget(self.textBrowser_R, 3, 1, 1, 2)
        self.textBrowser_AUC = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_AUC.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_AUC.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_AUC.setObjectName("textBrowser_AUC")
        self.gridLayout_gener_main.addWidget(self.textBrowser_AUC, 4, 1, 1, 2)
        self.textBrowser_H = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_H.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_H.setMaximumSize(QtCore.QSize(16777215, 50))
        self.textBrowser_H.setObjectName("textBrowser_H")
        self.gridLayout_gener_main.addWidget(self.textBrowser_H, 5, 1, 1, 2)
        self.label_C = QtWidgets.QLabel(self.frame_gener)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_C.sizePolicy().hasHeightForWidth())
        self.label_C.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_C.setFont(font)
        self.label_C.setMaximumSize(QtCore.QSize(16777215, 50))
        self.label_C.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_C.setToolTip('混淆矩阵可以画出分类的详细预测结果。对于包含多个类别的任务，混淆矩阵很清晰的反映出各类别之间的错分概率。')
        self.label_C.setLocale(QtCore.QLocale(QtCore.QLocale.Catalan, QtCore.QLocale.Spain))
        self.label_C.setAlignment(QtCore.Qt.AlignCenter)
        self.label_C.setObjectName("label_C")
        self.gridLayout_gener_main.addWidget(self.label_C, 1, 1, 1, 1)
        # self.label_ROC_2 = QtWidgets.QLabel(self.frame_gener)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(30)
        # sizePolicy.setHeightForWidth(self.label_ROC_2.sizePolicy().hasHeightForWidth())
        # self.label_ROC_2.setSizePolicy(sizePolicy)
        # self.label_ROC_2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_ROC_2.setToolTip('ROC是反映敏感性和特异性连续变量的综合指标,是用构图法揭示敏感性和特异性的相互关系，它通过将连续变量设定出多个不同的临界值，从而计算出一系列敏感性和特异性，再以敏感性为纵坐标、（1-特异性）为横坐标绘制成曲线。')
        # self.label_ROC_2.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_ROC_2.setObjectName("label_ROC_2")
        # self.gridLayout_gener_main.addWidget(self.label_ROC_2, 1, 5, 1, 1)
        self.label_ROC_2 = QtWidgets.QLabel(self.frame_gener)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_ROC_2.sizePolicy().hasHeightForWidth())
        self.label_ROC_2.setSizePolicy(sizePolicy)
        self.label_ROC_2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_ROC_2.setToolTip('ROC是反映敏感性和特异性连续变量的综合指标,是用构图法揭示敏感性和特异性的相互关系，它通过将连续变量设定出多个不同的临界值，从而计算出一系列敏感性和特异性，再以敏感性为纵坐标、（1-特异性）为横坐标绘制成曲线。')
        self.label_ROC_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ROC_2.setObjectName("label_ROC_2")
        self.gridLayout_gener_main.addWidget(self.label_ROC_2, 1, 5, 1, 1)
        self.label_jielun = QtWidgets.QLabel(self.frame_gener)
        self.label_jielun.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color:transparent;")
        self.label_jielun.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun.setObjectName("label_jielun")
        self.gridLayout_gener_main.addWidget(self.label_jielun, 6, 0, 1, 1)
        self.textBrowser_jielun = QtWidgets.QTextBrowser(self.frame_gener)
        self.textBrowser_jielun.setMaximumSize(QtCore.QSize(16777215, 150))
        self.textBrowser_jielun.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255, 255, 255)")
        self.textBrowser_jielun.setObjectName("textBrowser_jielun")
        self.gridLayout_gener_main.addWidget(self.textBrowser_jielun, 6, 1, 1, 6)


        # self.textBrowser_H = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_H.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_H.setObjectName("textBrowser_H")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_H, 5, 1, 1, 2)
        # self.textBrowser_AUC = QtWidgets.QTextBrowser(self.frame_gener)
        # self.textBrowser_AUC.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_AUC.setObjectName("textBrowser_AUC")
        # self.gridLayout_gener_main.addWidget(self.textBrowser_AUC, 4, 1, 1, 2)
        self.verticalLayout_input_g = QtWidgets.QVBoxLayout()
        self.verticalLayout_input_g.setObjectName("verticalLayout_input_g")
        self.pushButton_y_pred_A = QtWidgets.QPushButton(self.frame_gener)
        # self.pushButton_y_pred_A.setToolTip('分类网络真实得到的标签文件。')
        self.pushButton_y_pred_A.setStyleSheet("color: rgb(0, 0, 0);\n"
                                               "background-color: rgb(225, 225, 225);")
        self.pushButton_y_pred_A.setObjectName("pushButton_y_pred_A")
        self.verticalLayout_input_g.addWidget(self.pushButton_y_pred_A)
        self.pushButton_y_true_A = QtWidgets.QPushButton(self.frame_gener)
        self.pushButton_y_true_A.setStyleSheet("color: rgb(0, 0, 0);\n"
                                               "background-color: rgb(225, 225, 225);")
        self.pushButton_y_true_A.setObjectName("pushButton_y_true_A")
        self.verticalLayout_input_g.addWidget(self.pushButton_y_true_A)
        self.pushButton_run_A = QtWidgets.QPushButton(self.frame_gener)
        self.pushButton_run_A.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_run_A.setObjectName("pushButton_run_A")
        self.verticalLayout_input_g.addWidget(self.pushButton_run_A)
        self.gridLayout_gener_main.addLayout(self.verticalLayout_input_g,7, 0, 1, 4)
        self.verticalLayout_guanjiancanshu_gener = QtWidgets.QVBoxLayout()
        self.verticalLayout_guanjiancanshu_gener.setObjectName("verticalLayout_guanjiancanshu_gener")
        self.label_guanjiancanshu_A = QtWidgets.QLabel(self.frame_gener)
        self.label_guanjiancanshu_A.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_A.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_A.setObjectName("label_guanjiancanshu_A")
        self.verticalLayout_guanjiancanshu_gener.addWidget(self.label_guanjiancanshu_A)
        self.label_label_A = QtWidgets.QLabel(self.frame_gener)
        self.label_label_A.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_label_A.setToolTip('有多少类图像，标签个数就设置为多少')
        self.label_label_A.setAlignment(QtCore.Qt.AlignCenter)
        self.label_label_A.setObjectName("label_label_A")
        self.verticalLayout_guanjiancanshu_gener.addWidget(self.label_label_A)
        self.lineEdit_gener_A = QtWidgets.QLineEdit(self.frame_gener)
        self.lineEdit_gener_A.setMinimumSize(QtCore.QSize(0, 40))
        self.lineEdit_gener_A.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_gener_A.setText('20')
        self.lineEdit_gener_A.setObjectName("lineEdit_gener_A")
        self.verticalLayout_guanjiancanshu_gener.addWidget(self.lineEdit_gener_A)
        self.gridLayout_gener_main.addLayout(self.verticalLayout_guanjiancanshu_gener, 7, 4, 1, 3)
        self.gridLayout_gener_main.setColumnStretch(0, 1)
        self.gridLayout_gener_main.setColumnStretch(1, 1)
        self.gridLayout_gener_main.setColumnStretch(2, 1)
        self.gridLayout_gener_main.setColumnStretch(4, 1)
        self.gridLayout_gener_main.setColumnStretch(5, 1)
        self.gridLayout_gener_main.setColumnStretch(6, 1)
        self.gridLayout_gener_main.setRowStretch(0, 5)
        self.gridLayout_gener_main.setRowStretch(1, 1)
        self.gridLayout_gener_main.setRowStretch(2, 2)
        self.gridLayout_gener_main.setRowStretch(3, 2)
        self.gridLayout_gener_main.setRowStretch(4, 2)
        self.gridLayout_gener_main.setRowStretch(5, 2)
        self.gridLayout_gener_main.setRowStretch(6, 2)
        self.gridLayout_gener_main.setRowStretch(7, 2)
        self.verticalLayout.addLayout(self.gridLayout_gener_main)
        self.verticalLayout_gener.addWidget(self.frame_gener)
        self.horizontalLayout_main.addLayout(self.verticalLayout_gener)

        # 分类-干扰工作模式
        self.verticalLayout_robust = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust.setObjectName("verticalLayout_robust")
        self.label_robust = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_robust.setFont(font)
        self.label_robust.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_robust.setAlignment(QtCore.Qt.AlignCenter)
        self.label_robust.setObjectName("label_robust")
        self.verticalLayout_robust.addWidget(self.label_robust)
        self.frame_robust = QtWidgets.QFrame(self.centralwidget)
        self.frame_robust.setStyleSheet("background-color: rgb(23, 63, 88);")
        self.frame_robust.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_robust.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_robust.setObjectName("frame_robust")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_robust)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout_robust = QtWidgets.QGridLayout()
        self.gridLayout_robust.setSpacing(7)
        self.gridLayout_robust.setObjectName("gridLayout_robust")
        # self.label_P_r = QtWidgets.QLabel(self.frame_robust)
        # sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        # sizePolicy.setHorizontalStretch(0)
        # sizePolicy.setVerticalStretch(0)
        # sizePolicy.setHeightForWidth(self.label_P_r.sizePolicy().hasHeightForWidth())
        # self.label_P_r.setSizePolicy(sizePolicy)
        # self.label_P_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_P_r.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        # self.label_P_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_P_r.setObjectName("label_P_r")
        # self.gridLayout_robust.addWidget(self.label_P_r, 1, 0, 1, 1)
        # self.label_R_r = QtWidgets.QLabel(self.frame_robust)
        # self.label_R_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_R_r.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        # self.label_R_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_R_r.setObjectName("label_R_r")
        # # self.gridLayout_robust.addWidget(self.label_R_r, 2, 0, 1, 1)
        # self.gridLayout_robust.addWidget(self.label_R_r, 4, 0, 1, 1)
        # self.textBrowser_R_r = QtWidgets.QTextBrowser(self.frame_robust)
        # self.textBrowser_R_r.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_R_r.setObjectName("textBrowser_R_r")
        # self.gridLayout_robust.addWidget(self.textBrowser_R_r, 2, 3, 1, 2)
        # self.label_P_show_r = QtWidgets.QLabel(self.frame_robust)
        # self.label_P_show_r.setStyleSheet("background-color: rgb(18, 34, 70);")
        # self.label_P_show_r.setText("")
        # self.label_P_show_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_P_show_r.setObjectName("label_P_show_r")
        # # self.gridLayout_robust.addWidget(self.label_P_show_r, 1, 1, 1, 2)
        # self.gridLayout_robust.addWidget(self.label_P_show_r, 2, 1, 2, 2)
        # self.textBrowser_P_r = QtWidgets.QTextBrowser(self.frame_robust)
        # self.textBrowser_P_r.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_P_r.setObjectName("textBrowser_P_r")
        # # self.gridLayout_robust.addWidget(self.textBrowser_P_r, 1, 3, 1, 2)
        # self.gridLayout_robust.addWidget(self.textBrowser_P_r, 2, 3, 2, 2)
        # self.label_R_show_r = QtWidgets.QLabel(self.frame_robust)
        # self.label_R_show_r.setStyleSheet("background-color: rgb(18, 34, 70);")
        # self.label_R_show_r.setText("")
        # self.label_R_show_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_R_show_r.setObjectName("label_R_show_r")
        # # self.gridLayout_robust.addWidget(self.label_R_show_r, 2, 1, 1, 2)
        # self.gridLayout_robust.addWidget(self.label_R_show_r, 4, 1, 2, 2)
        # self.label_A_r = QtWidgets.QLabel(self.frame_robust)
        # self.label_A_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        # self.label_A_r.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        # self.label_A_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_A_r.setObjectName("label_A_r")
        # self.gridLayout_robust.addWidget(self.label_A_r, 0, 0, 1, 1)

        self.label_P_r = QtWidgets.QLabel(self.frame_robust)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_P_r.sizePolicy().hasHeightForWidth())
        self.label_P_r.setSizePolicy(sizePolicy)
        self.label_P_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_P_r.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        self.label_P_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P_r.setObjectName("label_P_r")
        self.gridLayout_robust.addWidget(self.label_P_r, 2, 0, 1, 1)
        self.label_R_r = QtWidgets.QLabel(self.frame_robust)
        self.label_R_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_R_r.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        self.label_R_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R_r.setObjectName("label_R_r")
        self.gridLayout_robust.addWidget(self.label_R_r, 4, 0, 1, 1)
        self.label_P_show_r = QtWidgets.QLabel(self.frame_robust)
        self.label_P_show_r.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_P_show_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P_show_r.setText("")
        self.label_P_show_r.setObjectName("label_P_show_r")
        self.gridLayout_robust.addWidget(self.label_P_show_r, 2, 1, 2, 2)
        self.textBrowser_P_r = QtWidgets.QTextBrowser(self.frame_robust)
        self.textBrowser_P_r.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_P_r.setObjectName("textBrowser_P_r")
        self.gridLayout_robust.addWidget(self.textBrowser_P_r, 2, 3, 2, 2)
        self.label_A_r = QtWidgets.QLabel(self.frame_robust)
        self.label_A_r.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_A_r.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        self.label_A_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A_r.setObjectName("label_A_r")
        self.gridLayout_robust.addWidget(self.label_A_r, 0, 0, 1, 1)
        self.textBrowser_A_r = QtWidgets.QTextBrowser(self.frame_robust)
        self.textBrowser_A_r.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_A_r.setObjectName("textBrowser_A_r")
        self.gridLayout_robust.addWidget(self.textBrowser_A_r, 0, 3, 2, 2)
        self.pushButton_P = QtWidgets.QPushButton(self.frame_robust)
        self.pushButton_P.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: rgb(28, 118, 132);")
        self.pushButton_P.setObjectName("pushButton_P")
        self.gridLayout_robust.addWidget(self.pushButton_P, 3, 0, 1, 1)
        self.pushButton_A = QtWidgets.QPushButton(self.frame_robust)
        self.pushButton_A.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: rgb(28, 118, 132);")
        self.pushButton_A.setObjectName("pushButton_A")
        self.gridLayout_robust.addWidget(self.pushButton_A, 1, 0, 1, 1)
        self.label_A_show_r = QtWidgets.QLabel(self.frame_robust)
        self.label_A_show_r.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_A_show_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A_show_r.setText("")
        self.label_A_show_r.setObjectName("label_A_show_r")
        self.gridLayout_robust.addWidget(self.label_A_show_r, 0, 1, 2, 2)
        self.pushButton_R = QtWidgets.QPushButton(self.frame_robust)
        self.pushButton_R.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: rgb(28, 118, 132);")
        self.pushButton_R.setObjectName("pushButton_R")
        self.gridLayout_robust.addWidget(self.pushButton_R, 5, 0, 1, 1)
        self.label_R_show_r = QtWidgets.QLabel(self.frame_robust)
        self.label_R_show_r.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.label_R_show_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R_show_r.setText("")
        self.label_R_show_r.setObjectName("label_R_show_r")
        self.gridLayout_robust.addWidget(self.label_R_show_r, 4, 1, 2, 2)
        self.textBrowser_R_r = QtWidgets.QTextBrowser(self.frame_robust)
        self.textBrowser_R_r.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_R_r.setObjectName("textBrowser_R_r")
        self.gridLayout_robust.addWidget(self.textBrowser_R_r, 4, 3, 2, 2)

        self.textBrowser_jielun_r = QtWidgets.QTextBrowser(self.frame_robust)
        self.textBrowser_jielun_r.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255, 255, 255)")
        self.textBrowser_jielun_r.setObjectName("textBrowser_jielun_r")
        self.gridLayout_robust.addWidget(self.textBrowser_jielun_r, 6, 1, 1, 4)
        self.label_jielun_r = QtWidgets.QLabel(self.frame_robust)
        self.label_jielun_r.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: transparent;\n"
                                          "")
        self.label_jielun_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun_r.setObjectName("label_jielun_r")
        self.gridLayout_robust.addWidget(self.label_jielun_r, 6, 0, 1, 1)


        self.gridLayout_guanjiancanshu_r = QtWidgets.QGridLayout()
        self.gridLayout_guanjiancanshu_r.setObjectName("gridLayout_guanjiancanshu_r")
        self.label_threshold = QtWidgets.QLabel(self.frame_robust)
        self.label_threshold.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_threshold.setToolTip("指标值高于此参数则认为是可用的，设置值可在0-1范围内。")
        self.label_threshold.setAlignment(QtCore.Qt.AlignCenter)
        self.label_threshold.setObjectName("label_threshold")
        self.gridLayout_guanjiancanshu_r.addWidget(self.label_threshold, 1, 0, 1, 1)
        self.lineEdit_threthold = QtWidgets.QLineEdit(self.frame_robust)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.lineEdit_threthold.sizePolicy().hasHeightForWidth())
        self.lineEdit_threthold.setSizePolicy(sizePolicy)
        self.lineEdit_threthold.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_threthold.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_threthold.setText('0.9')
        self.lineEdit_threthold.setObjectName("lineEdit_threthold")
        self.gridLayout_guanjiancanshu_r.addWidget(self.lineEdit_threthold, 2, 0, 1, 1)
        self.label_lapse = QtWidgets.QLabel(self.frame_robust)
        self.label_lapse.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_lapse.setToolTip("指标值低于此参数则认为是失效的，设置值可在0-1范围内。")
        self.label_lapse.setAlignment(QtCore.Qt.AlignCenter)
        self.label_lapse.setObjectName("label_lapse")
        self.gridLayout_guanjiancanshu_r.addWidget(self.label_lapse, 1, 1, 1, 1)
        self.lineEdit_lapse = QtWidgets.QLineEdit(self.frame_robust)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.lineEdit_lapse.sizePolicy().hasHeightForWidth())
        self.lineEdit_lapse.setSizePolicy(sizePolicy)
        self.lineEdit_lapse.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_lapse.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_lapse.setText('0.6')
        self.lineEdit_lapse.setObjectName("lineEdit_lapse")
        self.gridLayout_guanjiancanshu_r.addWidget(self.lineEdit_lapse, 2, 1, 1, 1)
        self.label_guanjiancanshu_r = QtWidgets.QLabel(self.frame_robust)
        self.label_guanjiancanshu_r.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_r.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_r.setObjectName("label_guanjiancanshu_r")
        self.gridLayout_guanjiancanshu_r.addWidget(self.label_guanjiancanshu_r, 0, 0, 1, 2)
        self.gridLayout_guanjiancanshu_r.setRowMinimumHeight(0, 1)
        self.gridLayout_guanjiancanshu_r.setRowMinimumHeight(1, 1)
        self.gridLayout_guanjiancanshu_r.setRowMinimumHeight(2, 1)
        self.gridLayout_guanjiancanshu_r.setColumnStretch(0, 1)
        self.gridLayout_guanjiancanshu_r.setColumnStretch(1, 1)
        self.gridLayout_guanjiancanshu_r.setRowStretch(0, 1)
        self.gridLayout_guanjiancanshu_r.setRowStretch(1, 1)
        self.gridLayout_guanjiancanshu_r.setRowStretch(2, 5)
        self.gridLayout_robust.addLayout(self.gridLayout_guanjiancanshu_r, 7, 2, 1, 3)
        # self.label_A_show_r = QtWidgets.QLabel(self.frame_robust)
        # self.label_A_show_r.setStyleSheet("background-color: rgb(18, 34, 70);")
        # self.label_A_show_r.setText("")
        # self.label_A_show_r.setAlignment(QtCore.Qt.AlignCenter)
        # self.label_A_show_r.setObjectName("label_A_show_r")
        # self.gridLayout_robust.addWidget(self.label_A_show_r, 0, 1, 1, 2)
        # self.textBrowser_A_r = QtWidgets.QTextBrowser(self.frame_robust)
        # self.textBrowser_A_r.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        # self.textBrowser_A_r.setObjectName("textBrowser_A_r")
        # self.gridLayout_robust.addWidget(self.textBrowser_A_r, 0, 3, 1, 2)
        self.verticalLayout_input_r = QtWidgets.QVBoxLayout()
        self.verticalLayout_input_r.setObjectName("verticalLayout_input_r")
        self.pushButton_input1_r = QtWidgets.QPushButton(self.frame_robust)
        self.pushButton_input1_r.setStyleSheet("color: rgb(0, 0, 0);\n"
                                               "background-color: rgb(225, 225, 225);")
        self.pushButton_input1_r.setObjectName("pushButton_input1_r")
        self.verticalLayout_input_r.addWidget(self.pushButton_input1_r)
        self.pushButton_run_r = QtWidgets.QPushButton(self.frame_robust)
        self.pushButton_run_r.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_run_r.setObjectName("pushButton_run_r")
        self.verticalLayout_input_r.addWidget(self.pushButton_run_r)
        self.gridLayout_robust.addLayout(self.verticalLayout_input_r, 7, 0, 1, 2)
        # self.gridLayout_robust.setColumnStretch(0, 1)
        # self.gridLayout_robust.setColumnStretch(1, 2)
        # self.gridLayout_robust.setColumnStretch(2, 4)
        # self.gridLayout_robust.setColumnStretch(3, 2)
        # self.gridLayout_robust.setColumnStretch(4, 2)
        # self.gridLayout_robust.setRowStretch(0, 3)
        # self.gridLayout_robust.setRowStretch(1, 3)
        # self.gridLayout_robust.setRowStretch(2, 3)
        # self.gridLayout_robust.setRowStretch(3, 1)
        self.gridLayout_robust.setColumnStretch(0, 1)
        self.gridLayout_robust.setColumnStretch(1, 2)
        self.gridLayout_robust.setColumnStretch(2, 4)
        self.gridLayout_robust.setColumnStretch(3, 2)
        self.gridLayout_robust.setColumnStretch(4, 2)
        self.gridLayout_robust.setRowStretch(0, 5)
        self.gridLayout_robust.setRowStretch(2, 5)
        self.gridLayout_robust.setRowStretch(4, 5)
        self.gridLayout_robust.setRowStretch(6, 5)
        self.horizontalLayout.addLayout(self.gridLayout_robust)
        self.verticalLayout_robust.addWidget(self.frame_robust)
        self.horizontalLayout_main.addLayout(self.verticalLayout_robust)

        # 分类-测试用例生成&特异性评价指标
        self.verticalLayout_except = QtWidgets.QVBoxLayout()
        self.verticalLayout_except.setObjectName("verticalLayout_except")

        # 分类-测试用例生成
        self.label_data = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_data.setFont(font)
        self.label_data.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_data.setAlignment(QtCore.Qt.AlignCenter)
        self.label_data.setObjectName("label_data")
        self.verticalLayout_except.addWidget(self.label_data)
        self.frame_data = QtWidgets.QFrame(self.centralwidget)
        self.frame_data.setStyleSheet("background-color: rgb(27, 79, 95);")
        self.frame_data.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_data.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_data.setObjectName("frame_data")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_data)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.gridLayout_data = QtWidgets.QGridLayout()
        self.gridLayout_data.setObjectName("gridLayout_data")
        self.pushButton_gauss = QtWidgets.QPushButton(self.frame_data)
        # self.pushButton_gauss.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                     "background-color: rgb(28, 118, 132);")
        self.pushButton_gauss.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}")
        self.pushButton_gauss.setCheckable(True)
        self.pushButton_gauss.setAutoExclusive(True)
        self.pushButton_gauss.setObjectName("pushButton_gauss")
        self.gridLayout_data.addWidget(self.pushButton_gauss, 1, 1, 1, 1)
        self.pushButton_generdata = QtWidgets.QPushButton(self.frame_data)
        # self.pushButton_generdata.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                         "background-color: rgb(28, 118, 132);")
        self.pushButton_generdata.setStyleSheet("QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
        "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}")
        self.pushButton_generdata.setCheckable(True)
        self.pushButton_generdata.setAutoExclusive(True)
        self.pushButton_generdata.setObjectName("pushButton_generdata")
        self.gridLayout_data.addWidget(self.pushButton_generdata, 0, 0, 1, 1)
        self.pushButton_noise = QtWidgets.QPushButton(self.frame_data)
        # self.pushButton_noise.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                     "background-color: rgb(28, 118, 132);")
        self.pushButton_noise.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}")
        self.pushButton_noise.setCheckable(True)
        self.pushButton_noise.setAutoExclusive(True)
        self.pushButton_noise.setObjectName("pushButton_noise")
        self.gridLayout_data.addWidget(self.pushButton_noise, 0, 1, 1, 1)
        self.pushButton_zhedang = QtWidgets.QPushButton(self.frame_data)
        # self.pushButton_zhedang.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                       "background-color: rgb(28, 118, 132);")
        self.pushButton_zhedang.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}")
        self.pushButton_zhedang.setCheckable(True)
        self.pushButton_zhedang.setAutoExclusive(True)
        self.pushButton_zhedang.setObjectName("pushButton_zhedang")
        self.gridLayout_data.addWidget(self.pushButton_zhedang, 1, 0, 1, 1)
        self.verticalLayout_input_gener = QtWidgets.QVBoxLayout()
        self.verticalLayout_input_gener.setObjectName("verticalLayout_input_gener")
        self.pushButton_filedir_gener = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_filedir_gener.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                    "background-color: rgb(225, 225, 225);")
        self.pushButton_filedir_gener.setObjectName("pushButton_filedir_gener")
        self.verticalLayout_input_gener.addWidget(self.pushButton_filedir_gener)
        self.pushButton_tardir_gener = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_tardir_gener.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                   "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_gener.setObjectName("pushButton_tardir_gener")
        self.verticalLayout_input_gener.addWidget(self.pushButton_tardir_gener)
        self.pushButton_run_gener = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_run_gener.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_run_gener.setObjectName("pushButton_run_gener")
        self.verticalLayout_input_gener.addWidget(self.pushButton_run_gener)
        self.pushButton_filedir_gener_N = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_filedir_gener_N.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                      "background-color: rgb(225, 225, 225);")
        self.pushButton_filedir_gener_N.setObjectName("pushButton_filedir_gener_N")
        self.verticalLayout_input_gener.addWidget(self.pushButton_filedir_gener_N)
        self.pushButton_tardir_gener_N = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_tardir_gener_N.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                     "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_gener_N.setObjectName("pushButton_tardir_gener_N")
        self.verticalLayout_input_gener.addWidget(self.pushButton_tardir_gener_N)
        self.pushButton_run_gener_N = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_run_gener_N.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_run_gener_N.setObjectName("pushButton_run_gener_N")
        self.verticalLayout_input_gener.addWidget(self.pushButton_run_gener_N)
        self.pushButton_filedir_gener_Z = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_filedir_gener_Z.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                      "background-color: rgb(225, 225, 225);")
        self.pushButton_filedir_gener_Z.setObjectName("pushButton_filedir_gener_Z")
        self.verticalLayout_input_gener.addWidget(self.pushButton_filedir_gener_Z)
        self.pushButton_tardir_gener_Z = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_tardir_gener_Z.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                     "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_gener_Z.setObjectName("pushButton_tardir_gener_Z")
        self.verticalLayout_input_gener.addWidget(self.pushButton_tardir_gener_Z)
        self.pushButton_run_gener_Z = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_run_gener_Z.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_run_gener_Z.setObjectName("pushButton_run_gener_Z")
        self.verticalLayout_input_gener.addWidget(self.pushButton_run_gener_Z)
        self.pushButton_filedir_gener_G = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_filedir_gener_G.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                      "background-color: rgb(225, 225, 225);")
        self.pushButton_filedir_gener_G.setObjectName("pushButton_filedir_gener_G")
        self.verticalLayout_input_gener.addWidget(self.pushButton_filedir_gener_G)
        self.pushButton_tardir_gener_G = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_tardir_gener_G.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                     "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_gener_G.setObjectName("pushButton_tardir_gener_G")
        self.verticalLayout_input_gener.addWidget(self.pushButton_tardir_gener_G)
        self.pushButton_run_gener_G = QtWidgets.QPushButton(self.frame_data)
        self.pushButton_run_gener_G.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_run_gener_G.setObjectName("pushButton_run_gener_G")
        self.verticalLayout_input_gener.addWidget(self.pushButton_run_gener_G)
        self.gridLayout_data.addLayout(self.verticalLayout_input_gener, 2, 0, 1, 1)
        self.verticalLayout_guanjiancanshu_data_gener = QtWidgets.QVBoxLayout()
        self.verticalLayout_guanjiancanshu_data_gener.setObjectName("verticalLayout_guanjiancanshu_data_gener")
        self.label_guanjiancanshu_data_gener = QtWidgets.QLabel(self.frame_data)
        self.label_guanjiancanshu_data_gener.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_data_gener.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_data_gener.setObjectName("label_guanjiancanshu_data_gener")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_guanjiancanshu_data_gener)
        self.label_num_gener = QtWidgets.QLabel(self.frame_data)
        self.label_num_gener.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_num_gener.setToolTip("从原始数据集抽取的每一个图像类别的比例，例如有5类图像，此处就要设置为5个0-1之间的小数,中间用逗号分开，如0.1,0.2,0.1,0.3,0.2。")
        self.label_num_gener.setAlignment(QtCore.Qt.AlignCenter)
        self.label_num_gener.setObjectName("label_num_gener")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_num_gener)
        self.lineEdit_num_gener = QtWidgets.QLineEdit(self.frame_data)
        self.lineEdit_num_gener.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_num_gener.setText('0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1')
        self.lineEdit_num_gener.setObjectName("lineEdit_num_gener")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.lineEdit_num_gener)
        self.label_guanjiancanshu_data_gener_N = QtWidgets.QLabel(self.frame_data)
        self.label_guanjiancanshu_data_gener_N.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_data_gener_N.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_data_gener_N.setObjectName("label_guanjiancanshu_data_gener_N")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_guanjiancanshu_data_gener_N)
        self.label_num_gener_N = QtWidgets.QLabel(self.frame_data)
        self.label_num_gener_N.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_num_gener_N.setToolTip("噪声强度为给泛化性数据加噪声的大小，第一个数为第一个噪声强度，是0-1之间的小数，第二个数为步长，是0-1之间的小数，的第三个数为加噪声数量，为整数。")
        self.label_num_gener_N.setAlignment(QtCore.Qt.AlignCenter)
        self.label_num_gener_N.setObjectName("label_num_gener_N")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_num_gener_N)
        self.lineEdit_num_gener_N = QtWidgets.QLineEdit(self.frame_data)
        self.lineEdit_num_gener_N.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_num_gener_N.setText('0.01,0.01,20')
        self.lineEdit_num_gener_N.setObjectName("lineEdit_num_gener_N")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.lineEdit_num_gener_N)
        self.label_guanjiancanshu_data_gener_Z = QtWidgets.QLabel(self.frame_data)
        self.label_guanjiancanshu_data_gener_Z.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_data_gener_Z.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_data_gener_Z.setObjectName("label_guanjiancanshu_data_gener_Z")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_guanjiancanshu_data_gener_Z)
        self.label_num_gener_Z = QtWidgets.QLabel(self.frame_data)
        self.label_num_gener_Z.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_num_gener_Z.setToolTip("面积为给泛化性数据加噪声的大小，第一个数为第一个噪声强度，是0-1之间的小数，第二个数为步长，是0-1之间的小数，的第三个数为加噪声数量，为整数。")
        self.label_num_gener_Z.setAlignment(QtCore.Qt.AlignCenter)
        self.label_num_gener_Z.setObjectName("label_num_gener_Z")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_num_gener_Z)
        self.lineEdit_num_gener_Z = QtWidgets.QLineEdit(self.frame_data)
        self.lineEdit_num_gener_Z.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_num_gener_Z.setText('0.01,0.01,20')
        self.lineEdit_num_gener_Z.setObjectName("lineEdit_num_gener_Z")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.lineEdit_num_gener_Z)
        self.label_guanjiancanshu_data_gener_G = QtWidgets.QLabel(self.frame_data)
        self.label_guanjiancanshu_data_gener_G.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_data_gener_G.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_data_gener_G.setObjectName("label_guanjiancanshu_data_gener_G")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_guanjiancanshu_data_gener_G)
        self.label_num_gener_G = QtWidgets.QLabel(self.frame_data)
        self.label_num_gener_G.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_num_gener_G.setToolTip("方差为给泛化性数据加噪声的大小，第一个数为第一个噪声强度，是0-1之间的小数，第二个数为步长，是0-1之间的小数，的第三个数为加噪声数量，为整数。")
        self.label_num_gener_G.setAlignment(QtCore.Qt.AlignCenter)
        self.label_num_gener_G.setObjectName("label_num_gener_G")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.label_num_gener_G)
        self.lineEdit_num_gener_G = QtWidgets.QLineEdit(self.frame_data)
        self.lineEdit_num_gener_G.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_num_gener_G.setText('0.01,0.01,20')
        self.lineEdit_num_gener_G.setObjectName("lineEdit_num_gener_G")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.lineEdit_num_gener_G)
        self.textBrowser_show_data_gener = QtWidgets.QTextBrowser(self.frame_data)
        self.textBrowser_show_data_gener.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_show_data_gener.setObjectName("textBrowser_show_data_gener")
        self.verticalLayout_guanjiancanshu_data_gener.addWidget(self.textBrowser_show_data_gener)
        self.gridLayout_data.addLayout(self.verticalLayout_guanjiancanshu_data_gener, 2, 1, 1, 1)
        self.gridLayout_data.setColumnStretch(0, 1)
        self.gridLayout_data.setColumnStretch(1, 1)
        self.verticalLayout_5.addLayout(self.gridLayout_data)
        self.verticalLayout_except.addWidget(self.frame_data)


        # self.pushButton_filedir_gener.hide()
        # self.pushButton_tardir_gener.hide()
        # self.pushButton_run_gener.hide()
        # self.label_guanjiancanshu_data_gener.hide()
        # self.label_num_gener.hide()
        # self.lineEdit_num_gener.hide()
        self.pushButton_filedir_gener_N.hide()
        self.pushButton_tardir_gener_N.hide()
        self.pushButton_run_gener_N.hide()
        self.label_guanjiancanshu_data_gener_N.hide()
        self.label_num_gener_N.hide()
        self.lineEdit_num_gener_N.hide()
        self.pushButton_filedir_gener_Z.hide()
        self.pushButton_tardir_gener_Z.hide()
        self.pushButton_run_gener_Z.hide()
        self.label_guanjiancanshu_data_gener_Z.hide()
        self.label_num_gener_Z.hide()
        self.lineEdit_num_gener_Z.hide()
        self.pushButton_filedir_gener_G.hide()
        self.pushButton_tardir_gener_G.hide()
        self.pushButton_run_gener_G.hide()
        self.label_guanjiancanshu_data_gener_G.hide()
        self.label_num_gener_G.hide()
        self.lineEdit_num_gener_G.hide()

        # 分类-特异性指标
        self.label_white = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_white.setFont(font)
        self.label_white.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_white.setAlignment(QtCore.Qt.AlignCenter)
        self.label_white.setObjectName("label_white")
        self.verticalLayout_except.addWidget(self.label_white)
        self.frame_white = QtWidgets.QFrame(self.centralwidget)
        self.frame_white.setStyleSheet("background-color: rgb(27, 79, 95);")
        self.frame_white.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_white.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_white.setObjectName("frame_white")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_white)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_ASS = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_ASS.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_ASS.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_ASS.setToolTip('对抗样本数据与原数据的结构相似度')
        self.pushButton_ASS.setCheckable(True)
        self.pushButton_ASS.setAutoExclusive(True)
        self.pushButton_ASS.setObjectName("pushButton_ASS")
        self.gridLayout.addWidget(self.pushButton_ASS, 0, 0, 1, 1)
        self.pushButton_ACAC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_ACAC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_ACAC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_ACAC.setToolTip('平均置信度')
        self.pushButton_ACAC.setCheckable(True)
        self.pushButton_ACAC.setAutoExclusive(True)
        self.pushButton_ACAC.setObjectName("pushButton_ACAC")
        self.gridLayout.addWidget(self.pushButton_ACAC, 0, 1, 1, 1)
        self.pushButton_BD = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_BD.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_BD.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_BD.setToolTip('最大边界距离')
        self.pushButton_BD.setCheckable(True)
        self.pushButton_BD.setAutoExclusive(True)
        self.pushButton_BD.setObjectName("pushButton_BD")
        self.gridLayout.addWidget(self.pushButton_BD, 1, 0, 1, 1)
        self.pushButton_ACTC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_ACTC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_ACTC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_ACTC.setToolTip('对抗成功时正确标签平均置信度')
        self.pushButton_ACTC.setCheckable(True)
        self.pushButton_ACTC.setAutoExclusive(True)
        self.pushButton_ACTC.setObjectName("pushButton_ACTC")
        self.gridLayout.addWidget(self.pushButton_ACTC, 1, 1, 1, 1)
        self.pushButton_SNAC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_SNAC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_SNAC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_SNAC.setToolTip('强神经元激活覆盖')
        self.pushButton_SNAC.setCheckable(True)
        self.pushButton_SNAC.setAutoExclusive(True)
        self.pushButton_SNAC.setObjectName("pushButton_SNAC")
        self.gridLayout.addWidget(self.pushButton_SNAC, 2, 0, 1, 1)
        self.pushButton_ALDp = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_ALDp.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_ALDp.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_ALDp.setToolTip('对抗攻击失真度')
        self.pushButton_ALDp.setCheckable(True)
        self.pushButton_ALDp.setAutoExclusive(True)
        self.pushButton_ALDp.setObjectName("pushButton_ALDp")
        self.gridLayout.addWidget(self.pushButton_ALDp, 2, 1, 1, 1)
        self.pushButton_KMNC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_KMNC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_KMNC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_KMNC.setToolTip('K多节神经元覆盖')
        self.pushButton_KMNC.setCheckable(True)
        self.pushButton_KMNC.setAutoExclusive(True)
        self.pushButton_KMNC.setObjectName("pushButton_KMNC")
        self.gridLayout.addWidget(self.pushButton_KMNC, 3, 0, 1, 1)
        self.pushButton_ENI = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_ENI.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_ENI.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_ENI.setToolTip('噪声敏感性')
        self.pushButton_ENI.setCheckable(True)
        self.pushButton_ENI.setAutoExclusive(True)
        self.pushButton_ENI.setObjectName("pushButton_ENI")
        self.gridLayout.addWidget(self.pushButton_ENI, 3, 1, 1, 1)
        self.pushButton_NBC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_NBC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_NBC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_NBC.setToolTip('神经元边界覆盖')
        self.pushButton_NBC.setCheckable(True)
        self.pushButton_NBC.setAutoExclusive(True)
        self.pushButton_NBC.setObjectName("pushButton_NBC")
        self.gridLayout.addWidget(self.pushButton_NBC, 4, 0, 1, 1)
        self.pushButton_NTE = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_NTE.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_NTE.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_NTE.setToolTip('噪声容量估计')
        self.pushButton_NTE.setCheckable(True)
        self.pushButton_NTE.setAutoExclusive(True)
        self.pushButton_NTE.setObjectName("pushButton_NTE")
        self.gridLayout.addWidget(self.pushButton_NTE, 4, 1, 1, 1)
        self.pushButton_NC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_NC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                  "background-color: rgb(28, 118, 132);")
        self.pushButton_NC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_NC.setToolTip('神经元覆盖率')
        self.pushButton_NC.setCheckable(True)
        self.pushButton_NC.setAutoExclusive(True)
        self.pushButton_NC.setObjectName("pushButton_NC")
        self.gridLayout.addWidget(self.pushButton_NC, 5, 0, 1, 1)
        self.pushButton_PSD = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_PSD.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_PSD.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_PSD.setToolTip('扰动敏感距离')
        self.pushButton_PSD.setCheckable(True)
        self.pushButton_PSD.setAutoExclusive(True)
        self.pushButton_PSD.setObjectName("pushButton_PSD")
        self.gridLayout.addWidget(self.pushButton_PSD, 5, 1, 1, 1)
        self.pushButton_TKNC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_TKNC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_TKNC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_TKNC.setToolTip('Top-k神经元覆盖')
        self.pushButton_TKNC.setCheckable(True)
        self.pushButton_TKNC.setAutoExclusive(True)
        self.pushButton_TKNC.setObjectName("pushButton_TKNC")
        self.gridLayout.addWidget(self.pushButton_TKNC, 6, 0, 1, 1)
        self.pushButton_RGB = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_RGB.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_RGB.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_RGB.setToolTip('对高斯模糊鲁棒性')
        self.pushButton_RGB.setCheckable(True)
        self.pushButton_RGB.setAutoExclusive(True)
        self.pushButton_RGB.setObjectName("pushButton_RGB")
        self.gridLayout.addWidget(self.pushButton_RGB, 6, 1, 1, 1)
        self.pushButton_TKNP = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_TKNP.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                    "background-color: rgb(28, 118, 132);")
        self.pushButton_TKNP.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_TKNP.setToolTip('Top-k神经元模式')
        self.pushButton_TKNP.setCheckable(True)
        self.pushButton_TKNP.setAutoExclusive(True)
        self.pushButton_TKNP.setObjectName("pushButton_TKNP")
        self.gridLayout.addWidget(self.pushButton_TKNP, 7, 0, 1, 1)
        self.pushButton_RIC = QtWidgets.QPushButton(self.frame_white)
        # self.pushButton_RIC.setStyleSheet("color: rgb(255, 255, 255);\n"
        #                                   "background-color: rgb(28, 118, 132);")
        self.pushButton_RIC.setStyleSheet(
            "QPushButton{color:white;background-color:rgb(28, 118, 132)}""QPushButton:hover{background:rgb(18,34,70)}"
            "QPushButton:pressed{background-color:rgb(18,34,70)}""QPushButton:checked{background-color:rgb(18,34,70)}""QToolTip{color: rgb(0, 0, 0)}")
        self.pushButton_RIC.setToolTip('对图像压缩鲁棒性')
        self.pushButton_RIC.setCheckable(True)
        self.pushButton_RIC.setAutoExclusive(True)
        self.pushButton_RIC.setObjectName("pushButton_RIC")
        self.gridLayout.addWidget(self.pushButton_RIC, 7, 1, 1, 1)
        self.horizontalLayout_white = QtWidgets.QHBoxLayout()
        self.horizontalLayout_white.setContentsMargins(0, -1, -1, -1)
        self.horizontalLayout_white.setSpacing(0)
        self.horizontalLayout_white.setObjectName("horizontalLayout_white")
        self.frame_input_white = QtWidgets.QFrame(self.frame_white)
        self.frame_input_white.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_input_white.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_input_white.setObjectName("frame_input_white")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_input_white)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pushButton_filepath_white = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_filepath_white.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                     "background-color: rgb(225, 225, 225);")
        self.pushButton_filepath_white.setObjectName("pushButton_filepath_white")
        self.verticalLayout_4.addWidget(self.pushButton_filepath_white)
        self.pushButton_run_ACAC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_ACAC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_run_ACAC.setObjectName("pushButton_run_ACAC")
        self.verticalLayout_4.addWidget(self.pushButton_run_ACAC)

        self.pushButton_run_ACTC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_ACTC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_run_ACTC.setObjectName("pushButton_run_ACTC")
        self.verticalLayout_4.addWidget(self.pushButton_run_ACTC)

        self.pushButton_run_SNAC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_SNAC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_SNAC.setObjectName("pushButton_run_SNAC")
        self.verticalLayout_4.addWidget(self.pushButton_run_SNAC)

        self.pushButton_run_ASS = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_ASS.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_ASS.setObjectName("pushButton_run_ASS")
        self.verticalLayout_4.addWidget(self.pushButton_run_ASS)

        self.pushButton_run_BD = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_BD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_BD.setObjectName("pushButton_run_BD")
        self.verticalLayout_4.addWidget(self.pushButton_run_BD)

        self.pushButton_run_ENI = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_ENI.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_ENI.setObjectName("pushButton_run_ENI")
        self.verticalLayout_4.addWidget(self.pushButton_run_ENI)

        self.pushButton_run_KMNC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_KMNC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_KMNC.setObjectName("pushButton_run_KMNC")
        self.verticalLayout_4.addWidget(self.pushButton_run_KMNC)

        self.pushButton_run_NBC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_NBC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_NBC.setObjectName("pushButton_run_NBC")
        self.verticalLayout_4.addWidget(self.pushButton_run_NBC)

        self.pushButton_run_PSD = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_PSD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_PSD.setObjectName("pushButton_run_PSD")
        self.verticalLayout_4.addWidget(self.pushButton_run_PSD)

        self.pushButton_run_NTE = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_NTE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_NTE.setObjectName("pushButton_run_NTE")
        self.verticalLayout_4.addWidget(self.pushButton_run_NTE)

        self.pushButton_run_NC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_NC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_NC.setObjectName("pushButton_run_NC")
        self.verticalLayout_4.addWidget(self.pushButton_run_NC)

        self.pushButton_run_ALDp = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_ALDp.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_ALDp.setObjectName("pushButton_run_ALDp")
        self.verticalLayout_4.addWidget(self.pushButton_run_ALDp)

        self.pushButton_run_TKNC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_TKNC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_TKNC.setObjectName("pushButton_run_TKNC")
        self.verticalLayout_4.addWidget(self.pushButton_run_TKNC)

        self.pushButton_run_TKNP = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_TKNP.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_TKNP.setObjectName("pushButton_run_TKNP")
        self.verticalLayout_4.addWidget(self.pushButton_run_TKNP)

        self.pushButton_run_RIC = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_RIC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_RIC.setObjectName("pushButton_run_RIC")
        self.verticalLayout_4.addWidget(self.pushButton_run_RIC)

        self.pushButton_run_RGB = QtWidgets.QPushButton(self.frame_input_white)
        self.pushButton_run_RGB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_RGB.setObjectName("pushButton_run_RGB")
        self.verticalLayout_4.addWidget(self.pushButton_run_RGB)

        self.pushButton_run_RGB.hide()
        self.pushButton_run_RIC.hide()
        self.pushButton_run_TKNP.hide()
        self.pushButton_run_TKNC.hide()
        self.pushButton_run_PSD.hide()
        self.pushButton_run_NC.hide()
        self.pushButton_run_NTE.hide()
        self.pushButton_run_NBC.hide()
        self.pushButton_run_ENI.hide()
        self.pushButton_run_KMNC.hide()
        self.pushButton_run_ALDp.hide()
        self.pushButton_run_ASS.hide()
        self.pushButton_run_ACTC.hide()
        self.pushButton_run_SNAC.hide()
        self.pushButton_run_BD.hide()

        self.horizontalLayout_white.addWidget(self.frame_input_white)

        self.textBrowser_white_intro = QtWidgets.QTextBrowser(self.frame_white)
        self.textBrowser_white_intro.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_white_intro.setObjectName("textBrowser_white_intro")
        self.horizontalLayout_white.addWidget(self.textBrowser_white_intro)

        self.textBrowser_white = QtWidgets.QTextBrowser(self.frame_white)
        self.textBrowser_white.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_white.setObjectName("textBrowser_white")
        self.horizontalLayout_white.addWidget(self.textBrowser_white)

        self.horizontalLayout_white.setStretch(0, 1)
        self.horizontalLayout_white.setStretch(3, 2)
        self.gridLayout.addLayout(self.horizontalLayout_white, 8, 0, 1, 2)
        self.frame_input_white.raise_()
        self.textBrowser_white.raise_()
        self.verticalLayout_except.addWidget(self.frame_white)
        self.horizontalLayout_main.addLayout(self.verticalLayout_except)

        self.horizontalLayout_main.setStretch(0, 3)
        self.horizontalLayout_main.setStretch(1, 3)
        self.horizontalLayout_main.setStretch(2, 2)
        self.verticalLayout_all.addLayout(self.horizontalLayout_main)

        # 决策-除标题外所有
        self.gridLayout_main_j = QtWidgets.QGridLayout()
        self.gridLayout_main_j.setObjectName("gridLayout_main_j")
        self.gridLayout_main_j.setRowStretch(1, 10)
        # 决策-正常工作模式
        self.horizontalLayout_gener_j = QtWidgets.QHBoxLayout()
        self.horizontalLayout_gener_j.setObjectName("horizontalLayout_gener_j")
        self.label_gener_j = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener_j.setFont(font)
        self.label_gener_j.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener_j.setObjectName("label_gener_j")
        self.horizontalLayout_gener_j.addWidget(self.label_gener_j)
        self.frame_gener_j = QtWidgets.QFrame(self.centralwidget)
        self.frame_gener_j.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_gener_j.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_gener_j.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_gener_j.setLineWidth(3)
        self.frame_gener_j.setMidLineWidth(3)
        self.frame_gener_j.setObjectName("frame_gener_j")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_gener_j)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout_gener_main_j = QtWidgets.QHBoxLayout()
        self.horizontalLayout_gener_main_j.setObjectName("horizontalLayout_gener_main_j")
        self.gridLayout_gener_main1_j = QtWidgets.QGridLayout()
        self.gridLayout_gener_main1_j.setObjectName("gridLayout_gener_main1_j")
        self.label_A_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_A_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_A_j.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        self.label_A_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A_j.setObjectName("label_A_j")
        self.gridLayout_gener_main1_j.addWidget(self.label_A_j, 0, 0, 1, 1)
        self.textBrowser_A_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_A_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_A_j.setObjectName("textBrowser_A_j")
        self.gridLayout_gener_main1_j.addWidget(self.textBrowser_A_j, 0, 1, 1, 1)
        self.label_P_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_P_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_P_j.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        self.label_P_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P_j.setObjectName("label_P_j")
        self.gridLayout_gener_main1_j.addWidget(self.label_P_j, 0, 2, 1, 1)
        self.textBrowser_P_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_P_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_P_j.setObjectName("textBrowser_P_j")
        self.gridLayout_gener_main1_j.addWidget(self.textBrowser_P_j, 0, 3, 1, 1)
        self.label_R_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_R_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_R_j.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        self.label_R_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R_j.setObjectName("label_R_j")
        self.gridLayout_gener_main1_j.addWidget(self.label_R_j, 1, 0, 1, 1)
        self.textBrowser_R_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_R_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_R_j.setObjectName("textBrowser_R_j")
        self.gridLayout_gener_main1_j.addWidget(self.textBrowser_R_j, 1, 1, 1, 1)
        self.label_K_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_K_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_K_j.setToolTip('Kappa系数是一种度量分类结果一致性的统计量, 是度量分类器性能稳定性的依据。Kappa系数值越大, 分类器性能越稳定。')
        self.label_K_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_K_j.setObjectName("label_K_j")
        self.gridLayout_gener_main1_j.addWidget(self.label_K_j, 1, 2, 1, 1)
        self.textBrowser_K_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_K_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_K_j.setObjectName("textBrowser_K_j")
        self.gridLayout_gener_main1_j.addWidget(self.textBrowser_K_j, 1, 3, 1, 1)
        self.label_H_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_H_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_H_j.setToolTip('海明距离是衡量两个集合相似度的一种指标。海明距离越大代表样本分类的越准确，所以海明距离越大越好。')
        self.label_H_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_H_j.setObjectName("label_H_j")
        self.gridLayout_gener_main1_j.addWidget(self.label_H_j, 2, 0, 1, 1)
        self.textBrowser_H_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_H_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_H_j.setObjectName("textBrowser_H_j")
        self.gridLayout_gener_main1_j.addWidget(self.textBrowser_H_j, 2, 1, 1, 1)
        self.horizontalLayout_gener_main_j.addLayout(self.gridLayout_gener_main1_j)
        self.gridLayout_gener_main2_j = QtWidgets.QGridLayout()
        self.gridLayout_gener_main2_j.setObjectName("gridLayout_gener_main2_j")
        self.label_J_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_J_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_J_j.setToolTip('杰卡德相似系数是衡量两个集合相似度的一种指标。杰卡德相似系数越大代表样本分类的越准确，所以杰卡德相似系数越大越好。')
        self.label_J_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_J_j.setObjectName("label_J_j")
        self.gridLayout_gener_main2_j.addWidget(self.label_J_j, 0, 0, 1, 1)
        self.textBrowser_J_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_J_j.sizePolicy().hasHeightForWidth())
        self.textBrowser_J_j.setSizePolicy(sizePolicy)
        self.textBrowser_J_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_J_j.setObjectName("textBrowser_J_j")
        self.gridLayout_gener_main2_j.addWidget(self.textBrowser_J_j, 0, 1, 1, 1)
        self.label_F1_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_F1_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_F1_j.setToolTip('F1值是统计学中用来衡量二分类模型精确度的一种指标，用于测量不均衡数据的精度。它同时兼顾了分类模型的精确率和召回率。F1越大代表样本分类的越准确，所以F1越大越好。')
        self.label_F1_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_F1_j.setObjectName("label_F1_j")
        self.gridLayout_gener_main2_j.addWidget(self.label_F1_j, 0, 2, 1, 1)
        self.textBrowser_F1_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_F1_j.sizePolicy().hasHeightForWidth())
        self.textBrowser_F1_j.setSizePolicy(sizePolicy)
        self.textBrowser_F1_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_F1_j.setObjectName("textBrowser_F1_j")
        self.gridLayout_gener_main2_j.addWidget(self.textBrowser_F1_j, 0, 3, 1, 1)
        self.label_ROC_2_j = QtWidgets.QLabel(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_ROC_2_j.sizePolicy().hasHeightForWidth())
        self.label_ROC_2_j.setSizePolicy(sizePolicy)
        self.label_ROC_2_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_ROC_2_j.setToolTip('ROC是反映敏感性和特异性连续变量的综合指标,是用构图法揭示敏感性和特异性的相互关系，它通过将连续变量设定出多个不同的临界值，从而计算出一系列敏感性和特异性，再以敏感性为纵坐标、（1-特异性）为横坐标绘制成曲线。')
        self.label_ROC_2_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ROC_2_j.setObjectName("label_ROC_2_j")
        self.gridLayout_gener_main2_j.addWidget(self.label_ROC_2_j, 1, 0, 1, 1)

        self.pushButton_ROC_j = QtWidgets.QPushButton(self.frame_gener_j)
        self.pushButton_ROC_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_ROC_j.setObjectName("pushButton_ROC_j")
        self.gridLayout_gener_main2_j.addWidget(self.pushButton_ROC_j, 2, 0, 1, 1)

        self.label_ROC_j = QtWidgets.QLabel(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_ROC_j.sizePolicy().hasHeightForWidth())
        self.label_ROC_j.setSizePolicy(sizePolicy)
        self.label_ROC_j.setMinimumSize(QtCore.QSize(0, 0))
        self.label_ROC_j.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_ROC_j.setText("")
        self.label_ROC_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ROC_j.setObjectName("label_ROC_j")
        self.gridLayout_gener_main2_j.addWidget(self.label_ROC_j, 1, 1, 2, 3)

        self.textBrowser_jielun_j = QtWidgets.QTextBrowser(self.frame_gener_j)
        self.textBrowser_jielun_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255, 255, 255)")
        self.textBrowser_jielun_j.setObjectName("textBrowser_jielun_j")
        self.gridLayout_gener_main2_j.addWidget(self.textBrowser_jielun_j, 0, 5, 3, 1)
        self.label_jielun_j = QtWidgets.QLabel(self.frame_gener_j)
        self.label_jielun_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color:transparent;")
        self.label_jielun_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun_j.setObjectName("label_jielun_j")
        self.gridLayout_gener_main2_j.addWidget(self.label_jielun_j, 0, 4, 1, 1)

        self.gridLayout_gener_main2_j.setColumnStretch(0, 1)
        self.gridLayout_gener_main2_j.setColumnStretch(1, 3)
        self.gridLayout_gener_main2_j.setColumnStretch(2, 1)
        self.gridLayout_gener_main2_j.setColumnStretch(3, 3)
        self.gridLayout_gener_main2_j.setRowStretch(0, 1)
        self.gridLayout_gener_main2_j.setRowStretch(1, 2)
        self.horizontalLayout_gener_main_j.addLayout(self.gridLayout_gener_main2_j)
        self.verticalLayout_gener_main3_j = QtWidgets.QVBoxLayout()
        self.verticalLayout_gener_main3_j.setSpacing(22)
        self.verticalLayout_gener_main3_j.setObjectName("verticalLayout_gener_main3_j")
        self.pushButton_y_pred_A_j = QtWidgets.QPushButton(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_y_pred_A_j.sizePolicy().hasHeightForWidth())
        self.pushButton_y_pred_A_j.setSizePolicy(sizePolicy)
        self.pushButton_y_pred_A_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                 "background-color: rgb(225, 225, 225);")
        self.pushButton_y_pred_A_j.setObjectName("pushButton_y_pred_A_j")
        self.verticalLayout_gener_main3_j.addWidget(self.pushButton_y_pred_A_j)
        self.pushButton_y_true_A_j = QtWidgets.QPushButton(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_y_true_A_j.sizePolicy().hasHeightForWidth())
        self.pushButton_y_true_A_j.setSizePolicy(sizePolicy)
        self.pushButton_y_true_A_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                 "background-color: rgb(225, 225, 225);")
        self.pushButton_y_true_A_j.setObjectName("pushButton_y_true_A_j")
        self.verticalLayout_gener_main3_j.addWidget(self.pushButton_y_true_A_j)
        self.pushButton_run_A_j = QtWidgets.QPushButton(self.frame_gener_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_run_A_j.sizePolicy().hasHeightForWidth())
        self.pushButton_run_A_j.setSizePolicy(sizePolicy)
        self.pushButton_run_A_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.pushButton_run_A_j.setObjectName("pushButton_run_A_j")
        self.verticalLayout_gener_main3_j.addWidget(self.pushButton_run_A_j)
        self.verticalLayout_gener_main3_j.setStretch(0, 1)
        self.verticalLayout_gener_main3_j.setStretch(1, 1)
        self.verticalLayout_gener_main3_j.setStretch(2, 1)
        self.horizontalLayout_gener_main_j.addLayout(self.verticalLayout_gener_main3_j)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_gener_main_j)
        self.horizontalLayout_gener_j.addWidget(self.frame_gener_j)
        self.gridLayout_main_j.addLayout(self.horizontalLayout_gener_j, 0, 0, 1, 1)

        # 决策-测试用例生成
        self.verticalLayout_data_j = QtWidgets.QVBoxLayout()
        self.verticalLayout_data_j.setObjectName("verticalLayout_data_j")
        self.label_data_j = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_data_j.setFont(font)
        self.label_data_j.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_data_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_data_j.setObjectName("label_data_j")
        self.verticalLayout_data_j.addWidget(self.label_data_j)
        self.gridLayout_data_main_j = QtWidgets.QGridLayout()
        self.gridLayout_data_main_j.setObjectName("gridLayout_data_main_j")
        self.label_generdata_j = QtWidgets.QLabel(self.centralwidget)
        self.label_generdata_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.label_generdata_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_generdata_j.setObjectName("label_generdata_j")
        self.gridLayout_data_main_j.addWidget(self.label_generdata_j, 0, 0, 1, 1)
        self.label_robustdata_j = QtWidgets.QLabel(self.centralwidget)
        self.label_robustdata_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.label_robustdata_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_robustdata_j.setObjectName("label_robustdata_j")
        self.gridLayout_data_main_j.addWidget(self.label_robustdata_j, 0, 1, 1, 1)
        self.frame_generdata_j = QtWidgets.QFrame(self.centralwidget)
        self.frame_generdata_j.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_generdata_j.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_generdata_j.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_generdata_j.setLineWidth(3)
        self.frame_generdata_j.setMidLineWidth(3)
        self.frame_generdata_j.setObjectName("frame_generdata_j")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_generdata_j)
        self.verticalLayout_7.setContentsMargins(11, 0, -1, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.pushButton_sourcedir_g_j = QtWidgets.QPushButton(self.frame_generdata_j)
        self.pushButton_sourcedir_g_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                    "background-color: rgb(225, 225, 225);")
        self.pushButton_sourcedir_g_j.setObjectName("pushButton_sourcedir_g_j")
        self.verticalLayout_7.addWidget(self.pushButton_sourcedir_g_j)
        self.pushButton__tardir_g_j = QtWidgets.QPushButton(self.frame_generdata_j)
        self.pushButton__tardir_g_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton__tardir_g_j.setObjectName("pushButton__tardir_g_j")
        self.verticalLayout_7.addWidget(self.pushButton__tardir_g_j)
        self.pushButton_run_g_j = QtWidgets.QPushButton(self.frame_generdata_j)
        self.pushButton_run_g_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.pushButton_run_g_j.setObjectName("pushButton_run_g_j")
        self.verticalLayout_7.addWidget(self.pushButton_run_g_j)
        self.verticalLayout_7.setStretch(0, 1)
        self.verticalLayout_7.setStretch(1, 1)
        self.verticalLayout_7.setStretch(2, 1)
        self.gridLayout_data_main_j.addWidget(self.frame_generdata_j, 1, 0, 1, 1)
        self.frame_robustdata_j = QtWidgets.QFrame(self.centralwidget)
        self.frame_robustdata_j.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_robustdata_j.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_robustdata_j.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_robustdata_j.setLineWidth(3)
        self.frame_robustdata_j.setMidLineWidth(3)
        self.frame_robustdata_j.setObjectName("frame_robustdata_j")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_robustdata_j)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.pushButton_source_r_j = QtWidgets.QPushButton(self.frame_robustdata_j)
        self.pushButton_source_r_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                 "background-color: rgb(225, 225, 225);")
        self.pushButton_source_r_j.setObjectName("pushButton_source_r_j")
        self.verticalLayout_12.addWidget(self.pushButton_source_r_j)
        self.pushButton_tardir_r_j = QtWidgets.QPushButton(self.frame_robustdata_j)
        self.pushButton_tardir_r_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                 "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_r_j.setObjectName("pushButton_tardir_r_j")
        self.verticalLayout_12.addWidget(self.pushButton_tardir_r_j)
        # self.pushButton_changedir_r_j = QtWidgets.QPushButton(self.frame_robustdata_j)
        # self.pushButton_changedir_r_j.setStyleSheet("color: rgb(0, 0, 0);\n"
        #                                             "background-color: rgb(225, 225, 225);")
        # self.pushButton_changedir_r_j.setObjectName("pushButton_changedir_r_j")
        # self.verticalLayout_12.addWidget(self.pushButton_changedir_r_j)
        self.pushButton_run_r_j = QtWidgets.QPushButton(self.frame_robustdata_j)
        self.pushButton_run_r_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.pushButton_run_r_j.setObjectName("pushButton_run_r_j")
        self.verticalLayout_12.addWidget(self.pushButton_run_r_j)
        self.label_data_guanjiancanshu_j = QtWidgets.QLabel(self.frame_robustdata_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_data_guanjiancanshu_j.sizePolicy().hasHeightForWidth())
        self.label_data_guanjiancanshu_j.setSizePolicy(sizePolicy)
        self.label_data_guanjiancanshu_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                       "background-color: transparent;")
        self.label_data_guanjiancanshu_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_data_guanjiancanshu_j.setObjectName("label_data_guanjiancanshu_j")
        self.verticalLayout_12.addWidget(self.label_data_guanjiancanshu_j)
        self.label_noise_j = QtWidgets.QLabel(self.frame_robustdata_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_noise_j.sizePolicy().hasHeightForWidth())
        self.label_noise_j.setSizePolicy(sizePolicy)
        self.label_noise_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_noise_j.setToolTip("噪声强度给泛化性数据加噪声的大小，第一个数为第一个噪声强度，是0-1之间的小数，第二个数为步长，是0-1之间的小数，的第三个数为加噪声数量，为整数。")
        self.label_noise_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_noise_j.setObjectName("label_noise_j")
        self.verticalLayout_12.addWidget(self.label_noise_j)
        self.lineEdit_noise_j = QtWidgets.QLineEdit(self.frame_robustdata_j)
        self.lineEdit_noise_j.setStyleSheet("color: rgb(255, 255, 255);background-color: rgb(18, 34, 70);")
        self.lineEdit_noise_j.setText('0.01,0.01,20')
        self.lineEdit_noise_j.setObjectName("lineEdit_noise_j")
        self.verticalLayout_12.addWidget(self.lineEdit_noise_j)

        self.label_num_j = QtWidgets.QLabel(self.frame_robustdata_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_num_j.sizePolicy().hasHeightForWidth())
        self.label_num_j.setSizePolicy(sizePolicy)
        self.label_num_j.setStyleSheet(
            "QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_num_j.setToolTip("在决策用例上加噪声的百分比，例如有5个强度的噪声，此处就要设置为5个0-1之间的小数，中间用逗号分开，如0.1,0.2,0.1,0.3,0.2,代表在第一个决策用例的0.1个测试量上加第一种强度的噪声，在第二个决策用例的0.2个测试量上加第二种强度的噪声。")
        self.label_num_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_num_j.setObjectName("label_num_j")
        self.verticalLayout_12.addWidget(self.label_num_j)
        self.lineEdit_num_j = QtWidgets.QLineEdit(self.frame_robustdata_j)
        self.lineEdit_num_j.setStyleSheet("color: rgb(255, 255, 255);background-color: rgb(18, 34, 70);")
        self.lineEdit_num_j.setText('0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.20')
        self.lineEdit_num_j.setObjectName("lineEdit_num_j")
        self.verticalLayout_12.addWidget(self.lineEdit_num_j)

        self.gridLayout_data_main_j.addWidget(self.frame_robustdata_j, 1, 1, 1, 1)
        self.frame_show_j = QtWidgets.QFrame(self.centralwidget)
        self.frame_show_j.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_show_j.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_show_j.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_show_j.setLineWidth(3)
        self.frame_show_j.setMidLineWidth(3)
        self.frame_show_j.setObjectName("frame_show_j")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame_show_j)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.textBrowser_show_j = QtWidgets.QTextBrowser(self.frame_show_j)
        self.textBrowser_show_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_show_j.setObjectName("textBrowser_show_j")
        self.horizontalLayout_6.addWidget(self.textBrowser_show_j)
        self.gridLayout_data_main_j.addWidget(self.frame_show_j, 2, 0, 1, 2)
        self.gridLayout_data_main_j.setColumnStretch(0, 1)
        self.gridLayout_data_main_j.setColumnStretch(1, 1)
        self.gridLayout_data_main_j.setRowStretch(0, 1)
        self.gridLayout_data_main_j.setRowStretch(1, 20)
        self.gridLayout_data_main_j.setRowStretch(2, 10)
        self.verticalLayout_data_j.addLayout(self.gridLayout_data_main_j)
        self.gridLayout_main_j.addLayout(self.verticalLayout_data_j, 0, 1, 2, 1)

        # 决策-干扰工作模式
        self.horizontalLayout_robust_j = QtWidgets.QHBoxLayout()
        self.horizontalLayout_robust_j.setObjectName("horizontalLayout_robust_j")
        self.label_robust_j = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_robust_j.setFont(font)
        self.label_robust_j.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_robust_j.setObjectName("label_robust_j")
        self.horizontalLayout_robust_j.addWidget(self.label_robust_j)
        self.frame_robust_j = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_robust_j.sizePolicy().hasHeightForWidth())
        self.frame_robust_j.setSizePolicy(sizePolicy)
        self.frame_robust_j.setMinimumSize(QtCore.QSize(0, 400))
        self.frame_robust_j.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_robust_j.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_robust_j.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_robust_j.setLineWidth(3)
        self.frame_robust_j.setMidLineWidth(3)
        self.frame_robust_j.setObjectName("frame_robust_j")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_robust_j)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")

        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")

        # self.horizontalLayout_robust_main_j = QtWidgets.QHBoxLayout()
        # self.horizontalLayout_robust_main_j.setObjectName("horizontalLayout_robust_main_j")
        self.verticalLayout_robust_main1_j = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main1_j.setObjectName("verticalLayout_robust_main1_j")
        self.label_A_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_A_r_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_A_r_j.setToolTip('准确率为经过对抗攻击后，模型对于所有攻击样本中依然能够分类正确的样本占总体样本的比值。准确率越大代表样本分类的越准确，所以准确率越大越好。')
        self.label_A_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A_r_j.setObjectName("label_A_r_j")
        self.verticalLayout_robust_main1_j.addWidget(self.label_A_r_j)
        self.pushButton_A_j = QtWidgets.QPushButton(self.frame_robust_j)
        self.pushButton_A_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_A_j.setObjectName("pushButton_A_j")
        self.verticalLayout_robust_main1_j.addWidget(self.pushButton_A_j)
        self.label_A_show_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_A_show_r_j.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_A_show_r_j.setText("")
        self.label_A_show_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_A_show_r_j.setObjectName("label_A_show_r_j")
        self.verticalLayout_robust_main1_j.addWidget(self.label_A_show_r_j)
        self.textBrowser_A_r_2_j = QtWidgets.QTextBrowser(self.frame_robust_j)
        self.textBrowser_A_r_2_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_A_r_2_j.setObjectName("textBrowser_A_r_2_j")
        self.verticalLayout_robust_main1_j.addWidget(self.textBrowser_A_r_2_j)
        # self.verticalLayout_robust_main1_j.setStretch(0, 1)
        # self.verticalLayout_robust_main1_j.setStretch(1, 20)
        # self.verticalLayout_robust_main1_j.setStretch(2, 8)
        self.verticalLayout_robust_main1_j.setStretch(0, 1)
        self.verticalLayout_robust_main1_j.setStretch(1, 1)
        self.verticalLayout_robust_main1_j.setStretch(2, 20)
        self.verticalLayout_robust_main1_j.setStretch(3, 8)
        self.gridLayout_2.addLayout(self.verticalLayout_robust_main1_j, 0, 0, 2, 1)
        self.verticalLayout_robust_main2_j = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main2_j.setObjectName("verticalLayout_robust_main2_j")
        self.label_P_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_P_r_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_P_r_j.setToolTip('精确率为所有被判别为为正的样本中，真正为正为正的样本占的比例。精确率越大代表样本分类的越准确，所以精确率越大越好。')
        self.label_P_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P_r_j.setObjectName("label_P_r_j")
        self.verticalLayout_robust_main2_j.addWidget(self.label_P_r_j)
        self.pushButton_P_j = QtWidgets.QPushButton(self.frame_robust_j)
        self.pushButton_P_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_P_j.setObjectName("pushButton_P_j")
        self.verticalLayout_robust_main2_j.addWidget(self.pushButton_P_j)
        self.label_P_show_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_P_show_r_j.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_P_show_r_j.setText("")
        self.label_P_show_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_P_show_r_j.setObjectName("label_P_show_r_j")
        self.verticalLayout_robust_main2_j.addWidget(self.label_P_show_r_j)
        self.textBrowser_P_r_j = QtWidgets.QTextBrowser(self.frame_robust_j)
        self.textBrowser_P_r_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_P_r_j.setObjectName("textBrowser_P_r_j")
        self.verticalLayout_robust_main2_j.addWidget(self.textBrowser_P_r_j)
        # self.verticalLayout_robust_main2_j.setStretch(0, 1)
        # self.verticalLayout_robust_main2_j.setStretch(1, 20)
        # self.verticalLayout_robust_main2_j.setStretch(2, 8)
        self.verticalLayout_robust_main2_j.setStretch(0, 1)
        self.verticalLayout_robust_main2_j.setStretch(1, 1)
        self.verticalLayout_robust_main2_j.setStretch(2, 20)
        self.verticalLayout_robust_main2_j.setStretch(3, 8)
        self.gridLayout_2.addLayout(self.verticalLayout_robust_main2_j, 0, 1, 2, 1)
        self.verticalLayout_robust_main3_j = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main3_j.setObjectName("verticalLayout_robust_main3_j")
        self.label_R_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_R_r_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_R_r_j.setToolTip('召回率是覆盖面的度量，度量有多个正例被分为正例，即正确预测为正的样本占全部实际为正的样本的比例。召回率越大代表样本分类的越准确，所以召回率越大越好。')
        self.label_R_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R_r_j.setObjectName("label_R_r_j")
        self.verticalLayout_robust_main3_j.addWidget(self.label_R_r_j)
        self.pushButton_R_j = QtWidgets.QPushButton(self.frame_robust_j)
        self.pushButton_R_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_R_j.setObjectName("pushButton_R_j")
        self.verticalLayout_robust_main3_j.addWidget(self.pushButton_R_j)
        self.label_R_show_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_R_show_r_j.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_R_show_r_j.setText("")
        self.label_R_show_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_R_show_r_j.setObjectName("label_R_show_r_j")
        self.verticalLayout_robust_main3_j.addWidget(self.label_R_show_r_j)
        self.textBrowser_R_r_j = QtWidgets.QTextBrowser(self.frame_robust_j)
        self.textBrowser_R_r_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_R_r_j.setObjectName("textBrowser_R_r_j")
        self.verticalLayout_robust_main3_j.addWidget(self.textBrowser_R_r_j)
        # self.verticalLayout_robust_main3_j.setStretch(0, 1)
        # self.verticalLayout_robust_main3_j.setStretch(1, 20)
        # self.verticalLayout_robust_main3_j.setStretch(2, 8)
        self.verticalLayout_robust_main3_j.setStretch(0, 1)
        self.verticalLayout_robust_main3_j.setStretch(1, 1)
        self.verticalLayout_robust_main3_j.setStretch(2, 20)
        self.verticalLayout_robust_main3_j.setStretch(3, 8)
        self.gridLayout_2.addLayout(self.verticalLayout_robust_main3_j, 0, 2, 2, 1)
        self.verticalLayout_robust_main3_j_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main3_j_2.setObjectName("verticalLayout_robust_main3_j_2")

        self.label_jielun_r_j = QtWidgets.QLabel(self.frame_robust_j)
        self.label_jielun_r_j.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: transparent;\n"
                                            "")
        self.label_jielun_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun_r_j.setObjectName("label_jielun_r_j")
        self.gridLayout_2.addWidget(self.label_jielun_r_j, 0, 4, 1, 1)
        self.textBrowser_jielun_r_j = QtWidgets.QTextBrowser(self.frame_robust_j)
        self.textBrowser_jielun_r_j.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.textBrowser_jielun_r_j.setObjectName("textBrowser_jielun_r_j")
        self.gridLayout_2.addWidget(self.textBrowser_jielun_r_j, 1, 4, 1, 1)

        self.label_guanjiancanshu_r_j = QtWidgets.QLabel(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_guanjiancanshu_r_j.sizePolicy().hasHeightForWidth())
        self.label_guanjiancanshu_r_j.setSizePolicy(sizePolicy)
        self.label_guanjiancanshu_r_j.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_r_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_r_j.setObjectName("label_guanjiancanshu_r_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_guanjiancanshu_r_j)
        self.label_threshold_j = QtWidgets.QLabel(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_threshold_j.sizePolicy().hasHeightForWidth())
        self.label_threshold_j.setSizePolicy(sizePolicy)
        self.label_threshold_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_threshold_j.setToolTip("指标值高于此参数则认为是可用的，设置值可在0-1范围内。")
        self.label_threshold_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_threshold_j.setObjectName("label_threshold_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_threshold_j)
        self.lineEdit_threthold_j = QtWidgets.QLineEdit(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.lineEdit_threthold_j.sizePolicy().hasHeightForWidth())
        self.lineEdit_threthold_j.setSizePolicy(sizePolicy)
        self.lineEdit_threthold_j.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_threthold_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_threthold_j.setText('0.9')
        self.lineEdit_threthold_j.setObjectName("lineEdit_threthold_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.lineEdit_threthold_j)
        self.label_lapse_j = QtWidgets.QLabel(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_lapse_j.sizePolicy().hasHeightForWidth())
        self.label_lapse_j.setSizePolicy(sizePolicy)
        self.label_lapse_j.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_lapse_j.setToolTip("指标值低于此参数则认为是失效的，设置值可在0-1范围内。")
        self.label_lapse_j.setAlignment(QtCore.Qt.AlignCenter)
        self.label_lapse_j.setObjectName("label_lapse_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_lapse_j)
        self.lineEdit_lapse_j = QtWidgets.QLineEdit(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.lineEdit_lapse_j.sizePolicy().hasHeightForWidth())
        self.lineEdit_lapse_j.setSizePolicy(sizePolicy)
        self.lineEdit_lapse_j.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_lapse_j.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.lineEdit_lapse_j.setText('0.6')
        self.lineEdit_lapse_j.setObjectName("lineEdit_lapse_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.lineEdit_lapse_j)
        self.pushButton_ypred_j = QtWidgets.QPushButton(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ypred_j.sizePolicy().hasHeightForWidth())
        self.pushButton_ypred_j.setSizePolicy(sizePolicy)
        self.pushButton_ypred_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                              "background-color: rgb(225, 225, 225);")
        self.pushButton_ypred_j.setObjectName("pushButton_ypred_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_ypred_j)
        self.pushButton_input1_r_j = QtWidgets.QPushButton(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_input1_r_j.sizePolicy().hasHeightForWidth())
        self.pushButton_input1_r_j.setSizePolicy(sizePolicy)
        self.pushButton_input1_r_j.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                 "background-color: rgb(225, 225, 225);")
        self.pushButton_input1_r_j.setObjectName("pushButton_input1_r_j")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_input1_r_j)
        self.pushButton_run_r_j_2 = QtWidgets.QPushButton(self.frame_robust_j)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_run_r_j_2.sizePolicy().hasHeightForWidth())
        self.pushButton_run_r_j_2.setSizePolicy(sizePolicy)
        self.pushButton_run_r_j_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_run_r_j_2.setObjectName("pushButton_run_r_j_2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_run_r_j_2)
        self.gridLayout_2.addLayout(self.verticalLayout_robust_main3_j_2, 0, 5, 2, 1)
        self.horizontalLayout_5.addLayout(self.gridLayout_2)
        self.horizontalLayout_robust_j.addWidget(self.frame_robust_j)
        self.gridLayout_main_j.addLayout(self.horizontalLayout_robust_j, 1, 0, 1, 1)
        self.gridLayout_main_j.setColumnStretch(0, 3)
        self.gridLayout_main_j.setColumnStretch(1, 1)
        self.gridLayout_main_j.setRowStretch(0, 1)
        self.gridLayout_main_j.setRowStretch(1, 1)
        self.verticalLayout_all.addLayout(self.gridLayout_main_j)

#神经网络决策
        self.gridLayout_main_j2 = QtWidgets.QGridLayout()
        self.gridLayout_main_j2.setObjectName("gridLayout_main_j2")
        self.horizontalLayout_gener_j2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_gener_j2.setObjectName("horizontalLayout_gener_j2")
        self.label_gener_j2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener_j2.setFont(font)
        self.label_gener_j2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener_j2.setObjectName("label_gener_j2")
        self.horizontalLayout_gener_j2.addWidget(self.label_gener_j2)
        self.frame_gener_j2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_gener_j2.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_gener_j2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_gener_j2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_gener_j2.setLineWidth(3)
        self.frame_gener_j2.setMidLineWidth(3)
        self.frame_gener_j2.setObjectName("frame_gener_j2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_gener_j2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout_gener_main_j2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_gener_main_j2.setObjectName("horizontalLayout_gener_main_j2")
        self.gridLayout_gener_main1_j2 = QtWidgets.QGridLayout()
        self.gridLayout_gener_main1_j2.setObjectName("gridLayout_gener_main1_j2")
        self.textBrowser_FCL = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_FCL.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                           "color: rgb(255, 255, 255);")
        self.textBrowser_FCL.setObjectName("textBrowser_FCL")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_FCL, 2, 3, 2, 1)
        self.label_XFCL = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_XFCL.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_XFCL.setToolTip('方差率为各决策的方差占总方差的百分比，可以较好的得到各个决策的偏差程度。方差率越低越好。')
        self.label_XFCL.setAlignment(QtCore.Qt.AlignCenter)
        self.label_XFCL.setObjectName("label_XFCL")
        self.gridLayout_gener_main1_j2.addWidget(self.label_XFCL, 4, 0, 1, 1)
        self.textBrowser_JFGWC = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_JFGWC.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                             "color: rgb(255, 255, 255);")
        self.textBrowser_JFGWC.setObjectName("textBrowser_JFGWC")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_JFGWC, 0, 1, 2, 1)
        self.pushButton_PJJDWC = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_PJJDWC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_PJJDWC.setObjectName("pushButton_PJJDWC")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_PJJDWC, 1, 2, 1, 1)
        self.textBrowser_PJJJWC = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_PJJJWC.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                              "color: rgb(255, 255, 255);")
        self.textBrowser_PJJJWC.setObjectName("textBrowser_PJJJWC")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_PJJJWC, 0, 3, 2, 1)
        self.pushButton_FCL = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_FCL.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_FCL.setObjectName("pushButton_FCL")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_FCL, 3, 2, 1, 1)
        self.label_PCL = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_PCL.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_PCL.setToolTip('决定系数是反映模型拟合优度的重要的统计量，为回归平方和与总平方和之比。决定系数越高越好。')
        self.label_PCL.setAlignment(QtCore.Qt.AlignCenter)
        self.label_PCL.setObjectName("label_PCL")
        self.gridLayout_gener_main1_j2.addWidget(self.label_PCL, 2, 0, 1, 1)
        self.pushButton_PCL = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_PCL.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(28, 118, 132);")
        self.pushButton_PCL.setObjectName("pushButton_PCL")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_PCL, 3, 0, 1, 1)
        self.pushButton_JFGWC = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_JFGWC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_JFGWC.setObjectName("pushButton_JFGWC")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_JFGWC, 1, 0, 1, 1)
        self.textBrowser_PCL = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_PCL.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                           "color: rgb(255, 255, 255);")
        self.textBrowser_PCL.setObjectName("textBrowser_PCL")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_PCL, 2, 1, 2, 1)
        self.label_PJJDWC = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_PJJDWC.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_PJJDWC.setToolTip('平均绝对误差是所有单个观测值与算术平均值的偏差的绝对值的平均。平均绝对误差越低越好。')
        self.label_PJJDWC.setAlignment(QtCore.Qt.AlignCenter)
        self.label_PJJDWC.setObjectName("label_PJJDWC")
        self.gridLayout_gener_main1_j2.addWidget(self.label_PJJDWC, 0, 2, 1, 1)
        self.label_JFGWC = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_JFGWC.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_JFGWC.setToolTip('均方误差是预测值与真实值偏差的平方与观测次数n比值。均方误差越低越好。')
        self.label_JFGWC.setAlignment(QtCore.Qt.AlignCenter)
        self.label_JFGWC.setObjectName("label_JFGWC")
        self.gridLayout_gener_main1_j2.addWidget(self.label_JFGWC, 0, 0, 1, 1)
        self.label_JSFCFS = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_JSFCFS.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_JSFCFS.setToolTip('可解释方差是(1- 样本值与预测值之差的方差/样本方差)。可解释方差越高越好。')
        self.label_JSFCFS.setAlignment(QtCore.Qt.AlignCenter)
        self.label_JSFCFS.setObjectName("label_JSFCFS")
        self.gridLayout_gener_main1_j2.addWidget(self.label_JSFCFS, 4, 2, 1, 1)
        self.label_FCL = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_FCL.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_FCL.setToolTip('中位数绝对误差是对单变量数值型数据的样本偏差的一种鲁棒性测量。同时也可以表示由样本的中位数绝对误差估计得出的总体参数。中位数绝对误差数越低越好。')
        self.label_FCL.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FCL.setObjectName("label_FCL")
        self.gridLayout_gener_main1_j2.addWidget(self.label_FCL, 2, 2, 1, 1)
        self.pushButton_XFCL = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_XFCL.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_XFCL.setObjectName("pushButton_XFCL")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_XFCL, 5, 0, 1, 1)
        self.textBrowser_XFCL = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_XFCL.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                            "color: rgb(255, 255, 255);")
        self.textBrowser_XFCL.setObjectName("textBrowser_XFCL")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_XFCL, 4, 1, 2, 1)
        self.pushButton_JSFCFS = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_JSFCFS.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_JSFCFS.setObjectName("pushButton_JSFCFS")
        self.gridLayout_gener_main1_j2.addWidget(self.pushButton_JSFCFS, 5, 2, 1, 1)
        self.textBrowser_JSFCFS = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_JSFCFS.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                              "color: rgb(255, 255, 255);")
        self.textBrowser_JSFCFS.setObjectName("textBrowser_JSFCFS")
        self.gridLayout_gener_main1_j2.addWidget(self.textBrowser_JSFCFS, 4, 3, 2, 1)
        self.horizontalLayout_gener_main_j2.addLayout(self.gridLayout_gener_main1_j2)
        self.gridLayout_gener_main2_j2 = QtWidgets.QGridLayout()
        self.gridLayout_gener_main2_j2.setObjectName("gridLayout_gener_main2_j2")
        self.label_PJJJWCBFB = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_PJJJWCBFB.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_PJJJWCBFB.setToolTip('平均绝对误差百分比相比平均绝对误差相当于把每个点的误差进行了归一化，降低了个别离群点带来的绝对误差的影响。平均绝对误差百分比越低越好。')
        self.label_PJJJWCBFB.setAlignment(QtCore.Qt.AlignCenter)
        self.label_PJJJWCBFB.setObjectName("label_PJJJWCBFB")
        self.gridLayout_gener_main2_j2.addWidget(self.label_PJJJWCBFB, 0, 0, 1, 1)
        self.label_MSLE = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_MSLE.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_MSLE.setToolTip('均方根误差是预测值与真实值偏差的平方与观测次数n比值的平方根。均方根误差百分比越低越好。')
        self.label_MSLE.setAlignment(QtCore.Qt.AlignCenter)
        self.label_MSLE.setObjectName("label_MSLE")
        self.gridLayout_gener_main2_j2.addWidget(self.label_MSLE, 4, 0, 1, 1)
        self.pushButton_XEBDXS = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_XEBDXS.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_XEBDXS.setObjectName("pushButton_XEBDXS")
        self.gridLayout_gener_main2_j2.addWidget(self.pushButton_XEBDXS, 3, 0, 1, 1)
        self.label_XEBDXS = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_XEBDXS.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:transparent;}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_XEBDXS.setToolTip('希尔不等系数总是介于0-1之间。希尔不等系数越低越好。')
        self.label_XEBDXS.setAlignment(QtCore.Qt.AlignCenter)
        self.label_XEBDXS.setObjectName("label_XEBDXS")
        self.gridLayout_gener_main2_j2.addWidget(self.label_XEBDXS, 2, 0, 1, 1)
        self.label_jielun_j2 = QtWidgets.QLabel(self.frame_gener_j2)
        self.label_jielun_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color:transparent;")
        self.label_jielun_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun_j2.setObjectName("label_jielun_j2")
        self.gridLayout_gener_main2_j2.addWidget(self.label_jielun_j2, 2, 2, 1, 1)
        self.pushButton_PJJDBFBWC = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_PJJDBFBWC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.pushButton_PJJDBFBWC.setObjectName("pushButton_PJJDBFBWC")
        self.gridLayout_gener_main2_j2.addWidget(self.pushButton_PJJDBFBWC, 1, 0, 1, 1)
        self.pushButton_MSLE = QtWidgets.QPushButton(self.frame_gener_j2)
        self.pushButton_MSLE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "background-color: rgb(28, 118, 132);")
        self.pushButton_MSLE.setObjectName("pushButton_MSLE")
        self.gridLayout_gener_main2_j2.addWidget(self.pushButton_MSLE, 5, 0, 1, 1)
        self.textBrowser_PJJDBFBWC = QtWidgets.QTextBrowser(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_PJJDBFBWC.sizePolicy().hasHeightForWidth())
        self.textBrowser_PJJDBFBWC.setSizePolicy(sizePolicy)
        self.textBrowser_PJJDBFBWC.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                                 "color: rgb(255, 255, 255);")
        self.textBrowser_PJJDBFBWC.setObjectName("textBrowser_PJJDBFBWC")
        self.gridLayout_gener_main2_j2.addWidget(self.textBrowser_PJJDBFBWC, 0, 1, 2, 1)
        self.textBrowser_XEBDXS = QtWidgets.QTextBrowser(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_XEBDXS.sizePolicy().hasHeightForWidth())
        self.textBrowser_XEBDXS.setSizePolicy(sizePolicy)
        self.textBrowser_XEBDXS.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                              "color: rgb(255, 255, 255);")
        self.textBrowser_XEBDXS.setObjectName("textBrowser_XEBDXS")
        self.gridLayout_gener_main2_j2.addWidget(self.textBrowser_XEBDXS, 2, 1, 2, 1)
        self.textBrowser_MSLE = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_MSLE.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                            "color: rgb(255, 255, 255);")
        self.textBrowser_MSLE.setObjectName("textBrowser_MSLE")
        self.gridLayout_gener_main2_j2.addWidget(self.textBrowser_MSLE, 4, 1, 2, 1)
        self.textBrowser_jielun_j2 = QtWidgets.QTextBrowser(self.frame_gener_j2)
        self.textBrowser_jielun_j2.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255);")
        self.textBrowser_jielun_j2.setObjectName("textBrowser_jielun_j2")
        self.gridLayout_gener_main2_j2.addWidget(self.textBrowser_jielun_j2, 0, 5, 6, 1)
        self.gridLayout_gener_main2_j2.setColumnStretch(0, 1)
        self.gridLayout_gener_main2_j2.setRowStretch(0, 1)
        self.horizontalLayout_gener_main_j2.addLayout(self.gridLayout_gener_main2_j2)
        self.verticalLayout_gener_main3_j2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_gener_main3_j2.setSpacing(22)
        self.verticalLayout_gener_main3_j2.setObjectName("verticalLayout_gener_main3_j2")
        self.pushButton_y_pred_j2 = QtWidgets.QPushButton(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_y_pred_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_y_pred_j2.setSizePolicy(sizePolicy)
        self.pushButton_y_pred_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_y_pred_j2.setObjectName("pushButton_y_pred_j2")
        self.verticalLayout_gener_main3_j2.addWidget(self.pushButton_y_pred_j2)
        self.pushButton_y_pred1_j2 = QtWidgets.QPushButton(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_y_pred1_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_y_pred1_j2.setSizePolicy(sizePolicy)
        self.pushButton_y_pred1_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                "background-color: rgb(225, 225, 225);")
        self.pushButton_y_pred1_j2.setObjectName("pushButton_y_pred1_j2")
        self.verticalLayout_gener_main3_j2.addWidget(self.pushButton_y_pred1_j2)
        self.pushButton_y_true_j2 = QtWidgets.QPushButton(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_y_true_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_y_true_j2.setSizePolicy(sizePolicy)
        self.pushButton_y_true_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_y_true_j2.setObjectName("pushButton_y_true_j2")
        self.verticalLayout_gener_main3_j2.addWidget(self.pushButton_y_true_j2)
        self.pushButton_run_j2 = QtWidgets.QPushButton(self.frame_gener_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_run_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_run_j2.setSizePolicy(sizePolicy)
        self.pushButton_run_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_run_j2.setObjectName("pushButton_run_j2")
        self.verticalLayout_gener_main3_j2.addWidget(self.pushButton_run_j2)
        self.verticalLayout_gener_main3_j2.setStretch(0, 1)
        self.verticalLayout_gener_main3_j2.setStretch(1, 1)
        self.verticalLayout_gener_main3_j2.setStretch(2, 1)
        self.horizontalLayout_gener_main_j2.addLayout(self.verticalLayout_gener_main3_j2)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_gener_main_j2)
        self.horizontalLayout_gener_j2.addWidget(self.frame_gener_j2)
        self.gridLayout_main_j2.addLayout(self.horizontalLayout_gener_j2, 0, 0, 1, 1)
        self.verticalLayout_data_j2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_data_j2.setObjectName("verticalLayout_data_j2")
        self.label_data_j2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_data_j2.setFont(font)
        self.label_data_j2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_data_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_data_j2.setObjectName("label_data_j2")
        self.verticalLayout_data_j2.addWidget(self.label_data_j2)
        self.gridLayout_data_main_j2 = QtWidgets.QGridLayout()
        self.gridLayout_data_main_j2.setObjectName("gridLayout_data_main_j2")
        self.frame_show_j2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_show_j2.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_show_j2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_show_j2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_show_j2.setLineWidth(3)
        self.frame_show_j2.setMidLineWidth(3)
        self.frame_show_j2.setObjectName("frame_show_j2")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame_show_j2)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.textBrowser_show_j2 = QtWidgets.QTextBrowser(self.frame_show_j2)
        self.textBrowser_show_j2.setStyleSheet("background-color: rgb(18, 34, 70);color:rgb(255,255,255)")
        self.textBrowser_show_j2.setObjectName("textBrowser_show_j2")
        self.horizontalLayout_6.addWidget(self.textBrowser_show_j2)
        self.gridLayout_data_main_j2.addWidget(self.frame_show_j2, 2, 0, 1, 2)
        self.label_robustdata_j2 = QtWidgets.QLabel(self.centralwidget)
        self.label_robustdata_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.label_robustdata_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_robustdata_j2.setObjectName("label_robustdata_j2")
        self.gridLayout_data_main_j2.addWidget(self.label_robustdata_j2, 0, 0, 1, 2)
        self.frame_robustdata_j2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_robustdata_j2.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_robustdata_j2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_robustdata_j2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_robustdata_j2.setLineWidth(3)
        self.frame_robustdata_j2.setMidLineWidth(3)
        self.frame_robustdata_j2.setObjectName("frame_robustdata_j2")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_robustdata_j2)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.pushButton_source_r_j2 = QtWidgets.QPushButton(self.frame_robustdata_j2)
        self.pushButton_source_r_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_source_r_j2.setObjectName("pushButton_source_r_j2")
        self.verticalLayout_12.addWidget(self.pushButton_source_r_j2)
        self.pushButton_tardir_r_j2 = QtWidgets.QPushButton(self.frame_robustdata_j2)
        self.pushButton_tardir_r_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_tardir_r_j2.setObjectName("pushButton_tardir_r_j2")
        self.verticalLayout_12.addWidget(self.pushButton_tardir_r_j2)
        self.pushButton_run_r_j2 = QtWidgets.QPushButton(self.frame_robustdata_j2)
        self.pushButton_run_r_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.pushButton_run_r_j2.setObjectName("pushButton_run_r_j2")
        self.verticalLayout_12.addWidget(self.pushButton_run_r_j2)
        self.label_data_guanjiancanshu_j2 = QtWidgets.QLabel(self.frame_robustdata_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_data_guanjiancanshu_j2.sizePolicy().hasHeightForWidth())
        self.label_data_guanjiancanshu_j2.setSizePolicy(sizePolicy)
        self.label_data_guanjiancanshu_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                        "background-color: transparent;")
        self.label_data_guanjiancanshu_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_data_guanjiancanshu_j2.setObjectName("label_data_guanjiancanshu_j2")
        self.verticalLayout_12.addWidget(self.label_data_guanjiancanshu_j2)
        self.label_noise_j2 = QtWidgets.QLabel(self.frame_robustdata_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_noise_j2.sizePolicy().hasHeightForWidth())
        self.label_noise_j2.setSizePolicy(sizePolicy)
        self.label_noise_j2.setToolTip("")
        self.label_noise_j2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_noise_j2.setToolTip("噪声强度给泛化性数据加噪声的大小，第一个数为第一个噪声强度，是0-1之间的小数，第二个数为步长，是0-1之间的小数，的第三个数为加噪声数量，为整数。")
        self.label_noise_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_noise_j2.setObjectName("label_noise_j2")
        self.verticalLayout_12.addWidget(self.label_noise_j2)
        self.lineEdit_noise_j2 = QtWidgets.QLineEdit(self.frame_robustdata_j2)
        self.lineEdit_noise_j2.setStyleSheet("color: rgb(255, 255, 255);background-color: rgb(18, 34, 70);")
        self.lineEdit_noise_j2.setText('0.01,0.01,20')
        self.lineEdit_noise_j2.setObjectName("lineEdit_noise_j2")
        self.verticalLayout_12.addWidget(self.lineEdit_noise_j2)
        self.gridLayout_data_main_j2.addWidget(self.frame_robustdata_j2, 1, 0, 1, 2)
        self.gridLayout_data_main_j2.setColumnStretch(0, 1)
        self.gridLayout_data_main_j2.setColumnStretch(1, 1)
        self.gridLayout_data_main_j2.setRowStretch(0, 1)
        self.gridLayout_data_main_j2.setRowStretch(1, 20)
        self.gridLayout_data_main_j2.setRowStretch(2, 10)
        self.verticalLayout_data_j2.addLayout(self.gridLayout_data_main_j2)
        self.gridLayout_main_j2.addLayout(self.verticalLayout_data_j2, 0, 1, 2, 1)
        self.horizontalLayout_robust_j2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_robust_j2.setObjectName("horizontalLayout_robust_j2")
        self.label_robust_j2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_robust_j2.setFont(font)
        self.label_robust_j2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_robust_j2.setObjectName("label_robust_j2")
        self.horizontalLayout_robust_j2.addWidget(self.label_robust_j2)
        self.frame_robust_j2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_robust_j2.sizePolicy().hasHeightForWidth())
        self.frame_robust_j2.setSizePolicy(sizePolicy)
        self.frame_robust_j2.setMinimumSize(QtCore.QSize(0, 300))
        self.frame_robust_j2.setStyleSheet("background-color: rgb(21, 57, 85);")
        self.frame_robust_j2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_robust_j2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_robust_j2.setLineWidth(3)
        self.frame_robust_j2.setMidLineWidth(3)
        self.frame_robust_j2.setObjectName("frame_robust_j2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_robust_j2)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.gridLayout_robust_j2 = QtWidgets.QGridLayout()
        self.gridLayout_robust_j2.setObjectName("gridLayout_robust_j2")
        self.textBrowser_jielun_r_j2 = QtWidgets.QTextBrowser(self.frame_robust_j2)
        self.textBrowser_jielun_r_j2.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                                   "color: rgb(255, 255, 255);")
        self.textBrowser_jielun_r_j2.setObjectName("textBrowser_jielun_r_j2")
        self.gridLayout_robust_j2.addWidget(self.textBrowser_jielun_r_j2, 1, 4, 1, 1)
        self.label_jielun_r_j2 = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_jielun_r_j2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: transparent;\n"
                                             "")
        self.label_jielun_r_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jielun_r_j2.setObjectName("label_jielun_r_j2")
        self.gridLayout_robust_j2.addWidget(self.label_jielun_r_j2, 0, 4, 1, 1)
        self.verticalLayout_robust_main3_j2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main3_j2.setObjectName("verticalLayout_robust_main3_j2")
        self.label_jsfcfs = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_jsfcfs.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: transparent;\n"
                                        "")
        self.label_jsfcfs.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jsfcfs.setObjectName("label_jsfcfs")
        self.verticalLayout_robust_main3_j2.addWidget(self.label_jsfcfs)
        self.pushButton_jsfcfs = QtWidgets.QPushButton(self.frame_robust_j2)
        self.pushButton_jsfcfs.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_jsfcfs.setObjectName("pushButton_jsfcfs")
        self.verticalLayout_robust_main3_j2.addWidget(self.pushButton_jsfcfs)
        self.label_jsfcfs_2 = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_jsfcfs_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_jsfcfs_2.setText("")
        self.label_jsfcfs_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jsfcfs_2.setObjectName("label_jsfcfs_2")
        self.verticalLayout_robust_main3_j2.addWidget(self.label_jsfcfs_2)
        self.textBrowser_jsfcfs = QtWidgets.QTextBrowser(self.frame_robust_j2)
        self.textBrowser_jsfcfs.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                              "color: rgb(255, 255, 255);")
        self.textBrowser_jsfcfs.setObjectName("textBrowser_jsfcfs")
        self.verticalLayout_robust_main3_j2.addWidget(self.textBrowser_jsfcfs)
        self.verticalLayout_robust_main3_j2.setStretch(0, 1)
        self.verticalLayout_robust_main3_j2.setStretch(1, 1)
        self.verticalLayout_robust_main3_j2.setStretch(2, 20)
        self.verticalLayout_robust_main3_j2.setStretch(3, 8)
        self.gridLayout_robust_j2.addLayout(self.verticalLayout_robust_main3_j2, 0, 2, 2, 1)
        self.verticalLayout_robust_main3_j_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main3_j_2.setObjectName("verticalLayout_robust_main3_j_2")
        self.label_guanjiancanshu_r_j2 = QtWidgets.QLabel(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_guanjiancanshu_r_j2.sizePolicy().hasHeightForWidth())
        self.label_guanjiancanshu_r_j2.setSizePolicy(sizePolicy)
        self.label_guanjiancanshu_r_j2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_guanjiancanshu_r_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_guanjiancanshu_r_j2.setObjectName("label_guanjiancanshu_r_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_guanjiancanshu_r_j2)
        self.label_threshold_j2 = QtWidgets.QLabel(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_threshold_j2.sizePolicy().hasHeightForWidth())
        self.label_threshold_j2.setSizePolicy(sizePolicy)
        self.label_threshold_j2.setToolTip("")
        self.label_threshold_j2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_threshold_j2.setToolTip("指标值低于此参数则认为是可用的，设置值可在1-100范围内。")
        self.label_threshold_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_threshold_j2.setObjectName("label_threshold_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_threshold_j2)
        self.lineEdit_threthold_j2 = QtWidgets.QLineEdit(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_threthold_j2.sizePolicy().hasHeightForWidth())
        self.lineEdit_threthold_j2.setSizePolicy(sizePolicy)
        self.lineEdit_threthold_j2.setMinimumSize(QtCore.QSize(0, 0))
        self.lineEdit_threthold_j2.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.lineEdit_threthold_j2.setText('30')
        self.lineEdit_threthold_j2.setObjectName("lineEdit_threthold_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.lineEdit_threthold_j2)
        self.label_lapse_j2 = QtWidgets.QLabel(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_lapse_j2.sizePolicy().hasHeightForWidth())
        self.label_lapse_j2.setSizePolicy(sizePolicy)
        self.label_lapse_j2.setToolTip("")
        self.label_lapse_j2.setStyleSheet("QLabel{color: rgb(255, 255, 255);background-color:rgb(28, 118, 132);}""QToolTip{color: rgb(0, 0, 0)}")
        self.label_lapse_j2.setToolTip("指标值低于此参数则认为是失效的，设置值可在1-100范围内。")
        self.label_lapse_j2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_lapse_j2.setObjectName("label_lapse_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.label_lapse_j2)
        self.lineEdit_lapse_j2 = QtWidgets.QLineEdit(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_lapse_j2.sizePolicy().hasHeightForWidth())
        self.lineEdit_lapse_j2.setSizePolicy(sizePolicy)
        self.lineEdit_lapse_j2.setMinimumSize(QtCore.QSize(0, 0))
        self.lineEdit_lapse_j2.setStyleSheet("background-color: rgb(18, 34, 70);color: rgb(255, 255, 255)")
        self.lineEdit_lapse_j2.setText('60')
        self.lineEdit_lapse_j2.setObjectName("lineEdit_lapse_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.lineEdit_lapse_j2)
        self.pushButton_ypred_j2 = QtWidgets.QPushButton(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ypred_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_ypred_j2.setSizePolicy(sizePolicy)
        self.pushButton_ypred_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_ypred_j2.setObjectName("pushButton_ypred_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_ypred_j2)
        self.pushButton_input1_r_j2 = QtWidgets.QPushButton(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_input1_r_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_input1_r_j2.setSizePolicy(sizePolicy)
        self.pushButton_input1_r_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_input1_r_j2.setObjectName("pushButton_input1_r_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_input1_r_j2)
        self.pushButton_input2_r_j2 = QtWidgets.QPushButton(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_input2_r_j2.sizePolicy().hasHeightForWidth())
        self.pushButton_input2_r_j2.setSizePolicy(sizePolicy)
        self.pushButton_input2_r_j2.setStyleSheet("color: rgb(0, 0, 0);\n"
                                                  "background-color: rgb(225, 225, 225);")
        self.pushButton_input2_r_j2.setObjectName("pushButton_input2_r_j2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_input2_r_j2)
        self.pushButton_run_r_j2_2 = QtWidgets.QPushButton(self.frame_robust_j2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_run_r_j2_2.sizePolicy().hasHeightForWidth())
        self.pushButton_run_r_j2_2.setSizePolicy(sizePolicy)
        self.pushButton_run_r_j2_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.pushButton_run_r_j2_2.setObjectName("pushButton_run_r_j2_2")
        self.verticalLayout_robust_main3_j_2.addWidget(self.pushButton_run_r_j2_2)
        self.gridLayout_robust_j2.addLayout(self.verticalLayout_robust_main3_j_2, 0, 5, 2, 1)
        self.verticalLayout_robust_main2_j2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main2_j2.setObjectName("verticalLayout_robust_main2_j2")
        self.label_jfgwc = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_jfgwc.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "background-color: transparent;\n"
                                       "")
        self.label_jfgwc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jfgwc.setObjectName("label_jfgwc")
        self.verticalLayout_robust_main2_j2.addWidget(self.label_jfgwc)
        self.pushButton_jfgwc = QtWidgets.QPushButton(self.frame_robust_j2)
        self.pushButton_jfgwc.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(28, 118, 132);")
        self.pushButton_jfgwc.setObjectName("pushButton_jfgwc")
        self.verticalLayout_robust_main2_j2.addWidget(self.pushButton_jfgwc)
        self.label_jfgwc_2 = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_jfgwc_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_jfgwc_2.setText("")
        self.label_jfgwc_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_jfgwc_2.setObjectName("label_jfgwc_2")
        self.verticalLayout_robust_main2_j2.addWidget(self.label_jfgwc_2)
        self.textBrowser_jfgwc = QtWidgets.QTextBrowser(self.frame_robust_j2)
        self.textBrowser_jfgwc.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                             "color: rgb(255, 255, 255);")
        self.textBrowser_jfgwc.setObjectName("textBrowser_jfgwc")
        self.verticalLayout_robust_main2_j2.addWidget(self.textBrowser_jfgwc)
        self.verticalLayout_robust_main2_j2.setStretch(0, 1)
        self.verticalLayout_robust_main2_j2.setStretch(1, 1)
        self.verticalLayout_robust_main2_j2.setStretch(2, 20)
        self.verticalLayout_robust_main2_j2.setStretch(3, 8)
        self.gridLayout_robust_j2.addLayout(self.verticalLayout_robust_main2_j2, 0, 1, 2, 1)
        self.verticalLayout_robust_main1_j2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_robust_main1_j2.setObjectName("verticalLayout_robust_main1_j2")
        self.label_pjjdwc = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_pjjdwc.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "background-color: transparent;\n"
                                        "")
        self.label_pjjdwc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pjjdwc.setObjectName("label_pjjdwc")
        self.verticalLayout_robust_main1_j2.addWidget(self.label_pjjdwc)
        self.pushButton_pjjdwc = QtWidgets.QPushButton(self.frame_robust_j2)
        self.pushButton_pjjdwc.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(28, 118, 132);")
        self.pushButton_pjjdwc.setObjectName("pushButton_pjjdwc")
        self.verticalLayout_robust_main1_j2.addWidget(self.pushButton_pjjdwc)
        self.label_pjjdwc_2 = QtWidgets.QLabel(self.frame_robust_j2)
        self.label_pjjdwc_2.setStyleSheet("background-color: rgb(18, 34, 70);")
        self.label_pjjdwc_2.setText("")
        self.label_pjjdwc_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pjjdwc_2.setObjectName("label_pjjdwc_2")
        self.verticalLayout_robust_main1_j2.addWidget(self.label_pjjdwc_2)
        self.textBrowser_pjjdwc = QtWidgets.QTextBrowser(self.frame_robust_j2)
        self.textBrowser_pjjdwc.setStyleSheet("background-color: rgb(18, 34, 70);\n"
                                              "color: rgb(255, 255, 255);")
        self.textBrowser_pjjdwc.setObjectName("textBrowser_pjjdwc")
        self.verticalLayout_robust_main1_j2.addWidget(self.textBrowser_pjjdwc)
        self.verticalLayout_robust_main1_j2.setStretch(0, 1)
        self.verticalLayout_robust_main1_j2.setStretch(1, 1)
        self.verticalLayout_robust_main1_j2.setStretch(2, 20)
        self.verticalLayout_robust_main1_j2.setStretch(3, 8)
        self.gridLayout_robust_j2.addLayout(self.verticalLayout_robust_main1_j2, 0, 0, 2, 1)
        self.horizontalLayout_5.addLayout(self.gridLayout_robust_j2)
        self.horizontalLayout_robust_j2.addWidget(self.frame_robust_j2)
        self.gridLayout_main_j2.addLayout(self.horizontalLayout_robust_j2, 1, 0, 1, 1)
        self.gridLayout_main_j2.setColumnStretch(0, 5)
        self.gridLayout_main_j2.setColumnStretch(1, 1)
        self.gridLayout_main_j2.setRowStretch(0, 1)
        self.gridLayout_main_j2.setRowStretch(1, 3)
        self.verticalLayout_all.addLayout(self.gridLayout_main_j2)

#自主能力等级
        self.gridLayout_main_zizhu = QtWidgets.QGridLayout()
        self.gridLayout_main_zizhu.setObjectName("gridLayout_main_zizhu")
        self.verticalLayout_rengong = QtWidgets.QVBoxLayout()
        self.verticalLayout_rengong.setObjectName("verticalLayout_rengong")
        self.label_rengong = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_rengong.sizePolicy().hasHeightForWidth())
        self.label_rengong.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_rengong.setFont(font)
        self.label_rengong.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_rengong.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_rengong.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_rengong.setAlignment(QtCore.Qt.AlignCenter)
        self.label_rengong.setObjectName("label_rengong")
        self.verticalLayout_rengong.addWidget(self.label_rengong)
        self.frame_gengxin = QtWidgets.QFrame(self.centralwidget)
        self.frame_gengxin.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                         "border-color: rgb(255, 97, 6);\n"
                                         "")
        self.frame_gengxin.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_gengxin.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_gengxin.setObjectName("frame_gengxin")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_gengxin)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_gengxin = QtWidgets.QLabel(self.frame_gengxin)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_gengxin.sizePolicy().hasHeightForWidth())
        self.label_gengxin.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_gengxin.setFont(font)
        self.label_gengxin.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gengxin.setAlignment(QtCore.Qt.AlignCenter)
        self.label_gengxin.setObjectName("label_gengxin")
        self.verticalLayout.addWidget(self.label_gengxin)
        self.radioButton_gengxinA = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton_gengxinA.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_gengxinA.setFont(font)
        self.radioButton_gengxinA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.radioButton_gengxinA.setObjectName("radioButton_gengxinA")
        self.verticalLayout.addWidget(self.radioButton_gengxinA)
        self.pushButton = QtWidgets.QPushButton(self.frame_gengxin)
        self.pushButton.setStyleSheet("background-color: transparent")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.radioButton_gengxinB = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton_gengxinB.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_gengxinB.setFont(font)
        self.radioButton_gengxinB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.radioButton_gengxinB.setObjectName("radioButton_gengxinB")
        self.verticalLayout.addWidget(self.radioButton_gengxinB)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_gengxin)
        self.pushButton_2.setStyleSheet("background-color: transparent")
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.radioButton_gengxinC = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton_gengxinC.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_gengxinC.setFont(font)
        self.radioButton_gengxinC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.radioButton_gengxinC.setObjectName("radioButton_gengxinC")
        self.verticalLayout.addWidget(self.radioButton_gengxinC)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_gengxin)
        self.pushButton_3.setStyleSheet("background-color: transparent")
        self.pushButton_3.setText("")
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.radioButton_gengxinD = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton_gengxinD.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_gengxinD.setFont(font)
        self.radioButton_gengxinD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.radioButton_gengxinD.setObjectName("radioButton_gengxinD")
        self.verticalLayout.addWidget(self.radioButton_gengxinD)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_gengxin)
        self.pushButton_4.setStyleSheet("background-color: transparent")
        self.pushButton_4.setText("")
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.radioButton_gengxinE = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton_gengxinE.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_gengxinE.setFont(font)
        self.radioButton_gengxinE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(28, 118, 132);")
        self.radioButton_gengxinE.setObjectName("radioButton_gengxinE")
        self.verticalLayout.addWidget(self.radioButton_gengxinE)
        self.pushButton_22 = QtWidgets.QPushButton(self.frame_gengxin)
        self.pushButton_22.setStyleSheet("background-color: transparent")
        self.pushButton_22.setText("")
        self.pushButton_22.setObjectName("pushButton_22")
        self.verticalLayout.addWidget(self.pushButton_22)
        self.radioButton = QtWidgets.QRadioButton(self.frame_gengxin)
        self.radioButton.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton.setFont(font)
        self.radioButton.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "background-color: rgb(28, 118, 132);")
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout.addWidget(self.radioButton)
        self.verticalLayout_rengong.addWidget(self.frame_gengxin)
        self.frame_xuexi = QtWidgets.QFrame(self.centralwidget)
        self.frame_xuexi.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                       "border-color: rgb(255, 97, 6);\n"
                                       "")
        self.frame_xuexi.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xuexi.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xuexi.setObjectName("frame_xuexi")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_xuexi)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_xuexi = QtWidgets.QLabel(self.frame_xuexi)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_xuexi.sizePolicy().hasHeightForWidth())
        self.label_xuexi.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_xuexi.setFont(font)
        self.label_xuexi.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_xuexi.setAlignment(QtCore.Qt.AlignCenter)
        self.label_xuexi.setObjectName("label_xuexi")
        self.verticalLayout_2.addWidget(self.label_xuexi)
        self.radioButton_xuexiA = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_xuexiA.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_xuexiA.setFont(font)
        self.radioButton_xuexiA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_xuexiA.setObjectName("radioButton_xuexiA")
        self.verticalLayout_2.addWidget(self.radioButton_xuexiA)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_xuexi)
        self.pushButton_5.setStyleSheet("background-color: transparent")
        self.pushButton_5.setText("")
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout_2.addWidget(self.pushButton_5)
        self.radioButton_xuexiB = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_xuexiB.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_xuexiB.setFont(font)
        self.radioButton_xuexiB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_xuexiB.setObjectName("radioButton_xuexiB")
        self.verticalLayout_2.addWidget(self.radioButton_xuexiB)
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_xuexi)
        self.pushButton_6.setStyleSheet("background-color: transparent")
        self.pushButton_6.setText("")
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout_2.addWidget(self.pushButton_6)
        self.radioButton_xuexiC = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_xuexiC.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_xuexiC.setFont(font)
        self.radioButton_xuexiC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_xuexiC.setObjectName("radioButton_xuexiC")
        self.verticalLayout_2.addWidget(self.radioButton_xuexiC)
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_xuexi)
        self.pushButton_7.setStyleSheet("background-color: transparent")
        self.pushButton_7.setText("")
        self.pushButton_7.setObjectName("pushButton_7")
        self.verticalLayout_2.addWidget(self.pushButton_7)
        self.radioButton_xuexiD = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_xuexiD.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_xuexiD.setFont(font)
        self.radioButton_xuexiD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_xuexiD.setObjectName("radioButton_xuexiD")
        self.verticalLayout_2.addWidget(self.radioButton_xuexiD)
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_xuexi)
        self.pushButton_8.setStyleSheet("background-color: transparent")
        self.pushButton_8.setText("")
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout_2.addWidget(self.pushButton_8)
        self.radioButton_xuexiE = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_xuexiE.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_xuexiE.setFont(font)
        self.radioButton_xuexiE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_xuexiE.setObjectName("radioButton_xuexiE")
        self.verticalLayout_2.addWidget(self.radioButton_xuexiE)
        self.pushButton_25 = QtWidgets.QPushButton(self.frame_xuexi)
        self.pushButton_25.setStyleSheet("background-color: transparent")
        self.pushButton_25.setText("")
        self.pushButton_25.setObjectName("pushButton_25")
        self.verticalLayout_2.addWidget(self.pushButton_25)
        self.radioButton_4 = QtWidgets.QRadioButton(self.frame_xuexi)
        self.radioButton_4.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.radioButton_4.setObjectName("radioButton_4")
        self.verticalLayout_2.addWidget(self.radioButton_4)
        self.verticalLayout_rengong.addWidget(self.frame_xuexi)
        self.verticalLayout_rengong.setStretch(0, 2)
        self.verticalLayout_rengong.setStretch(1, 5)
        self.verticalLayout_rengong.setStretch(2, 5)
        self.gridLayout_main_zizhu.addLayout(self.verticalLayout_rengong, 0, 0, 1, 1)
        self.verticalLayout_renwu = QtWidgets.QVBoxLayout()
        self.verticalLayout_renwu.setObjectName("verticalLayout_renwu")
        self.label_gener_renwu = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_gener_renwu.sizePolicy().hasHeightForWidth())
        self.label_gener_renwu.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener_renwu.setFont(font)
        self.label_gener_renwu.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_gener_renwu.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener_renwu.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_gener_renwu.setAlignment(QtCore.Qt.AlignCenter)
        self.label_gener_renwu.setObjectName("label_gener_renwu")
        self.verticalLayout_renwu.addWidget(self.label_gener_renwu)
        self.frame_shibie_zizhu = QtWidgets.QFrame(self.centralwidget)
        self.frame_shibie_zizhu.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                              "border-color: rgb(255, 97, 6);\n"
                                              "")
        self.frame_shibie_zizhu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_shibie_zizhu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_shibie_zizhu.setObjectName("frame_shibie_zizhu")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_shibie_zizhu)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_shibie_zizhu = QtWidgets.QLabel(self.frame_shibie_zizhu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_shibie_zizhu.sizePolicy().hasHeightForWidth())
        self.label_shibie_zizhu.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_shibie_zizhu.setFont(font)
        self.label_shibie_zizhu.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_shibie_zizhu.setAlignment(QtCore.Qt.AlignCenter)
        self.label_shibie_zizhu.setObjectName("label_shibie_zizhu")
        self.verticalLayout_5.addWidget(self.label_shibie_zizhu)
        self.radioButton_shibieA = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_shibieA.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_shibieA.setFont(font)
        self.radioButton_shibieA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.radioButton_shibieA.setObjectName("radioButton_shibieA")
        self.verticalLayout_5.addWidget(self.radioButton_shibieA)
        self.pushButton_9 = QtWidgets.QPushButton(self.frame_shibie_zizhu)
        self.pushButton_9.setStyleSheet("background-color: transparent")
        self.pushButton_9.setText("")
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_5.addWidget(self.pushButton_9)
        self.radioButton_shibieB = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_shibieB.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_shibieB.setFont(font)
        self.radioButton_shibieB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.radioButton_shibieB.setObjectName("radioButton_shibieB")
        self.verticalLayout_5.addWidget(self.radioButton_shibieB)
        self.pushButton_10 = QtWidgets.QPushButton(self.frame_shibie_zizhu)
        self.pushButton_10.setStyleSheet("background-color: transparent")
        self.pushButton_10.setText("")
        self.pushButton_10.setObjectName("pushButton_10")
        self.verticalLayout_5.addWidget(self.pushButton_10)
        self.radioButton_shibieC = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_shibieC.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_shibieC.setFont(font)
        self.radioButton_shibieC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.radioButton_shibieC.setObjectName("radioButton_shibieC")
        self.verticalLayout_5.addWidget(self.radioButton_shibieC)
        self.pushButton_11 = QtWidgets.QPushButton(self.frame_shibie_zizhu)
        self.pushButton_11.setStyleSheet("background-color: transparent")
        self.pushButton_11.setText("")
        self.pushButton_11.setObjectName("pushButton_11")
        self.verticalLayout_5.addWidget(self.pushButton_11)
        self.radioButton_shibieD = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_shibieD.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_shibieD.setFont(font)
        self.radioButton_shibieD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.radioButton_shibieD.setObjectName("radioButton_shibieD")
        self.verticalLayout_5.addWidget(self.radioButton_shibieD)
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_shibie_zizhu)
        self.pushButton_12.setStyleSheet("background-color: transparent")
        self.pushButton_12.setText("")
        self.pushButton_12.setObjectName("pushButton_12")
        self.verticalLayout_5.addWidget(self.pushButton_12)
        self.radioButton_shibieE = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_shibieE.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_shibieE.setFont(font)
        self.radioButton_shibieE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(28, 118, 132);")
        self.radioButton_shibieE.setObjectName("radioButton_shibieE")
        self.verticalLayout_5.addWidget(self.radioButton_shibieE)
        self.pushButton_23 = QtWidgets.QPushButton(self.frame_shibie_zizhu)
        self.pushButton_23.setStyleSheet("background-color: transparent")
        self.pushButton_23.setText("")
        self.pushButton_23.setObjectName("pushButton_23")
        self.verticalLayout_5.addWidget(self.pushButton_23)
        self.radioButton_2 = QtWidgets.QRadioButton(self.frame_shibie_zizhu)
        self.radioButton_2.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout_5.addWidget(self.radioButton_2)
        self.verticalLayout_renwu.addWidget(self.frame_shibie_zizhu)
        self.frame_juece_zizhu = QtWidgets.QFrame(self.centralwidget)
        self.frame_juece_zizhu.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                             "border-color: rgb(255, 97, 6);\n"
                                             "")
        self.frame_juece_zizhu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_juece_zizhu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_juece_zizhu.setObjectName("frame_juece_zizhu")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_juece_zizhu)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_juece_zizhu = QtWidgets.QLabel(self.frame_juece_zizhu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_juece_zizhu.sizePolicy().hasHeightForWidth())
        self.label_juece_zizhu.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_juece_zizhu.setFont(font)
        self.label_juece_zizhu.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_juece_zizhu.setAlignment(QtCore.Qt.AlignCenter)
        self.label_juece_zizhu.setObjectName("label_juece_zizhu")
        self.verticalLayout_6.addWidget(self.label_juece_zizhu)
        self.radioButton_jueceA = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_jueceA.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_jueceA.setFont(font)
        self.radioButton_jueceA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_jueceA.setObjectName("radioButton_jueceA")
        self.verticalLayout_6.addWidget(self.radioButton_jueceA)
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_juece_zizhu)
        self.pushButton_13.setStyleSheet("background-color: transparent")
        self.pushButton_13.setText("")
        self.pushButton_13.setObjectName("pushButton_13")
        self.verticalLayout_6.addWidget(self.pushButton_13)
        self.radioButton_jueceB = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_jueceB.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_jueceB.setFont(font)
        self.radioButton_jueceB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_jueceB.setObjectName("radioButton_jueceB")
        self.verticalLayout_6.addWidget(self.radioButton_jueceB)
        self.pushButton_14 = QtWidgets.QPushButton(self.frame_juece_zizhu)
        self.pushButton_14.setStyleSheet("background-color: transparent")
        self.pushButton_14.setText("")
        self.pushButton_14.setObjectName("pushButton_14")
        self.verticalLayout_6.addWidget(self.pushButton_14)
        self.radioButton_jueceC = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_jueceC.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_jueceC.setFont(font)
        self.radioButton_jueceC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_jueceC.setObjectName("radioButton_jueceC")
        self.verticalLayout_6.addWidget(self.radioButton_jueceC)
        self.pushButton_15 = QtWidgets.QPushButton(self.frame_juece_zizhu)
        self.pushButton_15.setStyleSheet("background-color: transparent")
        self.pushButton_15.setText("")
        self.pushButton_15.setObjectName("pushButton_15")
        self.verticalLayout_6.addWidget(self.pushButton_15)
        self.radioButton_jueceD = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_jueceD.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_jueceD.setFont(font)
        self.radioButton_jueceD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_jueceD.setObjectName("radioButton_jueceD")
        self.verticalLayout_6.addWidget(self.radioButton_jueceD)
        self.pushButton_16 = QtWidgets.QPushButton(self.frame_juece_zizhu)
        self.pushButton_16.setStyleSheet("background-color: transparent")
        self.pushButton_16.setText("")
        self.pushButton_16.setObjectName("pushButton_16")
        self.verticalLayout_6.addWidget(self.pushButton_16)
        self.radioButton_jueceE = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_jueceE.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_jueceE.setFont(font)
        self.radioButton_jueceE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "background-color: rgb(28, 118, 132);")
        self.radioButton_jueceE.setObjectName("radioButton_jueceE")
        self.verticalLayout_6.addWidget(self.radioButton_jueceE)
        self.pushButton_26 = QtWidgets.QPushButton(self.frame_juece_zizhu)
        self.pushButton_26.setStyleSheet("background-color: transparent")
        self.pushButton_26.setText("")
        self.pushButton_26.setObjectName("pushButton_26")
        self.verticalLayout_6.addWidget(self.pushButton_26)
        self.radioButton_5 = QtWidgets.QRadioButton(self.frame_juece_zizhu)
        self.radioButton_5.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_5.setFont(font)
        self.radioButton_5.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.radioButton_5.setObjectName("radioButton_5")
        self.verticalLayout_6.addWidget(self.radioButton_5)
        self.verticalLayout_renwu.addWidget(self.frame_juece_zizhu)
        self.verticalLayout_renwu.setStretch(0, 2)
        self.verticalLayout_renwu.setStretch(1, 5)
        self.verticalLayout_renwu.setStretch(2, 5)
        self.gridLayout_main_zizhu.addLayout(self.verticalLayout_renwu, 0, 1, 1, 1)
        self.verticalLayout_huanjing = QtWidgets.QVBoxLayout()
        self.verticalLayout_huanjing.setObjectName("verticalLayout_huanjing")
        self.label_gener_huanjing = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_gener_huanjing.sizePolicy().hasHeightForWidth())
        self.label_gener_huanjing.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener_huanjing.setFont(font)
        self.label_gener_huanjing.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_gener_huanjing.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener_huanjing.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_gener_huanjing.setAlignment(QtCore.Qt.AlignCenter)
        self.label_gener_huanjing.setObjectName("label_gener_huanjing")
        self.verticalLayout_huanjing.addWidget(self.label_gener_huanjing)
        self.frame_huanjing = QtWidgets.QFrame(self.centralwidget)
        self.frame_huanjing.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                          "border-color: rgb(255, 97, 6);\n"
                                          "")
        self.frame_huanjing.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_huanjing.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_huanjing.setObjectName("frame_huanjing")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_huanjing)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_huanjing = QtWidgets.QLabel(self.frame_huanjing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_huanjing.sizePolicy().hasHeightForWidth())
        self.label_huanjing.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_huanjing.setFont(font)
        self.label_huanjing.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_huanjing.setAlignment(QtCore.Qt.AlignCenter)
        self.label_huanjing.setObjectName("label_huanjing")
        self.verticalLayout_8.addWidget(self.label_huanjing)
        self.radioButton_huanjingA = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_huanjingA.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_huanjingA.setFont(font)
        self.radioButton_huanjingA.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.radioButton_huanjingA.setObjectName("radioButton_huanjingA")
        self.verticalLayout_8.addWidget(self.radioButton_huanjingA)
        self.pushButton_17 = QtWidgets.QPushButton(self.frame_huanjing)
        self.pushButton_17.setStyleSheet("background-color: transparent")
        self.pushButton_17.setText("")
        self.pushButton_17.setObjectName("pushButton_17")
        self.verticalLayout_8.addWidget(self.pushButton_17)
        self.radioButton_huanjingB = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_huanjingB.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_huanjingB.setFont(font)
        self.radioButton_huanjingB.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.radioButton_huanjingB.setObjectName("radioButton_huanjingB")
        self.verticalLayout_8.addWidget(self.radioButton_huanjingB)
        self.pushButton_18 = QtWidgets.QPushButton(self.frame_huanjing)
        self.pushButton_18.setStyleSheet("background-color: transparent")
        self.pushButton_18.setText("")
        self.pushButton_18.setObjectName("pushButton_18")
        self.verticalLayout_8.addWidget(self.pushButton_18)
        self.radioButton_huanjingC = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_huanjingC.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_huanjingC.setFont(font)
        self.radioButton_huanjingC.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.radioButton_huanjingC.setObjectName("radioButton_huanjingC")
        self.verticalLayout_8.addWidget(self.radioButton_huanjingC)
        self.pushButton_19 = QtWidgets.QPushButton(self.frame_huanjing)
        self.pushButton_19.setStyleSheet("background-color: transparent")
        self.pushButton_19.setText("")
        self.pushButton_19.setObjectName("pushButton_19")
        self.verticalLayout_8.addWidget(self.pushButton_19)
        self.radioButton_huanjingD = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_huanjingD.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_huanjingD.setFont(font)
        self.radioButton_huanjingD.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.radioButton_huanjingD.setObjectName("radioButton_huanjingD")
        self.verticalLayout_8.addWidget(self.radioButton_huanjingD)
        self.pushButton_20 = QtWidgets.QPushButton(self.frame_huanjing)
        self.pushButton_20.setStyleSheet("background-color: transparent")
        self.pushButton_20.setText("")
        self.pushButton_20.setObjectName("pushButton_20")
        self.verticalLayout_8.addWidget(self.pushButton_20)
        self.radioButton_huanjingE = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_huanjingE.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_huanjingE.setFont(font)
        self.radioButton_huanjingE.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(28, 118, 132);")
        self.radioButton_huanjingE.setObjectName("radioButton_huanjingE")
        self.verticalLayout_8.addWidget(self.radioButton_huanjingE)
        self.pushButton_24 = QtWidgets.QPushButton(self.frame_huanjing)
        self.pushButton_24.setStyleSheet("background-color: transparent")
        self.pushButton_24.setText("")
        self.pushButton_24.setObjectName("pushButton_24")
        self.verticalLayout_8.addWidget(self.pushButton_24)
        self.radioButton_3 = QtWidgets.QRadioButton(self.frame_huanjing)
        self.radioButton_3.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.radioButton_3.setObjectName("radioButton_3")
        self.verticalLayout_8.addWidget(self.radioButton_3)
        self.verticalLayout_huanjing.addWidget(self.frame_huanjing)
        self.label_gener_result_zizhu = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_gener_result_zizhu.sizePolicy().hasHeightForWidth())
        self.label_gener_result_zizhu.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_gener_result_zizhu.setFont(font)
        self.label_gener_result_zizhu.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_gener_result_zizhu.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_gener_result_zizhu.setLocale(QtCore.QLocale(QtCore.QLocale.Chinese, QtCore.QLocale.China))
        self.label_gener_result_zizhu.setAlignment(QtCore.Qt.AlignCenter)
        self.label_gener_result_zizhu.setObjectName("label_gener_result_zizhu")
        self.verticalLayout_huanjing.addWidget(self.label_gener_result_zizhu)
        self.frame_result_zizhu = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.frame_result_zizhu.sizePolicy().hasHeightForWidth())
        self.frame_result_zizhu.setSizePolicy(sizePolicy)
        self.frame_result_zizhu.setStyleSheet("background-color: rgb(20, 52, 83);\n"
                                              "border-color: rgb(255, 97, 6);\n"
                                              "")
        self.frame_result_zizhu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_result_zizhu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_result_zizhu.setObjectName("frame_result_zizhu")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_result_zizhu)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.textBrowser_result_zizhu = QtWidgets.QTextBrowser(self.frame_result_zizhu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.textBrowser_result_zizhu.sizePolicy().hasHeightForWidth())
        self.textBrowser_result_zizhu.setSizePolicy(sizePolicy)
        self.textBrowser_result_zizhu.setMinimumSize(QtCore.QSize(0, 270))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.textBrowser_result_zizhu.setFont(font)
        self.textBrowser_result_zizhu.setStyleSheet("color: rgb(255, 255, 255);")
        self.textBrowser_result_zizhu.setObjectName("textBrowser_result_zizhu")
        self.verticalLayout_9.addWidget(self.textBrowser_result_zizhu)
        self.pushButton_21 = QtWidgets.QPushButton(self.frame_result_zizhu)
        self.pushButton_21.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_21.setFont(font)
        self.pushButton_21.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.pushButton_21.setObjectName("pushButton_21")
        self.verticalLayout_9.addWidget(self.pushButton_21)
        self.pushButton_27 = QtWidgets.QPushButton(self.frame_result_zizhu)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_27.setFont(font)
        self.pushButton_27.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(28, 118, 132);")
        self.pushButton_27.setObjectName("pushButton_27")
        self.verticalLayout_9.addWidget(self.pushButton_27)
        self.verticalLayout_huanjing.addWidget(self.frame_result_zizhu)
        self.verticalLayout_huanjing.setStretch(0, 2)
        self.verticalLayout_huanjing.setStretch(1, 5)
        self.verticalLayout_huanjing.setStretch(2, 1)
        self.verticalLayout_huanjing.setStretch(3, 4)
        self.gridLayout_main_zizhu.addLayout(self.verticalLayout_huanjing, 0, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_6.setObjectName("label_6")
        self.gridLayout_main_zizhu.addWidget(self.label_6, 1, 0, 1, 3)
        self.gridLayout_main_zizhu.setColumnStretch(0, 1)
        self.gridLayout_main_zizhu.setColumnStretch(1, 1)
        self.gridLayout_main_zizhu.setColumnStretch(2, 1)
        self.verticalLayout_all.addLayout(self.gridLayout_main_zizhu)


        self.frame_gener.hide()
        self.label_gener.hide()
        self.frame_robust.hide()
        self.label_robust.hide()
        self.frame_data.hide()
        self.label_data.hide()
        self.frame_white.hide()
        self.label_white.hide()

        self.frame_gener_j.hide()
        self.label_gener_j.hide()
        self.frame_generdata_j.hide()
        self.frame_robustdata_j.hide()
        self.frame_show_j.hide()
        self.label_generdata_j.hide()
        self.label_robustdata_j.hide()
        self.label_data_j.hide()
        self.frame_robust_j.hide()
        self.label_robust_j.hide()

        self.frame_gener_j2.hide()
        self.label_gener_j2.hide()
        self.frame_robustdata_j2.hide()
        self.frame_show_j2.hide()
        self.label_robustdata_j2.hide()
        self.label_data_j2.hide()
        self.frame_robust_j2.hide()
        self.label_robust_j2.hide()

        self.frame_gengxin.hide()
        self.frame_xuexi.hide()
        self.label_rengong.hide()
        self.frame_juece_zizhu.hide()
        self.frame_shibie_zizhu.hide()
        self.label_gener_renwu.hide()
        self.frame_huanjing.hide()
        self.frame_result_zizhu.hide()
        self.label_gener_huanjing.hide()
        self.label_gener_result_zizhu.hide()
        self.label_6.hide()

        # self.frame_gener.hide()
        # self.label_gener.hide()
        # self.frame_robust.hide()
        # self.label_robust.hide()
        # self.frame_data.hide()
        # self.frame_white.hide()
        # self.label_data.hide()
        # self.label_white.hide()

        # 目标分类/决策/自主 选择
        self.frame_choice = QtWidgets.QFrame(self.centralwidget)
        self.frame_choice.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_choice.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_choice.setObjectName("frame_choice")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_choice)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_choice = QtWidgets.QHBoxLayout()
        self.horizontalLayout_choice.setSpacing(0)
        self.horizontalLayout_choice.setObjectName("horizontalLayout_choice")
        self.pushButton_data = QtWidgets.QPushButton(self.frame_choice)
        self.pushButton_data.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255));\n"
            "color: rgb(255, 255, 255);\n"
            "")
        # self.pushButton_data.setStyleSheet("color: rgb(255, 255, 255);")
        # self.pushButton_data.setStyleSheet(
        #     "QPushButton{color: rgb(255, 255, 255);background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255))"
        #     "QPushButton:hover{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}"
        #     "QPushButton:pressed{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}""QPushButton:checked{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}")

        self.pushButton_data.setCheckable(True)
        self.pushButton_data.setAutoExclusive(True)
        self.pushButton_data.setObjectName("pushButton_data")
        self.horizontalLayout_choice.addWidget(self.pushButton_data)
        self.pushButton_recognation = QtWidgets.QPushButton(self.frame_choice)
        self.pushButton_recognation.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255));\n"
            "color: rgb(255, 255, 255);\n"
            "")
        # self.pushButton_recognation.setStyleSheet("color: rgb(255, 255, 255);")
        # self.pushButton_recognation.setStyleSheet(
        #     "QPushButton{color: rgb(255, 255, 255);background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255))"
        #     "QPushButton:hover{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}"
        #     "QPushButton:pressed{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}""QPushButton:checked{color: rgb(255, 255, 255);background-color:rgb(21, 57, 85)}")

        self.pushButton_recognation.setCheckable(True)
        self.pushButton_recognation.setAutoExclusive(True)
        self.pushButton_recognation.setObjectName("pushButton_recognation")
        self.horizontalLayout_choice.addWidget(self.pushButton_recognation)
        self.pushButton_decision = QtWidgets.QPushButton(self.frame_choice)
        self.pushButton_decision.setStyleSheet( "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255));\n"
            "color: rgb(255, 255, 255);\n"
            "")
        self.pushButton_decision.setStyleSheet("color: rgb(255, 255, 255);")
        self.pushButton_decision.setCheckable(True)
        self.pushButton_decision.setAutoExclusive(True)
        self.pushButton_decision.setObjectName("pushButton_decision")
        self.horizontalLayout_choice.addWidget(self.pushButton_decision)

        self.pushButton_decision2 = QtWidgets.QPushButton(self.frame_choice)
        self.pushButton_decision2.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255));\n"
            "color: rgb(255, 255, 255);\n"
            "")
        self.pushButton_decision2.setStyleSheet("color: rgb(255, 255, 255);")
        self.pushButton_decision2.setCheckable(True)
        self.pushButton_decision2.setAutoExclusive(True)
        self.pushButton_decision2.setObjectName("pushButton_decision2")
        self.horizontalLayout_choice.addWidget(self.pushButton_decision2)

        self.pushButton_zizhu = QtWidgets.QPushButton(self.frame_choice)
        self.pushButton_zizhu.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(16, 37, 76, 255), stop:1 rgba(23, 64, 88, 255));\n"
            "color: rgb(255, 255, 255);\n"
            "")
        self.pushButton_zizhu.setStyleSheet("color: rgb(255, 255, 255);")
        self.pushButton_zizhu.setCheckable(True)
        self.pushButton_zizhu.setAutoExclusive(True)
        self.pushButton_zizhu.setObjectName("pushButton_zizhu")
        self.horizontalLayout_choice.addWidget(self.pushButton_zizhu)
        self.verticalLayout_10.addLayout(self.horizontalLayout_choice)
        self.verticalLayout_all.addWidget(self.frame_choice)

        self.verticalLayout_centralwidget.addLayout(self.verticalLayout_all)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 992, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        # self.label_title.setText(_translate("MainWindow", "机载智能计算系统可信性评估平台"))
        self.label_title.setText(_translate("MainWindow", "目标分类决策系统可信性评估平台"))
        self.label_gener.setText(_translate("MainWindow", "正常工作模式"))
        self.label_P.setText(_translate("MainWindow", "精确率"))
        self.label_J.setText(_translate("MainWindow", "<html><head/><body><p>杰卡德相</p><p>似距离</p></body></html>"))
        self.label_AUC.setText(_translate("MainWindow", "AUC面积"))
        self.label_R.setText(_translate("MainWindow", "召回率"))
        self.label_H.setText(_translate("MainWindow", "<html><head/><body><p>海明</p><p>距离</p></body></html>"))
        self.pushButton_C.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_ROC.setText(_translate("MainWindow", "放大图片"))
        self.label_ROC_2.setText(_translate("MainWindow", "ROC曲线"))
        self.label_F1.setText(_translate("MainWindow", "F1系数"))
        self.label_A.setText(_translate("MainWindow", "准确率"))
        self.label_K.setText(_translate("MainWindow", "<html><head/><body><p>kappa</p><p>系数</p></body></html>"))
        self.label_C.setText(_translate("MainWindow", "混淆矩阵"))
        self.pushButton_y_pred_A.setText(_translate("MainWindow", "分类标签"))
        self.pushButton_y_true_A.setText(_translate("MainWindow", "真实标签"))
        self.pushButton_run_A.setText(_translate("MainWindow", "运行"))
        self.label_guanjiancanshu_A.setText(_translate("MainWindow", "关键参数"))
        self.label_label_A.setText(_translate("MainWindow", "标签个数（图像类别）"))
        self.label_robust.setText(_translate("MainWindow", "干扰工作模式"))
        self.label_P_r.setText(_translate("MainWindow", "精确率"))
        self.label_R_r.setText(_translate("MainWindow", "召回率"))
        self.label_A_r.setText(_translate("MainWindow", "准确率"))
        self.label_threshold.setText(_translate("MainWindow", "可用阈值"))
        self.label_lapse.setText(_translate("MainWindow", "失效阈值"))
        self.label_guanjiancanshu_r.setText(_translate("MainWindow", "关键参数"))
        self.pushButton_input1_r.setText(_translate("MainWindow", "选择文件夹"))
        self.pushButton_run_r.setText(_translate("MainWindow", "运行"))
        self.label_data.setText(_translate("MainWindow", "测试用例生成"))
        self.pushButton_gauss.setText(_translate("MainWindow", "加高斯噪声"))
        self.pushButton_generdata.setText(_translate("MainWindow", "泛化性数据"))
        self.pushButton_noise.setText(_translate("MainWindow", "加随机噪声"))
        self.pushButton_zhedang.setText(_translate("MainWindow", "加随机遮挡"))
        self.pushButton_filedir_gener.setText(_translate("MainWindow", "选择数据集"))
        self.pushButton_tardir_gener.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_gener.setText(_translate("MainWindow", "运行"))
        self.label_guanjiancanshu_data_gener.setText(_translate("MainWindow", "关键参数"))
        self.label_num_gener.setText(_translate("MainWindow", "抽取比例"))

        self.pushButton_filedir_gener_N.setText(_translate("MainWindow", "选择数据集"))
        self.pushButton_tardir_gener_N.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_gener_N.setText(_translate("MainWindow", "运行"))
        self.label_guanjiancanshu_data_gener_N.setText(_translate("MainWindow", "关键参数"))
        self.label_num_gener_N.setText(_translate("MainWindow", "噪声强度"))

        self.pushButton_filedir_gener_Z.setText(_translate("MainWindow", "选择数据集"))
        self.pushButton_tardir_gener_Z.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_gener_Z.setText(_translate("MainWindow", "运行"))
        self.label_guanjiancanshu_data_gener_Z.setText(_translate("MainWindow", "关键参数"))
        self.label_num_gener_Z.setText(_translate("MainWindow", "面积"))

        self.pushButton_filedir_gener_G.setText(_translate("MainWindow", "选择数据集"))
        self.pushButton_tardir_gener_G.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_gener_G.setText(_translate("MainWindow", "运行"))
        self.label_guanjiancanshu_data_gener_G.setText(_translate("MainWindow", "关键参数"))
        self.label_num_gener_G.setText(_translate("MainWindow", "方差"))

        self.label_white.setText(_translate("MainWindow", "目标分类特异性评价指标"))
        self.pushButton_ASS.setText(_translate("MainWindow", "ASS"))
        self.pushButton_ACAC.setText(_translate("MainWindow", "ACAC"))
        self.pushButton_BD.setText(_translate("MainWindow", "BD"))
        self.pushButton_ACTC.setText(_translate("MainWindow", "ACTC"))
        self.pushButton_SNAC.setText(_translate("MainWindow", "SNAC"))
        self.pushButton_ALDp.setText(_translate("MainWindow", "ALDp"))
        self.pushButton_KMNC.setText(_translate("MainWindow", "KMNC"))
        self.pushButton_ENI.setText(_translate("MainWindow", "ENI"))
        self.pushButton_NBC.setText(_translate("MainWindow", "NBC"))
        self.pushButton_NTE.setText(_translate("MainWindow", "NTE"))
        self.pushButton_NC.setText(_translate("MainWindow", "NC"))
        self.pushButton_PSD.setText(_translate("MainWindow", "PSD"))
        self.pushButton_TKNC.setText(_translate("MainWindow", "TKNC"))
        self.pushButton_RGB.setText(_translate("MainWindow", "RGB"))
        self.pushButton_TKNP.setText(_translate("MainWindow", "TKNP"))
        self.pushButton_RIC.setText(_translate("MainWindow", "RIC"))
        self.pushButton_filepath_white.setText(_translate("MainWindow", "选择文件夹"))
        self.pushButton_run_ACTC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_ACAC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_ASS.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_ALDp.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_BD.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_ENI.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_KMNC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_NBC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_NC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_NTE.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_PSD.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_SNAC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_TKNC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_TKNP.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_RIC.setText(_translate("MainWindow", "运行"))
        self.pushButton_run_RGB.setText(_translate("MainWindow", "运行"))

        self.label_gener_j.setText(_translate("MainWindow",
                                              "<html><head/><body><p>正</p><p>常</p><p>工</p><p>作</p><p>模</p><p>式</p></body></html>"))
        self.label_A_j.setText(_translate("MainWindow", "准确率"))
        self.label_P_j.setText(_translate("MainWindow", "精确率"))
        self.label_R_j.setText(_translate("MainWindow", "召回率"))
        self.pushButton_A.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_R.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_P.setText(_translate("MainWindow", "放大图片"))
        self.label_K_j.setText(_translate("MainWindow", "<html><head/><body><p>kappa</p><p>系数</p></body></html>"))
        self.label_H_j.setText(_translate("MainWindow", "<html><head/><body><p>海明</p><p>距离</p></body></html>"))
        self.label_J_j.setText(_translate("MainWindow", "<html><head/><body><p>杰卡德相</p><p>似距离</p></body></html>"))
        self.label_F1_j.setText(_translate("MainWindow", "F1系数"))
        self.label_ROC_2_j.setText(_translate("MainWindow", "ROC曲线"))
        self.pushButton_y_pred_A_j.setText(_translate("MainWindow", "测试决策"))
        self.pushButton_y_true_A_j.setText(_translate("MainWindow", "真实决策"))
        self.pushButton_run_A_j.setText(_translate("MainWindow", "运行"))
        self.label_data_j.setText(_translate("MainWindow", "测试用例生成"))
        self.label_generdata_j.setText(_translate("MainWindow", "泛化性测试用例生成"))
        self.label_robustdata_j.setText(_translate("MainWindow", "鲁棒性测试用例生成"))
        self.pushButton_sourcedir_g_j.setText(_translate("MainWindow", "选择测试用例"))
        self.pushButton__tardir_g_j.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_g_j.setText(_translate("MainWindow", "运行"))
        self.pushButton_source_r_j.setText(_translate("MainWindow", "选择测试用例"))
        self.pushButton_tardir_r_j.setText(_translate("MainWindow", "目标文件夹"))
        # self.pushButton_changedir_r_j.setText(_translate("MainWindow", "测试用例可变情况"))
        self.pushButton_run_r_j.setText(_translate("MainWindow", "运行"))
        self.label_data_guanjiancanshu_j.setText(_translate("MainWindow", "关键参数"))
        self.label_noise_j.setText(_translate("MainWindow", "噪声强度"))
        self.label_num_j.setText(_translate("MainWindow", "加噪声比例"))
        self.label_robust_j.setText(_translate("MainWindow",
                                               "<html><head/><body><p>干</p><p>扰</p><p>工</p><p>作</p><p>模</p><p>式</p></body></html>"))
        self.label_A_r_j.setText(_translate("MainWindow", "准确率"))
        self.label_P_r_j.setText(_translate("MainWindow", "精确率"))
        self.label_R_r_j.setText(_translate("MainWindow", "召回率"))
        self.pushButton_A_j.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_P_j.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_R_j.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_ROC_j.setText(_translate("MainWindow", "放大图片"))
        self.label_guanjiancanshu_r_j.setText(_translate("MainWindow", "关键参数"))
        self.label_threshold_j.setText(_translate("MainWindow", "可用阈值"))
        self.label_lapse_j.setText(_translate("MainWindow", "失效阈值"))
        self.pushButton_ypred_j.setText(_translate("MainWindow", "测试决策"))
        self.pushButton_input1_r_j.setText(_translate("MainWindow", "真实决策"))
        self.pushButton_run_r_j_2.setText(_translate("MainWindow", "运行"))

        # self.label_titlezzizhu.setText(_translate("MainWindow", "机载智能系统可信性评估平台"))
        self.label_rengong.setText(_translate("MainWindow", "人工干预程度"))
        self.label_gengxin.setText(_translate("MainWindow", "模型自主更新能力"))
        self.radioButton_gengxinA.setText(_translate("MainWindow", "A.模型自主更新"))
        self.radioButton_gengxinB.setText(_translate("MainWindow", "B.模型定期自主更新"))
        self.radioButton_gengxinC.setText(_translate("MainWindow", "C.模型远程手动更新"))
        self.radioButton_gengxinD.setText(_translate("MainWindow", "D.模型近程手动更新"))
        self.radioButton_gengxinE.setText(_translate("MainWindow", "E.模型现场手动更新"))
        self.radioButton.setText(_translate("MainWindow", "F.均不满足"))
        self.label_xuexi.setText(_translate("MainWindow", "模型自主学习能力"))
        self.radioButton_xuexiA.setText(_translate("MainWindow", "A.模型在线实时学习"))
        self.radioButton_xuexiB.setText(_translate("MainWindow", "B.模型在线定期学习"))
        self.radioButton_xuexiC.setText(_translate("MainWindow", "C.模型边缘侧远程控制学习"))
        self.radioButton_xuexiD.setText(_translate("MainWindow", "D.模型云端学习"))
        self.radioButton_xuexiE.setText(_translate("MainWindow", "E.模型离线现场学习"))
        self.radioButton_4.setText(_translate("MainWindow", "F.均不满足"))
        self.label_gener_renwu.setText(_translate("MainWindow", "任务复杂程度"))
        self.label_shibie_zizhu.setText(_translate("MainWindow", "模型识别能力"))
        self.radioButton_shibieA.setText(_translate("MainWindow", "A.模型目标识别类型大于100种，模型识别准确率大于95%"))
        self.radioButton_shibieB.setText(_translate("MainWindow", "B.模型目标识别类型51-100种，模型识别准确率大于90%"))
        self.radioButton_shibieC.setText(_translate("MainWindow", "C.模型目标识别类型21-50种，模型识别准确率大于85%"))
        self.radioButton_shibieD.setText(_translate("MainWindow", "D.模型目标识别类型11-20种，模型识别准确率大于80%"))
        self.radioButton_shibieE.setText(_translate("MainWindow", "E.模型目标识别类型0-10种，模型识别准确率大于80%"))
        self.radioButton_2.setText(_translate("MainWindow", "F.均不满足"))
        self.label_juece_zizhu.setText(_translate("MainWindow", "模型决策能力"))
        self.radioButton_jueceA.setText(_translate("MainWindow", "A.模型决策准确率大于95%"))
        self.radioButton_jueceB.setText(_translate("MainWindow", "B.模型决策准确率大于90%"))
        self.radioButton_jueceC.setText(_translate("MainWindow", "C.模型决策准确率大于85%"))
        self.radioButton_jueceD.setText(_translate("MainWindow", "D.模型决策准确率大于80%"))
        self.radioButton_jueceE.setText(_translate("MainWindow", "E.模型决策准确率大于75%"))
        self.radioButton_5.setText(_translate("MainWindow", "F.均不满足"))
        self.label_gener_huanjing.setText(_translate("MainWindow", "环境复杂程度"))
        self.label_huanjing.setText(_translate("MainWindow", "动态场景适应能力"))
        self.radioButton_huanjingA.setText(_translate("MainWindow", "A.五级（环境复杂度最高）"))
        self.radioButton_huanjingB.setText(_translate("MainWindow", "B.四级（环境复杂度高）"))
        self.radioButton_huanjingC.setText(_translate("MainWindow", "C.三级（环境复杂度中等）"))
        self.radioButton_huanjingD.setText(_translate("MainWindow", "D.二级（环境复杂度低）"))
        self.radioButton_huanjingE.setText(_translate("MainWindow", "E.一级（环境复杂度最低）"))
        self.radioButton_3.setText(_translate("MainWindow", "F.均不满足"))
        self.label_gener_result_zizhu.setText(_translate("MainWindow", "模型评价结果"))
        self.pushButton_21.setText(_translate("MainWindow", "开始计算"))
        self.pushButton_27.setText(_translate("MainWindow", "清零"))
        self.label_6.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-weight:600;\">注：</span></p><p><span style=\" font-size:10pt; font-weight:600;\">评价等级打分：</span><span style=\" font-size:10pt;\">A代表5分，B代表4分，C代表3分，D代表2分，E代表1分。</span></p><p><span style=\" font-size:10pt; font-weight:600;\">模型最终评价结果：</span><span style=\" font-size:10pt;\">0级：0-5分；1级：6-9分；2级：10-11分；3级：12-13分；4级：14-15分；5级：16-17分；6级：18-19分；7级：20-21分；8级：22-23分；9级：24-25分。</span></p></body></html>"))

        self.pushButton_data.setText(_translate("MainWindow", "数据评估"))
        self.pushButton_recognation.setText(_translate("MainWindow", "目标分类"))
        self.pushButton_decision.setText(_translate("MainWindow", "基于规则决策"))
        self.pushButton_decision2.setText(_translate("MainWindow", "基于神经网络决策"))
        self.pushButton_zizhu.setText(_translate("MainWindow", "自主能力等级"))
        self.label_jielun.setText(_translate("MainWindow", "结论"))
        self.label_jielun_r.setText(_translate("MainWindow", "结论"))
        self.label_jielun_j.setText(_translate("MainWindow", "结论"))
        self.label_jielun_r_j.setText(_translate("MainWindow", "结论"))

        self.label_gener_j2.setText(_translate("MainWindow",
                                               "<html><head/><body><p>正</p><p>常</p><p>工</p><p>作</p><p>模</p><p>式</p></body></html>"))
        self.label_XFCL.setText(_translate("MainWindow", "<html><head/><body><p>方差率</p></body></html>"))
        self.pushButton_PJJDWC.setText(_translate("MainWindow", "查看图片"))
        self.pushButton_FCL.setText(_translate("MainWindow", "查看图片"))
        self.label_PCL.setText(_translate("MainWindow", "决定系数"))
        self.pushButton_PCL.setText(_translate("MainWindow", "查看图片"))
        self.pushButton_JFGWC.setText(_translate("MainWindow", "查看图片"))
        self.label_PJJDWC.setText(_translate("MainWindow", "平均绝对误差"))
        self.label_JFGWC.setText(_translate("MainWindow", "均方误差"))
        self.label_JSFCFS.setText(_translate("MainWindow", "解释方差分数"))
        self.label_FCL.setText(_translate("MainWindow", "<html><head/><body><p>中位数绝对误差</p></body></html>"))
        self.pushButton_XFCL.setText(_translate("MainWindow", "查看图片"))
        self.pushButton_JSFCFS.setText(_translate("MainWindow", "查看图片"))
        self.label_PJJJWCBFB.setText(
            _translate("MainWindow", "<html><head/><body><p>平均绝对百</p><p>分比误差</p></body></html>"))
        self.label_MSLE.setText(_translate("MainWindow", "均方根误差"))
        self.pushButton_XEBDXS.setText(_translate("MainWindow", "查看图片"))
        self.label_XEBDXS.setText(_translate("MainWindow", "希尔不等系数"))
        self.label_jielun_j2.setText(_translate("MainWindow", "结论"))
        self.pushButton_PJJDBFBWC.setText(_translate("MainWindow", "查看图片"))
        self.pushButton_MSLE.setText(_translate("MainWindow", "查看图片"))
        self.pushButton_y_pred_j2.setText(_translate("MainWindow", "真实决策"))
        self.pushButton_y_pred1_j2.setText(_translate("MainWindow", "测试决策1"))
        self.pushButton_y_true_j2.setText(_translate("MainWindow", "测试决策2"))
        self.pushButton_run_j2.setText(_translate("MainWindow", "运行"))
        self.label_data_j2.setText(_translate("MainWindow", "测试用例生成"))
        self.label_robustdata_j2.setText(_translate("MainWindow", "鲁棒性数据生成"))
        self.pushButton_source_r_j2.setText(_translate("MainWindow", "选择文件夹"))
        self.pushButton_tardir_r_j2.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_run_r_j2.setText(_translate("MainWindow", "运行"))
        self.label_data_guanjiancanshu_j2.setText(_translate("MainWindow", "关键参数"))
        self.label_noise_j2.setText(_translate("MainWindow", "噪声强度"))
        self.label_robust_j2.setText(_translate("MainWindow",
                                                "<html><head/><body><p>干</p><p>扰</p><p>工</p><p>作</p><p>模</p><p>式</p></body></html>"))
        self.label_jielun_r_j2.setText(_translate("MainWindow", "结论"))
        self.label_jsfcfs.setText(_translate("MainWindow", "中位数绝对误差"))
        self.pushButton_jsfcfs.setText(_translate("MainWindow", "放大图片"))
        self.label_guanjiancanshu_r_j2.setText(_translate("MainWindow", "关键参数"))
        self.label_threshold_j2.setText(_translate("MainWindow", "可用阈值"))
        self.label_lapse_j2.setText(_translate("MainWindow", "失效阈值"))
        self.pushButton_ypred_j2.setText(_translate("MainWindow", "真实决策"))
        self.pushButton_input1_r_j2.setText(_translate("MainWindow", "测试决策1"))
        self.pushButton_input2_r_j2.setText(_translate("MainWindow", "测试决策2"))
        self.pushButton_run_r_j2_2.setText(_translate("MainWindow", "运行"))
        self.label_jfgwc.setText(_translate("MainWindow", "均方根误差"))
        self.pushButton_jfgwc.setText(_translate("MainWindow", "放大图片"))
        self.label_pjjdwc.setText(_translate("MainWindow", "平均绝对误差"))
        self.pushButton_pjjdwc.setText(_translate("MainWindow", "放大图片"))

        self.label_dataeva.setText(_translate("MainWindow", "数据质量评价"))
        self.label_SMD2.setText(_translate("MainWindow", "SMD2"))
        self.label_SMD.setText(_translate("MainWindow", "SMD"))
        self.label_ENT.setText(_translate("MainWindow", "<html><head/><body><p>Entropy</p></body></html>"))
        self.label_VOL.setText(_translate("MainWindow", "<html><head/><body><p>Vollath</p></body></html>"))
        self.label_VAR.setText(_translate("MainWindow", "Variance"))
        self.label_BRE.setText(_translate("MainWindow", "Brenner"))
        self.pushButton_run_dataeva.setText(_translate("MainWindow", "运行"))
        self.pushButton_dataeva.setText(_translate("MainWindow", "选择图像"))
        self.label_ENE.setText(_translate("MainWindow", "<html><head/><body><p>Energy</p></body></html>"))
        self.label_LAP.setText(_translate("MainWindow", "Laplacian"))
        self.label_filter.setText(_translate("MainWindow", "数据集筛选"))
        self.label_ENE_filter.setText(_translate("MainWindow", "Energy"))
        self.label_LAP_filter.setText(_translate("MainWindow", "Laplacian"))
        self.pushButton_TS_filter.setText(_translate("MainWindow", "目标文件夹"))
        self.label_SMD_filter.setText(_translate("MainWindow", "SMD"))
        self.label_VAR_filter.setText(_translate("MainWindow", "Variance"))
        self.label_ENT_filter.setText(_translate("MainWindow", "Entropy"))
        self.pushButton_SD_filter.setText(_translate("MainWindow", "选择数据集"))
        self.label_VOL_filter.setText(_translate("MainWindow", "Vollath"))
        self.label_SMD2_filter.setText(_translate("MainWindow", "SMD2"))
        self.label_BRE_filter.setText(_translate("MainWindow", "Brenner"))
        self.pushButton_run_filter.setText(_translate("MainWindow", "运行"))
        self.label_datasetadv.setText(_translate("MainWindow", "数据集优化"))
        self.pushButton_FSBH.setText(_translate("MainWindow", "放大图片"))
        self.label_dataubl.setText(_translate("MainWindow", "样本质量不平衡优化"))
        self.pushButton_CJ.setText(_translate("MainWindow", "放大图片"))
        self.label_YSKJ.setText(_translate("MainWindow", "改变颜色空间"))
        self.label_datasetubl.setText(_translate("MainWindow", "数据集不平衡优化"))
        self.pushButton_GBYSKJ.setText(_translate("MainWindow", "放大图片"))
        self.label_FSBH.setText(_translate("MainWindow", "仿射变换"))
        self.label_CJ.setText(_translate("MainWindow", "裁剪"))
        self.label_SIG_S_2.setText(_translate("MainWindow", "Sigmoid对比度"))
        self.pushButton_SIG.setText(_translate("MainWindow", "放大图片"))
        self.label_FZ.setText(_translate("MainWindow", "翻转"))
        self.pushButton_FZ.setText(_translate("MainWindow", "放大图片"))
        self.label_HDT.setText(_translate("MainWindow", "灰度图"))
        self.pushButton_HDT.setText(_translate("MainWindow", "放大图片"))
        self.label_GAMMA.setText(_translate("MainWindow", "Gamma对比度"))
        self.pushButton_GAMMA.setText(_translate("MainWindow", "放大图片"))
        self.label_XXDBD.setText(_translate("MainWindow", "线性对比度"))
        self.pushButton_XXDBD.setText(_translate("MainWindow", "放大图片"))
        self.label_GSZY.setText(_translate("MainWindow", "高斯噪音"))
        self.pushButton_GSZY.setText(_translate("MainWindow", "放大图片"))
        self.label_YDMH.setText(_translate("MainWindow", "运动模糊"))
        self.pushButton_YDMH.setText(_translate("MainWindow", "放大图片"))
        self.label_GSMH.setText(_translate("MainWindow", "高斯模糊"))
        self.label_SBMH.setText(_translate("MainWindow", "双边模糊"))
        self.pushButton_GSMH.setText(_translate("MainWindow", "放大图片"))
        self.label_PJMH.setText(_translate("MainWindow", "平均模糊"))
        self.pushButton_PJMH.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_SBMH.setText(_translate("MainWindow", "放大图片"))
        self.label_SCKJ.setText(_translate("MainWindow", "色彩空间"))
        self.pushButton_SCKJ.setText(_translate("MainWindow", "放大图片"))
        self.label_SJYS.setText(_translate("MainWindow", "<html><head/><body><p>随机色调和饱和度</p></body></html>"))
        self.pushButton_SJSDBHD.setText(_translate("MainWindow", "放大图片"))
        self.label_ZZMH.setText(_translate("MainWindow", "中值模糊"))
        self.pushButton_ZZMH.setText(_translate("MainWindow", "放大图片"))
        self.pushButton_TD_dataset.setText(_translate("MainWindow", "目标文件夹"))
        self.pushButton_SD_dataset.setText(_translate("MainWindow", "选择图像"))
        self.pushButton_YX_dataset.setText(_translate("MainWindow", "运行"))


class Ui_MainWindow1(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.timer = QtCore.QTimer(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(924, 691)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_DC = QtWidgets.QLabel(self.centralwidget)
        self.label_DC.setText("")
        self.label_DC.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DC.setObjectName("label_DC")
        self.horizontalLayout.addWidget(self.label_DC)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 924, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def display_DC(self):
        global image_path_C
        self.pil_image1 = QImage(image_path_C)
        self.fcku_DC(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DC(self.pil_image1))
        self.timer.start(10)

    def fcku_DC(self, fckimage):
        pil_image = self.m_resize_DC(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DC(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DC(self):
        global image_path_C
        image_path_C='Confusionmatrix.jpg'
        self.display_DC()

    def display_DR(self):
        global image_path_R
        self.pil_image1 = QImage(image_path_R)
        self.fcku_DR(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DR(self.pil_image1))
        self.timer.start(10)

    def fcku_DR(self, fckimage):
        pil_image = self.m_resize_DR(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DR(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DR(self):
        global image_path_R
        image_path_R='ROC.jpg'
        self.display_DR()

    def display_DA(self):
        global image_path_A
        self.pil_image1 = QImage(image_path_A)
        self.fcku_DA(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DA(self.pil_image1))
        self.timer.start(10)

    def fcku_DA(self, fckimage):
        pil_image = self.m_resize_DA(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DA(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DA(self):
        global image_path_A
        image_path_A='Accuracy.jpg'
        self.display_DA()

    def display_DP(self):
        global image_path_P
        self.pil_image1 = QImage(image_path_P)
        self.fcku_DP(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DP(self.pil_image1))
        self.timer.start(10)

    def fcku_DP(self, fckimage):
        pil_image = self.m_resize_DP(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DP(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DP(self):
        global image_path_P
        image_path_P='Precision.jpg'
        self.display_DP()

    def display_DRE(self):
        global image_path_RE
        self.pil_image1 = QImage(image_path_RE)
        self.fcku_DRE(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DRE(self.pil_image1))
        self.timer.start(10)

    def fcku_DRE(self, fckimage):
        pil_image = self.m_resize_DRE(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DRE(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DRE(self):
        global image_path_RE
        image_path_RE='Recall.jpg'
        self.display_DRE()

    def display_DROCJ(self):
        global image_path_ROCJ
        self.pil_image1 = QImage(image_path_ROCJ)
        self.fcku_DROCJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DROCJ(self.pil_image1))
        self.timer.start(10)

    def fcku_DROCJ(self, fckimage):
        pil_image = self.m_resize_DROCJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DROCJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DROCJ(self):
        global image_path_ROCJ
        image_path_ROCJ='ROC_j.jpg'
        self.display_DROCJ()

    def display_DAJ(self):
        global image_path_AJ
        self.pil_image1 = QImage(image_path_AJ)
        self.fcku_DAJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DAJ(self.pil_image1))
        self.timer.start(10)

    def fcku_DAJ(self, fckimage):
        pil_image = self.m_resize_DAJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DAJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DAJ(self):
        global image_path_AJ
        image_path_AJ='Accuracy_j.jpg'
        self.display_DAJ()

    def display_DPJ(self):
        global image_path_PJ
        self.pil_image1 = QImage(image_path_PJ)
        self.fcku_DPJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DPJ(self.pil_image1))
        self.timer.start(10)

    def fcku_DPJ(self, fckimage):
        pil_image = self.m_resize_DPJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DPJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DPJ(self):
        global image_path_PJ
        image_path_PJ='Precision_j.jpg'
        self.display_DPJ()

    def display_DRJ(self):
        global image_path_RJ
        self.pil_image1 = QImage(image_path_RJ)
        self.fcku_DRJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_DRJ(self.pil_image1))
        self.timer.start(10)

    def fcku_DRJ(self, fckimage):
        pil_image = self.m_resize_DRJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_DRJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def DRJ(self):
        global image_path_RJ
        image_path_RJ='Recall_j.jpg'
        self.display_DRJ()

    def display_J2G1(self):
        global image_path_j1
        self.pil_image_j1 = QImage(image_path_j1)
        self.fcku1_J2G(self.pil_image_j1)
        self.timer.timeout.connect(lambda: self.fcku1_J2G(self.pil_image_j1))
        self.timer.start(10)

    def display_J2G2(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j2
        # self.pil_image_j1 = QImage(image_path_j1)
        self.pil_image_j2 = QImage(image_path_j2)
        # self.pil_image_j3 = QImage(image_path_j3)
        # self.pil_image_j4 = QImage(image_path_j4)
        # self.pil_image_j5 = QImage(image_path_j5)
        # self.pil_image_j6 = QImage(image_path_j6)
        # self.pil_image_j7 = QImage(image_path_j7)
        # self.pil_image_j8 = QImage(image_path_j8)
        # self.pil_image_j9 = QImage(image_path_j9)
        # self.fcku1_J2G(self.pil_image_j1)
        self.fcku2_J2G(self.pil_image_j2)
        # self.fcku3_J2G(self.pil_image_j3)
        # self.fcku4_J2G(self.pil_image_j4)
        # self.fcku5_J2G(self.pil_image_j5)
        # self.fcku6_J2G(self.pil_image_j6)
        # self.fcku7_J2G(self.pil_image_j7)
        # self.fcku8_J2G(self.pil_image_j8)
        # self.fcku9_J2G(self.pil_image_j9)
        # self.timer.timeout.connect(lambda: self.fcku1_J2G(self.pil_image_j1))
        self.timer.timeout.connect(lambda: self.fcku2_J2G(self.pil_image_j2))
        # self.timer.timeout.connect(lambda: self.fcku3_J2G(self.pil_image_j3))
        # self.timer.timeout.connect(lambda: self.fcku4_J2G(self.pil_image_j4))
        # self.timer.timeout.connect(lambda: self.fcku5_J2G(self.pil_image_j5))
        # self.timer.timeout.connect(lambda: self.fcku6_J2G(self.pil_image_j6))
        # self.timer.timeout.connect(lambda: self.fcku7_J2G(self.pil_image_j7))
        # self.timer.timeout.connect(lambda: self.fcku8_J2G(self.pil_image_j8))
        # self.timer.timeout.connect(lambda: self.fcku9_J2G(self.pil_image_j9))
        self.timer.start(10)

    def display_J2G3(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j3
        self.pil_image_j3 = QImage(image_path_j3)
        self.fcku3_J2G(self.pil_image_j3)
        self.timer.timeout.connect(lambda: self.fcku3_J2G(self.pil_image_j3))
        self.timer.start(10)

    def display_J2G4(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j4
        self.pil_image_j4 = QImage(image_path_j4)
        self.fcku4_J2G(self.pil_image_j4)
        self.timer.timeout.connect(lambda: self.fcku4_J2G(self.pil_image_j4))
        self.timer.start(10)

    def display_J2G5(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j5
        self.pil_image_j5 = QImage(image_path_j5)
        self.fcku5_J2G(self.pil_image_j5)
        self.timer.timeout.connect(lambda: self.fcku5_J2G(self.pil_image_j5))
        self.timer.start(10)

    def display_J2G6(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j6
        self.pil_image_j6 = QImage(image_path_j6)
        self.fcku6_J2G(self.pil_image_j6)
        self.timer.timeout.connect(lambda: self.fcku6_J2G(self.pil_image_j6))
        self.timer.start(10)

    def display_J2G7(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j7
        self.pil_image_j7 = QImage(image_path_j7)
        self.fcku7_J2G(self.pil_image_j7)
        self.timer.timeout.connect(lambda: self.fcku7_J2G(self.pil_image_j7))
        self.timer.start(10)

    def display_J2G8(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j8
        self.pil_image_j8 = QImage(image_path_j8)
        self.fcku8_J2G(self.pil_image_j8)
        self.timer.timeout.connect(lambda: self.fcku8_J2G(self.pil_image_j8))
        self.timer.start(10)

    def display_J2G9(self):
        # global image_path_j1, image_path_j2, image_path_j3, image_path_j4, image_path_j5, image_path_j6, image_path_j7, image_path_j8, image_path_j9
        global image_path_j9
        self.pil_image_j9 = QImage(image_path_j9)
        self.fcku9_J2G(self.pil_image_j9)
        self.timer.timeout.connect(lambda: self.fcku9_J2G(self.pil_image_j9))
        self.timer.start(10)

    def fcku1_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku2_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku3_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku4_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku5_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku6_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku7_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku8_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def fcku9_J2G(self, fckimage):
        pil_image = self.m_resize_J2R(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_J2R(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def JFWC(self):
        global image_path_j1
        image_path_j1='JFWC.jpg'
        self.display_J2G1()

    def PJJDWC(self):
        global image_path_j2
        image_path_j2='PJJDWC.jpg'
        self.display_J2G2()

    def PJJDBFBWC(self):
        global image_path_j3
        image_path_j3='PJJDBFBWC.jpg'
        self.display_J2G3()

    def JDXS(self):
        global image_path_j4
        image_path_j4='JDXS.jpg'
        self.display_J2G4()

    def ZWSJDWC(self):
        global image_path_j5
        image_path_j5 = 'ZWSJDWC.jpg'
        self.display_J2G5()

    def XEBDXS(self):
        global image_path_j6
        image_path_j6 = 'XEBDXS.jpg'
        self.display_J2G6()

    def JSFCFS(self):
        global image_path_j7
        image_path_j7 = 'JSFCFS.jpg'
        self.display_J2G7()

    def FCL(self):
        global image_path_j8
        image_path_j8 = 'FCL.jpg'
        self.display_J2G8()

    def JFGWC(self):
        global image_path_j9
        image_path_j9 = 'JFGWC.jpg'
        self.display_J2G9()

    def display_J2R1(self):
        global image_path_jr1
        self.pil_image1 = QImage(image_path_jr1)
        self.fcku_J2R1(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_J2R1(self.pil_image1))
        self.timer.start(10)

    def fcku_J2R1(self, fckimage):
        pil_image = self.m_resize_J2R1(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_J2R1(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def J2R1(self):
        global image_path_jr1
        image_path_jr1='PJJDWC_r.jpg'
        self.display_J2R1()

    def display_J2R2(self):
        global image_path_jr2
        self.pil_image1 = QImage(image_path_jr2)
        self.fcku_J2R2(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_J2R2(self.pil_image1))
        self.timer.start(10)

    def fcku_J2R2(self, fckimage):
        pil_image = self.m_resize_J2R2(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_J2R2(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def J2R2(self):
        global image_path_jr2
        image_path_jr2='ZWSJDWC_r.jpg'
        self.display_J2R2()

    def display_J2R3(self):
        global image_path_jr3
        self.pil_image1 = QImage(image_path_jr3)
        self.fcku_J2R3(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_J2R3(self.pil_image1))
        self.timer.start(10)

    def fcku_J2R3(self, fckimage):
        pil_image = self.m_resize_J2R3(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_J2R3(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def J2R3(self):
        global image_path_jr3
        image_path_jr3='JFGWC_r.jpg'
        self.display_J2R3()

    def display_FSBH(self):
        global image_path_fsbh
        self.pil_image1 = QImage(image_path_fsbh)
        self.fcku_FSBH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_FSBH(self.pil_image1))
        self.timer.start(10)

    def fcku_FSBH(self, fckimage):
        pil_image = self.m_resize_FSBH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_FSBH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def FSBH(self):
        global image_path_fsbh
        image_path_fsbh='FSBH.jpg'
        self.display_FSBH()

    def display_CJ(self):
        global image_path_cj
        self.pil_image1 = QImage(image_path_cj)
        self.fcku_CJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_CJ(self.pil_image1))
        self.timer.start(10)

    def fcku_CJ(self, fckimage):
        pil_image = self.m_resize_CJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_CJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def CJ(self):
        global image_path_cj
        image_path_cj='CJ.jpg'
        self.display_CJ()

    def display_GBYSKJ(self):
        global image_path_gbyskj
        self.pil_image1 = QImage(image_path_gbyskj)
        self.fcku_GBYSKJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_GBYSKJ(self.pil_image1))
        self.timer.start(10)

    def fcku_GBYSKJ(self, fckimage):
        pil_image = self.m_resize_GBYSKJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_GBYSKJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def GBYSKJ(self):
        global image_path_gbyskj
        image_path_gbyskj='GBYSKJ.jpg'
        self.display_GBYSKJ()

    def display_SIG(self):
        global image_path_SIG
        self.pil_image1 = QImage(image_path_SIG)
        self.fcku_SIG(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_SIG(self.pil_image1))
        self.timer.start(10)

    def fcku_SIG(self, fckimage):
        pil_image = self.m_resize_SIG(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_SIG(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def SIG(self):
        global image_path_SIG
        image_path_SIG='Sigmoid.jpg'
        self.display_SIG()

    def display_FZ(self):
        global image_path_FZ
        self.pil_image1 = QImage(image_path_FZ)
        self.fcku_FZ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_FZ(self.pil_image1))
        self.timer.start(10)

    def fcku_FZ(self, fckimage):
        pil_image = self.m_resize_FZ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_FZ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def FZ(self):
        global image_path_FZ
        image_path_FZ='FZ.jpg'
        self.display_FZ()

    def display_HDT(self):
        global image_path_HDT
        self.pil_image1 = QImage(image_path_HDT)
        self.fcku_HDT(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_HDT(self.pil_image1))
        self.timer.start(10)

    def fcku_HDT(self, fckimage):
        pil_image = self.m_resize_HDT(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_HDT(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def HDT(self):
        global image_path_HDT
        image_path_HDT='HDT.jpg'
        self.display_HDT()

    def display_GAMMA(self):
        global image_path_GAMMA
        self.pil_image1 = QImage(image_path_GAMMA)
        self.fcku_GAMMA(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_GAMMA(self.pil_image1))
        self.timer.start(10)

    def fcku_GAMMA(self, fckimage):
        pil_image = self.m_resize_GAMMA(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_GAMMA(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def GAMMA(self):
        global image_path_GAMMA
        image_path_GAMMA='GAMMA.jpg'
        self.display_GAMMA()

    def display_XXDBD(self):
        global image_path_XXDBD
        self.pil_image1 = QImage(image_path_XXDBD)
        self.fcku_XXDBD(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_XXDBD(self.pil_image1))
        self.timer.start(10)

    def fcku_XXDBD(self, fckimage):
        pil_image = self.m_resize_XXDBD(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_XXDBD(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def XXDBD(self):
        global image_path_XXDBD
        image_path_XXDBD='XXDBD.jpg'
        self.display_XXDBD()

    def display_GSZY(self):
        global image_path_GSZY
        self.pil_image1 = QImage(image_path_GSZY)
        self.fcku_GSZY(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_GSZY(self.pil_image1))
        self.timer.start(10)

    def fcku_GSZY(self, fckimage):
        pil_image = self.m_resize_GSZY(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_GSZY(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def GSZY(self):
        global image_path_GSZY
        image_path_GSZY='GSZY.jpg'
        self.display_GSZY()

    def display_GSMH(self):
        global image_path_GSMH
        self.pil_image1 = QImage(image_path_GSMH)
        self.fcku_GSMH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_GSMH(self.pil_image1))
        self.timer.start(10)

    def fcku_GSMH(self, fckimage):
        pil_image = self.m_resize_GSMH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_GSMH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def GSMH(self):
        global image_path_GSMH
        image_path_GSMH='GSMH.jpg'
        self.display_GSMH()

    def display_PJMH(self):
        global image_path_PJMH
        self.pil_image1 = QImage(image_path_PJMH)
        self.fcku_PJMH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_PJMH(self.pil_image1))
        self.timer.start(10)

    def fcku_PJMH(self, fckimage):
        pil_image = self.m_resize_PJMH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_PJMH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def PJMH(self):
        global image_path_PJMH
        image_path_PJMH='PJMH.jpg'
        self.display_PJMH()

    def display_ZZMH(self):
        global image_path_ZZMH
        self.pil_image1 = QImage(image_path_ZZMH)
        self.fcku_ZZMH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_ZZMH(self.pil_image1))
        self.timer.start(10)

    def fcku_ZZMH(self, fckimage):
        pil_image = self.m_resize_ZZMH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_ZZMH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def ZZMH(self):
        global image_path_ZZMH
        image_path_ZZMH='ZZMH.jpg'
        self.display_ZZMH()

    def display_YDMH(self):
        global image_path_YDMH
        self.pil_image1 = QImage(image_path_YDMH)
        self.fcku_YDMH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_YDMH(self.pil_image1))
        self.timer.start(10)

    def fcku_YDMH(self, fckimage):
        pil_image = self.m_resize_YDMH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_YDMH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def YDMH(self):
        global image_path_YDMH
        image_path_YDMH='YDMH.jpg'
        self.display_YDMH()

    def display_SBMH(self):
        global image_path_SBMH
        self.pil_image1 = QImage(image_path_SBMH)
        self.fcku_SBMH(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_SBMH(self.pil_image1))
        self.timer.start(10)

    def fcku_SBMH(self, fckimage):
        pil_image = self.m_resize_SBMH(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_SBMH(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def SBMH(self):
        global image_path_SBMH
        image_path_SBMH='SBMH.jpg'
        self.display_SBMH()

    def display_SCKJ(self):
        global image_path_SCKJ
        self.pil_image1 = QImage(image_path_SCKJ)
        self.fcku_SCKJ(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_SCKJ(self.pil_image1))
        self.timer.start(10)

    def fcku_SCKJ(self, fckimage):
        pil_image = self.m_resize_SCKJ(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_SCKJ(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def SCKJ(self):
        global image_path_SCKJ
        image_path_SCKJ='SCKJ.jpg'
        self.display_SCKJ()

    def display_SJSDHBHD(self):
        global image_path_SJSDHBHD
        self.pil_image1 = QImage(image_path_SJSDHBHD)
        self.fcku_SJSDHBHD(self.pil_image1)
        self.timer.timeout.connect(lambda: self.fcku_SJSDHBHD(self.pil_image1))
        self.timer.start(10)

    def fcku_SJSDHBHD(self, fckimage):
        pil_image = self.m_resize_SJSDHBHD(self.label_DC.width(), self.label_DC.height(), fckimage)
        pixmap = QPixmap.fromImage(pil_image)
        self.label_DC.setPixmap(pixmap)

    def m_resize_SJSDHBHD(self, w_box, h_box, pil_image):
        w, h = pil_image.width(), pil_image.height()
        f1 = 1.0 * w_box / w
        f2 = 1.0 * h_box / h
        factor = min([f1, f2])
        width = int(w * factor)
        height = int(h * factor)
        return pil_image.scaled(width, height)

    def SJSDHBHD(self):
        global image_path_SJSDHBHD
        image_path_SJSDHBHD='SJSDBHD.jpg'
        self.display_SJSDHBHD()

